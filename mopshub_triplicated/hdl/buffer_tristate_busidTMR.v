/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/buffer_tristate_busidTMR.v                                                    *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 03/04/2022 20:08:31                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/triplicated/mopshub_top_canakari_ftrim/hdl *
 * cmd     : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/tmrg-master/bin/tmrg -vv -c tmrg.cfg   *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: buffer_tristate_busid.v                                                                *
 *           Git SHA           : File not in git repository!                                        *
 *           Modification time : 2022-03-28 18:32:55                                                *
 *           File Size         : 1314                                                               *
 *           MD5 hash          : 9e7a8df4050993e7cc234169b148f574                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module buffer_tristate_busidTMR(
  input wire  clkA ,
  input wire  clkB ,
  input wire  clkC ,
  input wire  rstA ,
  input wire  rstB ,
  input wire  rstC ,
  input wire [4:0] data_tra_in0A ,
  input wire [4:0] data_tra_in0B ,
  input wire [4:0] data_tra_in0C ,
  input wire [4:0] data_tra_in1A ,
  input wire [4:0] data_tra_in1B ,
  input wire [4:0] data_tra_in1C ,
  input wire [4:0] data_tra_in2A ,
  input wire [4:0] data_tra_in2B ,
  input wire [4:0] data_tra_in2C ,
  input wire [4:0] data_tra_in3A ,
  input wire [4:0] data_tra_in3B ,
  input wire [4:0] data_tra_in3C ,
  input wire  buffer_en0A ,
  input wire  buffer_en0B ,
  input wire  buffer_en0C ,
  input wire  buffer_en1A ,
  input wire  buffer_en1B ,
  input wire  buffer_en1C ,
  input wire  buffer_en2A ,
  input wire  buffer_en2B ,
  input wire  buffer_en2C ,
  input wire  buffer_en3A ,
  input wire  buffer_en3B ,
  input wire  buffer_en3C ,
  output wire [4:0] data_tra_outA ,
  output wire [4:0] data_tra_outB ,
  output wire [4:0] data_tra_outC 
);
reg  [4:0] data_tra_regA ;
reg  [4:0] data_tra_regB ;
reg  [4:0] data_tra_regC ;
initial
  data_tra_regA =  5'h0;
initial
  data_tra_regB =  5'h0;
initial
  data_tra_regC =  5'h0;

always @( posedge clkA )
  begin
    if (!rstA)
      data_tra_regA <= 5'd0;
    else
      begin
        if (buffer_en0A)
          data_tra_regA <= data_tra_in0A;
        else
          if (buffer_en1A)
            data_tra_regA <= data_tra_in1A;
          else
            if (buffer_en2A)
              data_tra_regA <= data_tra_in2A;
            else
              if (buffer_en3A)
                data_tra_regA <= data_tra_in3A;
              else
                data_tra_regA <= data_tra_regA;
      end
  end

always @( posedge clkB )
  begin
    if (!rstB)
      data_tra_regB <= 5'd0;
    else
      begin
        if (buffer_en0B)
          data_tra_regB <= data_tra_in0B;
        else
          if (buffer_en1B)
            data_tra_regB <= data_tra_in1B;
          else
            if (buffer_en2B)
              data_tra_regB <= data_tra_in2B;
            else
              if (buffer_en3B)
                data_tra_regB <= data_tra_in3B;
              else
                data_tra_regB <= data_tra_regB;
      end
  end

always @( posedge clkC )
  begin
    if (!rstC)
      data_tra_regC <= 5'd0;
    else
      begin
        if (buffer_en0C)
          data_tra_regC <= data_tra_in0C;
        else
          if (buffer_en1C)
            data_tra_regC <= data_tra_in1C;
          else
            if (buffer_en2C)
              data_tra_regC <= data_tra_in2C;
            else
              if (buffer_en3C)
                data_tra_regC <= data_tra_in3C;
              else
                data_tra_regC <= data_tra_regC;
      end
  end
assign data_tra_outA =  data_tra_regA;
assign data_tra_outB =  data_tra_regB;
assign data_tra_outC =  data_tra_regC;
endmodule

