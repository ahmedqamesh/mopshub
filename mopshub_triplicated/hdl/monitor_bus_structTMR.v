/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/monitor_bus_structTMR.v                                                       *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 16/08/2022 12:58:32                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/mopshub_top_board_canakari_ftrim/hdl   *
 * cmd     : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/tmrg-master/bin/tmrg -c tmrg.cfg -vvv  *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: monitor_bus_struct.v                                                                   *
 *           Git SHA           : File not in git repository!                                        *
 *           Modification time : 2022-08-16 10:17:34.959332                                         *
 *           File Size         : 14577                                                              *
 *           MD5 hash          : c55f768c3979ea7cf2a64eb62e46e439                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module monitor_busTMR(
  input wire  clk ,
  input wire [7:0] data_init ,
  input wire [7:0] data_tra_spi_out ,
  input wire  miso ,
  input wire [4:0] n_buses ,
  input wire  rst ,
  input wire  rst_mon_cnt ,
  input wire [7:0] spi_id ,
  input wire [7:0] spi_reg ,
  input wire [7:0] spi_select ,
  input wire  start_mon_cnt ,
  input wire  start_mon_init ,
  input wire  start_read_miso ,
  input wire  transceive ,
  output wire [31:0] data_rec_spi_in ,
  output reg  end_mon_cntA ,
  output reg  end_mon_cntB ,
  output reg  end_mon_cntC ,
  output wire  end_read_miso ,
  output wire [4:0] mon_bus_cnt_active ,
  output wire  mosi ,
  output wire  sck ,
  output wire  w_Master_TX_Ready 
);
wire rstC;
wire rstB;
wire rstA;
wire [4:0] n_busesC;
wire [4:0] n_busesB;
wire [4:0] n_busesA;
wire [4:0] mon_bus_cntC;
wire [4:0] mon_bus_cntB;
wire [4:0] mon_bus_cntA;
wire fifo_emptyC;
wire fifo_emptyB;
wire fifo_emptyA;
wire clkC;
wire clkB;
wire clkA;
wor renaTmrError;
wire rena;
wor clk_enTmrError;
wire clk_en;
wire SPI_MODE;
reg  clk_enA ;
reg  clk_enB ;
reg  clk_enC ;
wire fifo_empty;
wire full;
wire [4:0] mon_bus_cnt;
wire [7:0] o_RX_Byte;
wire o_RX_DV;
reg  renaA ;
reg  renaB ;
reg  renaC ;
wire [7:0] rxdat;
wire [7:0] txdat;
reg  [7:0] mw_spi_bus_fiforeg_cval0 ;
reg  [7:0] mw_spi_bus_fiforeg_cval1 ;
reg  [7:0] mw_spi_bus_fiforeg_cval2 ;
reg  [7:0] mw_spi_bus_fiforeg_cval3 ;
reg  [7:0] mw_spi_bus_fiforeg_cval4 ;
reg  [7:0] mw_spi_bus_fiforeg_cval5 ;
reg  [7:0] mw_spi_bus_fiforeg_cval6 ;
reg  [7:0] mw_spi_bus_fiforeg_cval7 ;
reg  [7:0] mw_spi_bus_fiforeg_cval8 ;
reg  [7:0] mw_spi_bus_fiforeg_cval9 ;
reg  [7:0] mw_spi_bus_fiforeg_cval10 ;
reg  [7:0] mw_spi_bus_fiforeg_cval11 ;
reg  [7:0] mw_spi_bus_fiforeg_cval12 ;
reg  [7:0] mw_spi_bus_fiforeg_cval13 ;
reg  [7:0] mw_spi_bus_fiforeg_cval14 ;
reg  [7:0] mw_spi_bus_fiforeg_cval15 ;
reg  [7:0] mw_spi_bus_fiforeg_cval16 ;
reg  [7:0] mw_spi_bus_fiforeg_cval17 ;
reg  [7:0] mw_spi_bus_fiforeg_cval18 ;
reg  [7:0] mw_spi_bus_fiforeg_cval19 ;
reg  [7:0] mw_spi_bus_fiforeg_cval20 ;
wire [7:0] mw_spi_bus_fiforeg_nval0;
wire [7:0] mw_spi_bus_fiforeg_nval1;
wire [7:0] mw_spi_bus_fiforeg_nval2;
wire [7:0] mw_spi_bus_fiforeg_nval3;
wire [7:0] mw_spi_bus_fiforeg_nval4;
wire [7:0] mw_spi_bus_fiforeg_nval5;
wire [7:0] mw_spi_bus_fiforeg_nval6;
wire [7:0] mw_spi_bus_fiforeg_nval7;
wire [7:0] mw_spi_bus_fiforeg_nval8;
wire [7:0] mw_spi_bus_fiforeg_nval9;
wire [7:0] mw_spi_bus_fiforeg_nval10;
wire [7:0] mw_spi_bus_fiforeg_nval11;
wire [7:0] mw_spi_bus_fiforeg_nval12;
wire [7:0] mw_spi_bus_fiforeg_nval13;
wire [7:0] mw_spi_bus_fiforeg_nval14;
wire [7:0] mw_spi_bus_fiforeg_nval15;
wire [7:0] mw_spi_bus_fiforeg_nval16;
wire [7:0] mw_spi_bus_fiforeg_nval17;
wire [7:0] mw_spi_bus_fiforeg_nval18;
wire [7:0] mw_spi_bus_fiforeg_nval19;
wire [7:0] mw_spi_bus_fiforeg_nval20;
wire mw_spi_bus_fifotemp_rena;
wire mw_spi_bus_fifotemp_wena;
wire mw_spi_bus_fifotemp_full;
wire mw_spi_bus_fifotemp_empty;
reg  [4:0] mw_spi_bus_fifoaddr_cval ;
wire [4:0] mw_spi_bus_fifoaddr_nval;

bit_counterTMR bit_counter_trim (
    .ext_rst(rst_mon_cnt),
    .rst(rst),
    .data_out(mon_bus_cnt),
    .clk(clk),
    .cnt_enable(start_mon_cnt)
    );

buffer_rec_spi_dataTMR buffer_rec_spi_data0 (
    .clk(clk),
    .rst(rst),
    .buffer_en(start_read_miso),
    .spi_id_in(spi_id),
    .spi_reg(spi_reg),
    .data_rec_in(rxdat),
    .spi_select(spi_select),
    .end_read_miso(end_read_miso),
    .data_rec_out(data_rec_spi_in)
    );

spi_master_mopshubTMR spi_master_mopshub_monitor (
    .i_Rst_L(rst),
    .i_Clk(clk),
    .SPI_MODE(SPI_MODE),
    .i_TX_Byte(txdat),
    .i_TX_DV(transceive),
    .o_TX_Ready(w_Master_TX_Ready),
    .o_RX_DV(o_RX_DV),
    .o_RX_Byte(o_RX_Byte),
    .o_SPI_Clk(sck),
    .i_SPI_MISO(miso),
    .o_SPI_MOSI(mosi)
    );
assign SPI_MODE =  1'b0;
initial
  end_mon_cntA =  1'b0;
initial
  end_mon_cntB =  1'b0;
initial
  end_mon_cntC =  1'b0;
initial
  clk_enA =  1'b1;
initial
  clk_enB =  1'b1;
initial
  clk_enC =  1'b1;
assign mon_bus_cnt_active =  (start_mon_init==1) ? mon_bus_cnt : spi_select[4:0] ;
assign txdat =  (start_mon_init==1) ? data_init : data_tra_spi_out;

always @( posedge clkA )
  begin
    if (!rstA)
      end_mon_cntA <= 0;
    else
      case (mon_bus_cntA)
        n_busesA : end_mon_cntA <= 1;
        default : end_mon_cntA <= 0;
      endcase
  end

always @( posedge clkB )
  begin
    if (!rstB)
      end_mon_cntB <= 0;
    else
      case (mon_bus_cntB)
        n_busesB : end_mon_cntB <= 1;
        default : end_mon_cntB <= 0;
      endcase
  end

always @( posedge clkC )
  begin
    if (!rstC)
      end_mon_cntC <= 0;
    else
      case (mon_bus_cntC)
        n_busesC : end_mon_cntC <= 1;
        default : end_mon_cntC <= 0;
      endcase
  end

always @( posedge clkA )
  begin
    if (!rstA)
      renaA <= 0;
    else
      if (!fifo_emptyA)
        renaA <= 1;
      else
        renaA <= 0;
  end

always @( posedge clkB )
  begin
    if (!rstB)
      renaB <= 0;
    else
      if (!fifo_emptyB)
        renaB <= 1;
      else
        renaB <= 0;
  end

always @( posedge clkC )
  begin
    if (!rstC)
      renaC <= 0;
    else
      if (!fifo_emptyC)
        renaC <= 1;
      else
        renaC <= 0;
  end
assign full =  mw_spi_bus_fifotemp_full;
assign fifo_empty =  mw_spi_bus_fifotemp_empty;
assign rxdat =  mw_spi_bus_fiforeg_cval0;
assign mw_spi_bus_fifotemp_rena =  rst&rena&~mw_spi_bus_fifotemp_empty;
assign mw_spi_bus_fifotemp_wena =  rst&o_RX_DV&~mw_spi_bus_fifotemp_full;
assign mw_spi_bus_fifotemp_empty =  (mw_spi_bus_fifoaddr_cval==0);
assign mw_spi_bus_fifotemp_full =  (mw_spi_bus_fifoaddr_cval==20);
assign mw_spi_bus_fifoaddr_nval =  (~ rst ) ? 0 : mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? mw_spi_bus_fifoaddr_cval : mw_spi_bus_fifoaddr_cval+1'b1 : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fifoaddr_cval-1'b1 : mw_spi_bus_fifoaddr_cval;

always @( posedge clk )
  begin : spi_bus_fifoseq_proc
    if (clk_en)
      mw_spi_bus_fifoaddr_cval =  mw_spi_bus_fifoaddr_nval;
  end

always @( posedge clk )
  begin : spi_bus_fifomove_proc
    if (clk_en)
      begin
        mw_spi_bus_fiforeg_cval0[7:0]  =  mw_spi_bus_fiforeg_nval0[7:0] ;
        mw_spi_bus_fiforeg_cval1[7:0]  =  mw_spi_bus_fiforeg_nval1[7:0] ;
        mw_spi_bus_fiforeg_cval2[7:0]  =  mw_spi_bus_fiforeg_nval2[7:0] ;
        mw_spi_bus_fiforeg_cval3[7:0]  =  mw_spi_bus_fiforeg_nval3[7:0] ;
        mw_spi_bus_fiforeg_cval4[7:0]  =  mw_spi_bus_fiforeg_nval4[7:0] ;
        mw_spi_bus_fiforeg_cval5[7:0]  =  mw_spi_bus_fiforeg_nval5[7:0] ;
        mw_spi_bus_fiforeg_cval6[7:0]  =  mw_spi_bus_fiforeg_nval6[7:0] ;
        mw_spi_bus_fiforeg_cval7[7:0]  =  mw_spi_bus_fiforeg_nval7[7:0] ;
        mw_spi_bus_fiforeg_cval8[7:0]  =  mw_spi_bus_fiforeg_nval8[7:0] ;
        mw_spi_bus_fiforeg_cval9[7:0]  =  mw_spi_bus_fiforeg_nval9[7:0] ;
        mw_spi_bus_fiforeg_cval10[7:0]  =  mw_spi_bus_fiforeg_nval10[7:0] ;
        mw_spi_bus_fiforeg_cval11[7:0]  =  mw_spi_bus_fiforeg_nval11[7:0] ;
        mw_spi_bus_fiforeg_cval12[7:0]  =  mw_spi_bus_fiforeg_nval12[7:0] ;
        mw_spi_bus_fiforeg_cval13[7:0]  =  mw_spi_bus_fiforeg_nval13[7:0] ;
        mw_spi_bus_fiforeg_cval14[7:0]  =  mw_spi_bus_fiforeg_nval14[7:0] ;
        mw_spi_bus_fiforeg_cval15[7:0]  =  mw_spi_bus_fiforeg_nval15[7:0] ;
        mw_spi_bus_fiforeg_cval16[7:0]  =  mw_spi_bus_fiforeg_nval16[7:0] ;
        mw_spi_bus_fiforeg_cval17[7:0]  =  mw_spi_bus_fiforeg_nval17[7:0] ;
        mw_spi_bus_fiforeg_cval18[7:0]  =  mw_spi_bus_fiforeg_nval18[7:0] ;
        mw_spi_bus_fiforeg_cval19[7:0]  =  mw_spi_bus_fiforeg_nval19[7:0] ;
        mw_spi_bus_fiforeg_cval20[7:0]  =  mw_spi_bus_fiforeg_nval20[7:0] ;
      end
  end
assign mw_spi_bus_fiforeg_nval0[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==0) ? o_RX_Byte : mw_spi_bus_fiforeg_cval1[7:0]  : mw_spi_bus_fiforeg_cval0[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval1[7:0]  : mw_spi_bus_fiforeg_cval0[7:0] ;
assign mw_spi_bus_fiforeg_nval1[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==1) ? o_RX_Byte : mw_spi_bus_fiforeg_cval2[7:0]  : (mw_spi_bus_fifoaddr_cval==0) ? o_RX_Byte : mw_spi_bus_fiforeg_cval1[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval2[7:0]  : mw_spi_bus_fiforeg_cval1[7:0] ;
assign mw_spi_bus_fiforeg_nval2[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==2) ? o_RX_Byte : mw_spi_bus_fiforeg_cval3[7:0]  : (mw_spi_bus_fifoaddr_cval==1) ? o_RX_Byte : mw_spi_bus_fiforeg_cval2[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval3[7:0]  : mw_spi_bus_fiforeg_cval2[7:0] ;
assign mw_spi_bus_fiforeg_nval3[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==3) ? o_RX_Byte : mw_spi_bus_fiforeg_cval4[7:0]  : (mw_spi_bus_fifoaddr_cval==2) ? o_RX_Byte : mw_spi_bus_fiforeg_cval3[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval4[7:0]  : mw_spi_bus_fiforeg_cval3[7:0] ;
assign mw_spi_bus_fiforeg_nval4[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==4) ? o_RX_Byte : mw_spi_bus_fiforeg_cval5[7:0]  : (mw_spi_bus_fifoaddr_cval==3) ? o_RX_Byte : mw_spi_bus_fiforeg_cval4[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval5[7:0]  : mw_spi_bus_fiforeg_cval4[7:0] ;
assign mw_spi_bus_fiforeg_nval5[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==5) ? o_RX_Byte : mw_spi_bus_fiforeg_cval6[7:0]  : (mw_spi_bus_fifoaddr_cval==4) ? o_RX_Byte : mw_spi_bus_fiforeg_cval5[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval6[7:0]  : mw_spi_bus_fiforeg_cval5[7:0] ;
assign mw_spi_bus_fiforeg_nval6[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==6) ? o_RX_Byte : mw_spi_bus_fiforeg_cval7[7:0]  : (mw_spi_bus_fifoaddr_cval==5) ? o_RX_Byte : mw_spi_bus_fiforeg_cval6[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval7[7:0]  : mw_spi_bus_fiforeg_cval6[7:0] ;
assign mw_spi_bus_fiforeg_nval7[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==7) ? o_RX_Byte : mw_spi_bus_fiforeg_cval8[7:0]  : (mw_spi_bus_fifoaddr_cval==6) ? o_RX_Byte : mw_spi_bus_fiforeg_cval7[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval8[7:0]  : mw_spi_bus_fiforeg_cval7[7:0] ;
assign mw_spi_bus_fiforeg_nval8[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==8) ? o_RX_Byte : mw_spi_bus_fiforeg_cval9[7:0]  : (mw_spi_bus_fifoaddr_cval==7) ? o_RX_Byte : mw_spi_bus_fiforeg_cval8[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval9[7:0]  : mw_spi_bus_fiforeg_cval8[7:0] ;
assign mw_spi_bus_fiforeg_nval9[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==9) ? o_RX_Byte : mw_spi_bus_fiforeg_cval10[7:0]  : (mw_spi_bus_fifoaddr_cval==8) ? o_RX_Byte : mw_spi_bus_fiforeg_cval9[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval10[7:0]  : mw_spi_bus_fiforeg_cval9[7:0] ;
assign mw_spi_bus_fiforeg_nval10[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==10) ? o_RX_Byte : mw_spi_bus_fiforeg_cval11[7:0]  : (mw_spi_bus_fifoaddr_cval==9) ? o_RX_Byte : mw_spi_bus_fiforeg_cval10[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval11[7:0]  : mw_spi_bus_fiforeg_cval10[7:0] ;
assign mw_spi_bus_fiforeg_nval11[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==11) ? o_RX_Byte : mw_spi_bus_fiforeg_cval12[7:0]  : (mw_spi_bus_fifoaddr_cval==10) ? o_RX_Byte : mw_spi_bus_fiforeg_cval11[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval12[7:0]  : mw_spi_bus_fiforeg_cval11[7:0] ;
assign mw_spi_bus_fiforeg_nval12[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==12) ? o_RX_Byte : mw_spi_bus_fiforeg_cval13[7:0]  : (mw_spi_bus_fifoaddr_cval==11) ? o_RX_Byte : mw_spi_bus_fiforeg_cval12[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval13[7:0]  : mw_spi_bus_fiforeg_cval12[7:0] ;
assign mw_spi_bus_fiforeg_nval13[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==13) ? o_RX_Byte : mw_spi_bus_fiforeg_cval14[7:0]  : (mw_spi_bus_fifoaddr_cval==12) ? o_RX_Byte : mw_spi_bus_fiforeg_cval13[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval14[7:0]  : mw_spi_bus_fiforeg_cval13[7:0] ;
assign mw_spi_bus_fiforeg_nval14[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==14) ? o_RX_Byte : mw_spi_bus_fiforeg_cval15[7:0]  : (mw_spi_bus_fifoaddr_cval==13) ? o_RX_Byte : mw_spi_bus_fiforeg_cval14[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval15[7:0]  : mw_spi_bus_fiforeg_cval14[7:0] ;
assign mw_spi_bus_fiforeg_nval15[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==15) ? o_RX_Byte : mw_spi_bus_fiforeg_cval16[7:0]  : (mw_spi_bus_fifoaddr_cval==14) ? o_RX_Byte : mw_spi_bus_fiforeg_cval15[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval16[7:0]  : mw_spi_bus_fiforeg_cval15[7:0] ;
assign mw_spi_bus_fiforeg_nval16[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==16) ? o_RX_Byte : mw_spi_bus_fiforeg_cval17[7:0]  : (mw_spi_bus_fifoaddr_cval==15) ? o_RX_Byte : mw_spi_bus_fiforeg_cval16[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval17[7:0]  : mw_spi_bus_fiforeg_cval16[7:0] ;
assign mw_spi_bus_fiforeg_nval17[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==17) ? o_RX_Byte : mw_spi_bus_fiforeg_cval18[7:0]  : (mw_spi_bus_fifoaddr_cval==16) ? o_RX_Byte : mw_spi_bus_fiforeg_cval17[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval18[7:0]  : mw_spi_bus_fiforeg_cval17[7:0] ;
assign mw_spi_bus_fiforeg_nval18[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==18) ? o_RX_Byte : mw_spi_bus_fiforeg_cval19[7:0]  : (mw_spi_bus_fifoaddr_cval==17) ? o_RX_Byte : mw_spi_bus_fiforeg_cval18[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval19[7:0]  : mw_spi_bus_fiforeg_cval18[7:0] ;
assign mw_spi_bus_fiforeg_nval19[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? (mw_spi_bus_fifoaddr_cval==19) ? o_RX_Byte : mw_spi_bus_fiforeg_cval20[7:0]  : (mw_spi_bus_fifoaddr_cval==18) ? o_RX_Byte : mw_spi_bus_fiforeg_cval19[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval20[7:0]  : mw_spi_bus_fiforeg_cval19[7:0] ;
assign mw_spi_bus_fiforeg_nval20[7:0]  =  mw_spi_bus_fifotemp_wena ? mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval20[7:0]  : (mw_spi_bus_fifoaddr_cval==19) ? o_RX_Byte : mw_spi_bus_fiforeg_cval20[7:0]  : mw_spi_bus_fifotemp_rena ? mw_spi_bus_fiforeg_cval20[7:0]  : mw_spi_bus_fiforeg_cval20[7:0] ;

majorityVoter clk_enVoter (
    .inA(clk_enA),
    .inB(clk_enB),
    .inC(clk_enC),
    .out(clk_en),
    .tmrErr(clk_enTmrError)
    );

majorityVoter renaVoter (
    .inA(renaA),
    .inB(renaB),
    .inC(renaC),
    .out(rena),
    .tmrErr(renaTmrError)
    );

fanout clkFanout (
    .in(clk),
    .outA(clkA),
    .outB(clkB),
    .outC(clkC)
    );

fanout fifo_emptyFanout (
    .in(fifo_empty),
    .outA(fifo_emptyA),
    .outB(fifo_emptyB),
    .outC(fifo_emptyC)
    );

fanout #(.WIDTH(5)) mon_bus_cntFanout (
    .in(mon_bus_cnt),
    .outA(mon_bus_cntA),
    .outB(mon_bus_cntB),
    .outC(mon_bus_cntC)
    );

fanout #(.WIDTH(5)) n_busesFanout (
    .in(n_buses),
    .outA(n_busesA),
    .outB(n_busesB),
    .outC(n_busesC)
    );

fanout rstFanout (
    .in(rst),
    .outA(rstA),
    .outB(rstB),
    .outC(rstC)
    );
endmodule

