/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/DiffTMR.v                                                                     *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 06/10/2022 13:52:32                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Documents/GitHub/mopshub_triplicated/triplicated/mopshub_top_board/hdl *
 * cmd     : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/tmrg-master/bin/tmrg -vv -c tmrg.cfg   *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: Diff.v                                                                                 *
 *           Git SHA           : c110441b08b692cc54ebd4a3b84a2599430e8f93                           *
 *           Modification time : 2022-08-23 20:29:21                                                *
 *           File Size         : 706                                                                *
 *           MD5 hash          : afab5fa7b780ee03fe5b65a62ad03c96                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module DiffTMR #(
  parameter  Width  = 8
)(
  input wire  CLK ,
  input wire  Reset ,
  input wire  Enable ,
  input wire signed [Width-1:0] a_i ,
  output wire signed [Width-1:0] diff_o 
);
wire signed  [Width-1:0] a_iC;
wire signed  [Width-1:0] a_iB;
wire signed  [Width-1:0] a_iA;
wire signed  [Width-1:0] a_delayedVC;
wire signed  [Width-1:0] a_delayedVB;
wire signed  [Width-1:0] a_delayedVA;
wire ResetC;
wire ResetB;
wire ResetA;
wire EnableC;
wire EnableB;
wire EnableA;
wire CLKC;
wire CLKB;
wire CLKA;
wor a_delayedTmrError;
wire signed  [Width-1:0] a_delayed;
reg signed  [Width-1:0] a_delayedA ;
reg signed  [Width-1:0] a_delayedB ;
reg signed  [Width-1:0] a_delayedC ;
wire signed [Width-1:0] a_delayedV =  a_delayed;

always @( posedge CLKA or negedge ResetA )
  begin
    if (ResetA==1'b0)
      begin
        a_delayedA <= 0;
      end
    else
      if (EnableA)
        begin
          a_delayedA <= a_iA;
        end
      else
        begin
          a_delayedA <= a_delayedVA;
        end
  end

always @( posedge CLKB or negedge ResetB )
  begin
    if (ResetB==1'b0)
      begin
        a_delayedB <= 0;
      end
    else
      if (EnableB)
        begin
          a_delayedB <= a_iB;
        end
      else
        begin
          a_delayedB <= a_delayedVB;
        end
  end

always @( posedge CLKC or negedge ResetC )
  begin
    if (ResetC==1'b0)
      begin
        a_delayedC <= 0;
      end
    else
      if (EnableC)
        begin
          a_delayedC <= a_iC;
        end
      else
        begin
          a_delayedC <= a_delayedVC;
        end
  end
assign diff_o =  a_i-a_delayedV;

majorityVoter #(.WIDTH(((Width-1)>(0)) ? ((Width-1)-(0)+1) : ((0)-(Width-1)+1))) a_delayedVoter (
    .inA(a_delayedA),
    .inB(a_delayedB),
    .inC(a_delayedC),
    .out(a_delayed),
    .tmrErr(a_delayedTmrError)
    );

fanout CLKFanout (
    .in(CLK),
    .outA(CLKA),
    .outB(CLKB),
    .outC(CLKC)
    );

fanout EnableFanout (
    .in(Enable),
    .outA(EnableA),
    .outB(EnableB),
    .outC(EnableC)
    );

fanout ResetFanout (
    .in(Reset),
    .outA(ResetA),
    .outB(ResetB),
    .outC(ResetC)
    );

fanout #(.WIDTH(((Width-1)>(0)) ? ((Width-1)-(0)+1) : ((0)-(Width-1)+1))) a_delayedVFanout (
    .in(a_delayedV),
    .outA(a_delayedVA),
    .outB(a_delayedVB),
    .outC(a_delayedVC)
    );

fanout #(.WIDTH(((Width-1)>(0)) ? ((Width-1)-(0)+1) : ((0)-(Width-1)+1))) a_iFanout (
    .in(a_i),
    .outA(a_iA),
    .outB(a_iB),
    .outC(a_iC)
    );
endmodule

