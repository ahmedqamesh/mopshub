/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/DiffTMR.v                                                                     *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 03/04/2022 20:08:29                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/triplicated/mopshub_top_canakari_ftrim/hdl *
 * cmd     : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/tmrg-master/bin/tmrg -vv -c tmrg.cfg   *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: Diff.v                                                                                 *
 *           Git SHA           : File not in git repository!                                        *
 *           Modification time : 2022-03-29 13:49:21                                                *
 *           File Size         : 692                                                                *
 *           MD5 hash          : 022a47ce2370f7eb7de7576e4a0bc5f7                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module DiffTMR #(
  parameter  Width  = 8
)(
  input wire  CLKA ,
  input wire  CLKB ,
  input wire  CLKC ,
  input wire  ResetA ,
  input wire  ResetB ,
  input wire  ResetC ,
  input wire  EnableA ,
  input wire  EnableB ,
  input wire  EnableC ,
  input wire signed [Width-1:0] a_iA ,
  input wire signed [Width-1:0] a_iB ,
  input wire signed [Width-1:0] a_iC ,
  output wire signed [Width-1:0] diff_oA ,
  output wire signed [Width-1:0] diff_oB ,
  output wire signed [Width-1:0] diff_oC 
);
wor a_delayedTmrErrorC;
wire signed  [Width-1:0] a_delayedVotedC;
wor a_delayedTmrErrorB;
wire signed  [Width-1:0] a_delayedVotedB;
wor a_delayedTmrErrorA;
wire signed  [Width-1:0] a_delayedVotedA;
reg signed  [Width-1:0] a_delayedA ;
reg signed  [Width-1:0] a_delayedB ;
reg signed  [Width-1:0] a_delayedC ;

always @( posedge CLKA or negedge ResetA )
  begin
    if (ResetA==1'b0)
      begin
        a_delayedA <= 0;
      end
    else
      if (EnableA)
        begin
          a_delayedA <= a_iA;
        end
      else
        begin
          a_delayedA <= a_delayedVotedA;
        end
  end

always @( posedge CLKB or negedge ResetB )
  begin
    if (ResetB==1'b0)
      begin
        a_delayedB <= 0;
      end
    else
      if (EnableB)
        begin
          a_delayedB <= a_iB;
        end
      else
        begin
          a_delayedB <= a_delayedVotedB;
        end
  end

always @( posedge CLKC or negedge ResetC )
  begin
    if (ResetC==1'b0)
      begin
        a_delayedC <= 0;
      end
    else
      if (EnableC)
        begin
          a_delayedC <= a_iC;
        end
      else
        begin
          a_delayedC <= a_delayedVotedC;
        end
  end
assign diff_oA =  a_iA-a_delayedVotedA;
assign diff_oB =  a_iB-a_delayedVotedB;
assign diff_oC =  a_iC-a_delayedVotedC;

majorityVoter #(.WIDTH(((Width-1)>(0)) ? ((Width-1)-(0)+1) : ((0)-(Width-1)+1))) a_delayedVoterA (
    .inA(a_delayedA),
    .inB(a_delayedB),
    .inC(a_delayedC),
    .out(a_delayedVotedA),
    .tmrErr(a_delayedTmrErrorA)
    );

majorityVoter #(.WIDTH(((Width-1)>(0)) ? ((Width-1)-(0)+1) : ((0)-(Width-1)+1))) a_delayedVoterB (
    .inA(a_delayedA),
    .inB(a_delayedB),
    .inC(a_delayedC),
    .out(a_delayedVotedB),
    .tmrErr(a_delayedTmrErrorB)
    );

majorityVoter #(.WIDTH(((Width-1)>(0)) ? ((Width-1)-(0)+1) : ((0)-(Width-1)+1))) a_delayedVoterC (
    .inA(a_delayedA),
    .inB(a_delayedB),
    .inC(a_delayedC),
    .out(a_delayedVotedC),
    .tmrErr(a_delayedTmrErrorC)
    );
endmodule

