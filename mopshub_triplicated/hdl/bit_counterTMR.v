/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/bit_counterTMR.v                                                              *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 06/10/2022 13:52:35                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Documents/GitHub/mopshub_triplicated/triplicated/mopshub_top_board/hdl *
 * cmd     : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/tmrg-master/bin/tmrg -vv -c tmrg.cfg   *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: bit_counter.v                                                                          *
 *           Git SHA           : c110441b08b692cc54ebd4a3b84a2599430e8f93                           *
 *           Modification time : 2022-10-05 20:23:26                                                *
 *           File Size         : 857                                                                *
 *           MD5 hash          : 0e680ef2c8f45df0a8cb6dbd17372863                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module bit_counterTMR(
  input wire  ext_rst ,
  input wire  rst ,
  output wire [4:0] data_out ,
  input wire  clk ,
  input wire  cnt_enable 
);
wire rstC;
wire rstB;
wire rstA;
wire ext_rstC;
wire ext_rstB;
wire ext_rstA;
wire [4:0] data_outC;
wire [4:0] data_outB;
wire [4:0] data_outA;
wire cnt_enableC;
wire cnt_enableB;
wire cnt_enableA;
wire clkC;
wire clkB;
wire clkA;
wor data_out_regTmrError;
wire [4:0] data_out_reg;
reg  [4:0] data_out_regA ;
reg  [4:0] data_out_regB ;
reg  [4:0] data_out_regC ;
assign data_out =  data_out_reg;

always @( posedge clkA )
  if (!rstA|ext_rstA)
    begin
      data_out_regA <= 5'b00000;
    end
  else
    if (cnt_enableA)
      begin
        data_out_regA <= data_outA+1;
      end

always @( posedge clkB )
  if (!rstB|ext_rstB)
    begin
      data_out_regB <= 5'b00000;
    end
  else
    if (cnt_enableB)
      begin
        data_out_regB <= data_outB+1;
      end

always @( posedge clkC )
  if (!rstC|ext_rstC)
    begin
      data_out_regC <= 5'b00000;
    end
  else
    if (cnt_enableC)
      begin
        data_out_regC <= data_outC+1;
      end

majorityVoter #(.WIDTH(5)) data_out_regVoter (
    .inA(data_out_regA),
    .inB(data_out_regB),
    .inC(data_out_regC),
    .out(data_out_reg),
    .tmrErr(data_out_regTmrError)
    );

fanout clkFanout (
    .in(clk),
    .outA(clkA),
    .outB(clkB),
    .outC(clkC)
    );

fanout cnt_enableFanout (
    .in(cnt_enable),
    .outA(cnt_enableA),
    .outB(cnt_enableB),
    .outC(cnt_enableC)
    );

fanout #(.WIDTH(5)) data_outFanout (
    .in(data_out),
    .outA(data_outA),
    .outB(data_outB),
    .outC(data_outC)
    );

fanout ext_rstFanout (
    .in(ext_rst),
    .outA(ext_rstA),
    .outB(ext_rstB),
    .outC(ext_rstC)
    );

fanout rstFanout (
    .in(rst),
    .outA(rstA),
    .outB(rstB),
    .outC(rstC)
    );
endmodule

