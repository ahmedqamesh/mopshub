/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/ready_counterTMR.v                                                            *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 05/12/2022 13:28:31                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Documents/GitHub/mopshub_triplicated/triplicated/mopshub_top_board_16/hdl *
 * cmd     : /mnt/c/Users/Lucas/Documents/GitHub/mopshub_triplicated/tmrg-master/bin/tmrg -vv -c    *
 *           tmrg.cfg                                                                               *
 * tmrg rev: b25f042058e4e97751df2a0933c24aeadd5a78a5                                               *
 *                                                                                                  *
 * src file: ready_counter.v                                                                        *
 *           Git SHA           : b25f042058e4e97751df2a0933c24aeadd5a78a5 (?? ready_counter.v)      *
 *           Modification time : 2022-11-10 21:23:26                                                *
 *           File Size         : 869                                                                *
 *           MD5 hash          : bfc0eacf5d99554c5f1e415e9e7e7994                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module ready_counterTMR(
  input wire  clk ,
  input wire  rstn ,
  input wire  enable ,
  input wire  en_osc_trim ,
  output wire  ready 
);
wire rstnC;
wire rstnB;
wire rstnA;
wire enableC;
wire enableB;
wire enableA;
wire en_osc_trimC;
wire en_osc_trimB;
wire en_osc_trimA;
wire [9:0] counterVC;
wire [9:0] counterVB;
wire [9:0] counterVA;
wire clkC;
wire clkB;
wire clkA;
wor counterTmrError;
wire [9:0] counter;
reg  [9:0] counterA ;
reg  [9:0] counterB ;
reg  [9:0] counterC ;
wire [9:0] counterV =  counter;

always @( posedge clkA or negedge rstnA )
  begin
    if (rstnA==0)
      counterA <= 10'd659;
    else
      if (en_osc_trimA&enableA)
        counterA <= counterVA-1;
      else
        if (~en_osc_trimA)
          counterA <= 10'd659;
        else
          counterA <= counterVA;
  end

always @( posedge clkB or negedge rstnB )
  begin
    if (rstnB==0)
      counterB <= 10'd659;
    else
      if (en_osc_trimB&enableB)
        counterB <= counterVB-1;
      else
        if (~en_osc_trimB)
          counterB <= 10'd659;
        else
          counterB <= counterVB;
  end

always @( posedge clkC or negedge rstnC )
  begin
    if (rstnC==0)
      counterC <= 10'd659;
    else
      if (en_osc_trimC&enableC)
        counterC <= counterVC-1;
      else
        if (~en_osc_trimC)
          counterC <= 10'd659;
        else
          counterC <= counterVC;
  end
assign ready =  (counterV==10'd0) ? 1'b1 : 1'b0;

majorityVoter #(.WIDTH(10)) counterVoter (
    .inA(counterA),
    .inB(counterB),
    .inC(counterC),
    .out(counter),
    .tmrErr(counterTmrError)
    );

fanout clkFanout (
    .in(clk),
    .outA(clkA),
    .outB(clkB),
    .outC(clkC)
    );

fanout #(.WIDTH(10)) counterVFanout (
    .in(counterV),
    .outA(counterVA),
    .outB(counterVB),
    .outC(counterVC)
    );

fanout en_osc_trimFanout (
    .in(en_osc_trim),
    .outA(en_osc_trimA),
    .outB(en_osc_trimB),
    .outC(en_osc_trimC)
    );

fanout enableFanout (
    .in(enable),
    .outA(enableA),
    .outB(enableB),
    .outC(enableC)
    );

fanout rstnFanout (
    .in(rstn),
    .outA(rstnA),
    .outB(rstnB),
    .outC(rstnC)
    );
endmodule

