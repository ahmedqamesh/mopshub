/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/tra_mes_bufTMR.v                                                              *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 03/04/2022 20:08:57                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/triplicated/mopshub_top_canakari_ftrim/hdl *
 * cmd     : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/tmrg-master/bin/tmrg -vv -c tmrg.cfg   *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: tra_mes_buf.v                                                                          *
 *           Git SHA           : File not in git repository!                                        *
 *           Modification time : 2022-03-28 18:32:19                                                *
 *           File Size         : 998                                                                *
 *           MD5 hash          : d5507212e51efd09e7f6ed2e1ac689dd                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module buffer_tra_dataTMR(
  input wire  clkA ,
  input wire  clkB ,
  input wire  clkC ,
  input wire [75:0] data_tra_inA ,
  input wire [75:0] data_tra_inB ,
  input wire [75:0] data_tra_inC ,
  input wire  buffer_enA ,
  input wire  buffer_enB ,
  input wire  buffer_enC ,
  input wire  rstA ,
  input wire  rstB ,
  input wire  rstC ,
  output wire [4:0] data_tra_selectA ,
  output wire [4:0] data_tra_selectB ,
  output wire [4:0] data_tra_selectC ,
  output wire [75:0] data_tra_outA ,
  output wire [75:0] data_tra_outB ,
  output wire [75:0] data_tra_outC 
);
reg  [75:0] data_tra_regA ;
reg  [75:0] data_tra_regB ;
reg  [75:0] data_tra_regC ;
reg  [4:0] data_tra_select_regA ;
reg  [4:0] data_tra_select_regB ;
reg  [4:0] data_tra_select_regC ;
initial
  begin
    data_tra_regA =  76'd0;
    data_tra_select_regA =  5'd0;
  end
initial
  begin
    data_tra_regB =  76'd0;
    data_tra_select_regB =  5'd0;
  end
initial
  begin
    data_tra_regC =  76'd0;
    data_tra_select_regC =  5'd0;
  end

always @( posedge clkA )
  begin
    if (!rstA)
      data_tra_select_regA <= 5'd0;
    else
      if (buffer_enA)
        data_tra_select_regA <= data_tra_inA[28:24] ;
      else
        data_tra_select_regA <= data_tra_select_regA;
  end

always @( posedge clkB )
  begin
    if (!rstB)
      data_tra_select_regB <= 5'd0;
    else
      if (buffer_enB)
        data_tra_select_regB <= data_tra_inB[28:24] ;
      else
        data_tra_select_regB <= data_tra_select_regB;
  end

always @( posedge clkC )
  begin
    if (!rstC)
      data_tra_select_regC <= 5'd0;
    else
      if (buffer_enC)
        data_tra_select_regC <= data_tra_inC[28:24] ;
      else
        data_tra_select_regC <= data_tra_select_regC;
  end

always @( posedge clkA )
  begin
    if (!rstA)
      data_tra_regA <= 76'd0;
    else
      if (buffer_enA)
        data_tra_regA <= data_tra_inA;
      else
        data_tra_regA <= data_tra_regA;
  end

always @( posedge clkB )
  begin
    if (!rstB)
      data_tra_regB <= 76'd0;
    else
      if (buffer_enB)
        data_tra_regB <= data_tra_inB;
      else
        data_tra_regB <= data_tra_regB;
  end

always @( posedge clkC )
  begin
    if (!rstC)
      data_tra_regC <= 76'd0;
    else
      if (buffer_enC)
        data_tra_regC <= data_tra_inC;
      else
        data_tra_regC <= data_tra_regC;
  end
assign data_tra_outA =  data_tra_regA;
assign data_tra_outB =  data_tra_regB;
assign data_tra_outC =  data_tra_regC;
assign data_tra_selectA =  data_tra_select_regA;
assign data_tra_selectB =  data_tra_select_regB;
assign data_tra_selectC =  data_tra_select_regC;
endmodule

