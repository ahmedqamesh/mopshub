//
// Module mopshub_triplicated.llc2TMR.struct
//
// Created:
//          by - dcs.dcs (localhost)
//          at - 09:18:09 05/10/22
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//


module llc2TMR( 
   // Port Declarations
   input   wire            clockA, 
   input   wire            clockB, 
   input   wire            clockC, 
   input   wire            resetA, 
   input   wire            resetB, 
   input   wire            resetC, 
   input   wire            initreqrA, 
   input   wire            initreqrB, 
   input   wire            initreqrC, 
   input   wire            traregbitA, 
   input   wire            traregbitB, 
   input   wire            traregbitC, 
   input   wire            sucfrecvcA, 
   input   wire            sucfrecvcB, 
   input   wire            sucfrecvcC, 
   input   wire            sucftrancA, 
   input   wire            sucftrancB, 
   input   wire            sucftrancC, 
   input   wire            sucfrecvrA, 
   input   wire            sucfrecvrB, 
   input   wire            sucfrecvrC, 
   input   wire            sucftranrA, 
   input   wire            sucftranrB, 
   input   wire            sucftranrC, 
   input   wire            extendedA, 
   input   wire            extendedB, 
   input   wire            extendedC, 
   input   wire    [28:0]  accmaskregA, 
   input   wire    [28:0]  accmaskregB, 
   input   wire    [28:0]  accmaskregC, 
   input   wire    [28:0]  idregA, 
   input   wire    [28:0]  idregB, 
   input   wire    [28:0]  idregC, 
   input   wire    [28:0]  idrecA, 
   input   wire    [28:0]  idrecB, 
   input   wire    [28:0]  idrecC, 
   output  wire            activtregA, 
   output  wire            activtregB, 
   output  wire            activtregC, 
   output  wire            activrregA, 
   output  wire            activrregB, 
   output  wire            activrregC, 
   output  wire            activgregA, 
   output  wire            activgregB, 
   output  wire            activgregC, 
   output  wire            ldrecidA, 
   output  wire            ldrecidB, 
   output  wire            ldrecidC, 
   output  wire            sucftranoA, 
   output  wire            sucftranoB, 
   output  wire            sucftranoC, 
   output  wire            sucfrecvoA, 
   output  wire            sucfrecvoB, 
   output  wire            sucfrecvoC, 
   output  wire            overflowoA, 
   output  wire            overflowoB, 
   output  wire            overflowoC, 
   output  wire            transA, 
   output  wire            transB, 
   output  wire            transC, 
   output  wire            loadA, 
   output  wire            loadB, 
   output  wire            loadC, 
   output  wire            actvtsftA, 
   output  wire            actvtsftB, 
   output  wire            actvtsftC, 
   output  wire            actvtcapA, 
   output  wire            actvtcapB, 
   output  wire            actvtcapC, 
   output  wire            resettraA, 
   output  wire            resettraB, 
   output  wire            resettraC, 
   output  wire            resetallA, 
   output  wire            resetallB, 
   output  wire            resetallC
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire   equal_iA;
wire   equal_iB;
wire   equal_iC;


// Instances 
equal_id2TMR equal_id_2( 
   .extendedA   (extendedA), 
   .extendedB   (extendedB), 
   .extendedC   (extendedC), 
   .idregisterA (idregA), 
   .idregisterB (idregB), 
   .idregisterC (idregC), 
   .idreceivedA (idrecA), 
   .idreceivedB (idrecB), 
   .idreceivedC (idrecC), 
   .accmaskA    (accmaskregA), 
   .accmaskB    (accmaskregB), 
   .accmaskC    (accmaskregC), 
   .equalA      (equal_iA), 
   .equalB      (equal_iB), 
   .equalC      (equal_iC)
); 

llc_fsm2TMR llc_fsm_2( 
   .clockA     (clockA), 
   .clockB     (clockB), 
   .clockC     (clockC), 
   .resetA     (resetA), 
   .resetB     (resetB), 
   .resetC     (resetC), 
   .initreqrA  (initreqrA), 
   .initreqrB  (initreqrB), 
   .initreqrC  (initreqrC), 
   .traregbitA (traregbitA), 
   .traregbitB (traregbitB), 
   .traregbitC (traregbitC), 
   .sucfrecvcA (sucfrecvcA), 
   .sucfrecvcB (sucfrecvcB), 
   .sucfrecvcC (sucfrecvcC), 
   .sucftrancA (sucftrancA), 
   .sucftrancB (sucftrancB), 
   .sucftrancC (sucftrancC), 
   .sucfrecvrA (sucfrecvrA), 
   .sucfrecvrB (sucfrecvrB), 
   .sucfrecvrC (sucfrecvrC), 
   .sucftranrA (sucftranrA), 
   .sucftranrB (sucftranrB), 
   .sucftranrC (sucftranrC), 
   .equalA     (equal_iA), 
   .equalB     (equal_iB), 
   .equalC     (equal_iC), 
   .activtregA (activtregA), 
   .activtregB (activtregB), 
   .activtregC (activtregC), 
   .activrregA (activrregA), 
   .activrregB (activrregB), 
   .activrregC (activrregC), 
   .activgregA (activgregA), 
   .activgregB (activgregB), 
   .activgregC (activgregC), 
   .ldrecidA   (ldrecidA), 
   .ldrecidB   (ldrecidB), 
   .ldrecidC   (ldrecidC), 
   .sucftranoA (sucftranoA), 
   .sucftranoB (sucftranoB), 
   .sucftranoC (sucftranoC), 
   .sucfrecvoA (sucfrecvoA), 
   .sucfrecvoB (sucfrecvoB), 
   .sucfrecvoC (sucfrecvoC), 
   .overflowoA (overflowoA), 
   .overflowoB (overflowoB), 
   .overflowoC (overflowoC), 
   .transA     (transA), 
   .transB     (transB), 
   .transC     (transC), 
   .loadA      (loadA), 
   .loadB      (loadB), 
   .loadC      (loadC), 
   .actvtsftA  (actvtsftA), 
   .actvtsftB  (actvtsftB), 
   .actvtsftC  (actvtsftC), 
   .actvtcapA  (actvtcapA), 
   .actvtcapB  (actvtcapB), 
   .actvtcapC  (actvtcapC), 
   .resettraA  (resettraA), 
   .resettraB  (resettraB), 
   .resettraC  (resettraC), 
   .resetallA  (resetallA), 
   .resetallB  (resetallB), 
   .resetallC  (resetallC)
); 


endmodule // llc2TMR

