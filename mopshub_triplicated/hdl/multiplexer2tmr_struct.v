//
// Module mopshub_triplicated.multiplexer2TMR.struct
//
// Created:
//          by - dcs.dcs (localhost)
//          at - 09:18:06 05/10/22
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//


module multiplexer2TMR #(
   // synopsys template
   parameter system_id = 16'hCA05
)
( 
   // Port Declarations
   output  wire    [15:0]  readdataA, 
   output  wire    [15:0]  readdataB, 
   output  wire    [15:0]  readdataC, 
   input   wire    [15:0]  writedataA, 
   input   wire    [15:0]  writedataB, 
   input   wire    [15:0]  writedataC, 
   input   wire    [4:0]   addressA, 
   input   wire    [4:0]   addressB, 
   input   wire    [4:0]   addressC, 
   input   wire            csA, 
   input   wire            csB, 
   input   wire            csC, 
   input   wire            read_nA, 
   input   wire            read_nB, 
   input   wire            read_nC, 
   input   wire            write_nA, 
   input   wire            write_nB, 
   input   wire            write_nC, 
   input   wire    [15:0]  preregrA, 
   input   wire    [15:0]  preregrB, 
   input   wire    [15:0]  preregrC, 
   input   wire    [15:0]  genregrA, 
   input   wire    [15:0]  genregrB, 
   input   wire    [15:0]  genregrC, 
   input   wire    [15:0]  intregrA, 
   input   wire    [15:0]  intregrB, 
   input   wire    [15:0]  intregrC, 
   input   wire    [15:0]  traconrA, 
   input   wire    [15:0]  traconrB, 
   input   wire    [15:0]  traconrC, 
   input   wire    [15:0]  traar1rA, 
   input   wire    [15:0]  traar1rB, 
   input   wire    [15:0]  traar1rC, 
   input   wire    [15:0]  traar2rA, 
   input   wire    [15:0]  traar2rB, 
   input   wire    [15:0]  traar2rC, 
   input   wire    [15:0]  trad01rA, 
   input   wire    [15:0]  trad01rB, 
   input   wire    [15:0]  trad01rC, 
   input   wire    [15:0]  trad23rA, 
   input   wire    [15:0]  trad23rB, 
   input   wire    [15:0]  trad23rC, 
   input   wire    [15:0]  trad45rA, 
   input   wire    [15:0]  trad45rB, 
   input   wire    [15:0]  trad45rC, 
   input   wire    [15:0]  trad67rA, 
   input   wire    [15:0]  trad67rB, 
   input   wire    [15:0]  trad67rC, 
   input   wire    [15:0]  recconrA, 
   input   wire    [15:0]  recconrB, 
   input   wire    [15:0]  recconrC, 
   input   wire    [15:0]  accmask1rA, 
   input   wire    [15:0]  accmask1rB, 
   input   wire    [15:0]  accmask1rC, 
   input   wire    [15:0]  accmask2rA, 
   input   wire    [15:0]  accmask2rB, 
   input   wire    [15:0]  accmask2rC, 
   input   wire    [15:0]  recar1rA, 
   input   wire    [15:0]  recar1rB, 
   input   wire    [15:0]  recar1rC, 
   input   wire    [15:0]  recar2rA, 
   input   wire    [15:0]  recar2rB, 
   input   wire    [15:0]  recar2rC, 
   input   wire    [15:0]  recd01rA, 
   input   wire    [15:0]  recd01rB, 
   input   wire    [15:0]  recd01rC, 
   input   wire    [15:0]  recd23rA, 
   input   wire    [15:0]  recd23rB, 
   input   wire    [15:0]  recd23rC, 
   input   wire    [15:0]  recd45rA, 
   input   wire    [15:0]  recd45rB, 
   input   wire    [15:0]  recd45rC, 
   input   wire    [15:0]  recd67rA, 
   input   wire    [15:0]  recd67rB, 
   input   wire    [15:0]  recd67rC, 
   input   wire    [15:0]  fehlregrA, 
   input   wire    [15:0]  fehlregrB, 
   input   wire    [15:0]  fehlregrC, 
   output  wire    [15:0]  regbusA, 
   output  wire    [15:0]  regbusB, 
   output  wire    [15:0]  regbusC, 
   output  wire            prescaA, 
   output  wire            prescaB, 
   output  wire            prescaC, 
   output  wire            genregaA, 
   output  wire            genregaB, 
   output  wire            genregaC, 
   output  wire            intregaA, 
   output  wire            intregaB, 
   output  wire            intregaC, 
   output  wire            traconaA, 
   output  wire            traconaB, 
   output  wire            traconaC, 
   output  wire            traar1aA, 
   output  wire            traar1aB, 
   output  wire            traar1aC, 
   output  wire            traar2aA, 
   output  wire            traar2aB, 
   output  wire            traar2aC, 
   output  wire            trad01aA, 
   output  wire            trad01aB, 
   output  wire            trad01aC, 
   output  wire            trad23aA, 
   output  wire            trad23aB, 
   output  wire            trad23aC, 
   output  wire            trad45aA, 
   output  wire            trad45aB, 
   output  wire            trad45aC, 
   output  wire            trad67aA, 
   output  wire            trad67aB, 
   output  wire            trad67aC, 
   output  wire            recconaA, 
   output  wire            recconaB, 
   output  wire            recconaC, 
   output  wire            recar1aA, 
   output  wire            recar1aB, 
   output  wire            recar1aC, 
   output  wire            recar2aA, 
   output  wire            recar2aB, 
   output  wire            recar2aC, 
   output  wire            accmask1aA, 
   output  wire            accmask1aB, 
   output  wire            accmask1aC, 
   output  wire            accmask2aA, 
   output  wire            accmask2aB, 
   output  wire            accmask2aC
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire  [15:0] data_regout_iA;
wire  [15:0] data_regout_iB;
wire  [15:0] data_regout_iC;
wire  [15:0] writedata_iA;
wire  [15:0] writedata_iB;
wire  [15:0] writedata_iC;
reg   [15:0] data_tri_outA;
reg   [15:0] data_tri_outB;
reg   [15:0] data_tri_outC;
reg          activ_iA;
reg          activ_iB;
reg          activ_iC;
wire         write_sigA;
wire         read_sigA;
wire         write_sigB;
wire         read_sigB;
wire         write_sigC;
wire         read_sigC;


// Instances 
read_mux2TMR #(system_id) read_multiplexer( 
   .addressA   (addressA), 
   .addressB   (addressB), 
   .addressC   (addressC), 
   .preregrA   (preregrA), 
   .preregrB   (preregrB), 
   .preregrC   (preregrC), 
   .genregrA   (genregrA), 
   .genregrB   (genregrB), 
   .genregrC   (genregrC), 
   .intregrA   (intregrA), 
   .intregrB   (intregrB), 
   .intregrC   (intregrC), 
   .traconrA   (traconrA), 
   .traconrB   (traconrB), 
   .traconrC   (traconrC), 
   .traar1rA   (traar1rA), 
   .traar1rB   (traar1rB), 
   .traar1rC   (traar1rC), 
   .traar2rA   (traar2rA), 
   .traar2rB   (traar2rB), 
   .traar2rC   (traar2rC), 
   .trad01rA   (trad01rA), 
   .trad01rB   (trad01rB), 
   .trad01rC   (trad01rC), 
   .trad23rA   (trad23rA), 
   .trad23rB   (trad23rB), 
   .trad23rC   (trad23rC), 
   .trad45rA   (trad45rA), 
   .trad45rB   (trad45rB), 
   .trad45rC   (trad45rC), 
   .trad67rA   (trad67rA), 
   .trad67rB   (trad67rB), 
   .trad67rC   (trad67rC), 
   .recconrA   (recconrA), 
   .recconrB   (recconrB), 
   .recconrC   (recconrC), 
   .accmask1rA (accmask1rA), 
   .accmask1rB (accmask1rB), 
   .accmask1rC (accmask1rC), 
   .accmask2rA (accmask2rA), 
   .accmask2rB (accmask2rB), 
   .accmask2rC (accmask2rC), 
   .recar1rA   (recar1rA), 
   .recar1rB   (recar1rB), 
   .recar1rC   (recar1rC), 
   .recar2rA   (recar2rA), 
   .recar2rB   (recar2rB), 
   .recar2rC   (recar2rC), 
   .recd01rA   (recd01rA), 
   .recd01rB   (recd01rB), 
   .recd01rC   (recd01rC), 
   .recd23rA   (recd23rA), 
   .recd23rB   (recd23rB), 
   .recd23rC   (recd23rC), 
   .recd45rA   (recd45rA), 
   .recd45rB   (recd45rB), 
   .recd45rC   (recd45rC), 
   .recd67rA   (recd67rA), 
   .recd67rB   (recd67rB), 
   .recd67rC   (recd67rC), 
   .fehlregrA  (fehlregrA), 
   .fehlregrB  (fehlregrB), 
   .fehlregrC  (fehlregrC), 
   .data_outA  (data_regout_iA), 
   .data_outB  (data_regout_iB), 
   .data_outC  (data_regout_iC)
); 

write_demux2TMR write_demultiplexer( 
   .addressA(addressA),
   .addressB(addressB),
   .addressC(addressC),
   .activ_inA(activ_iA),
   .activ_inB(activ_iB),
   .activ_inC(activ_iC),
   .activ_outA({intregaA,accmask1aA,accmask2aA,prescaA,genregaA,traconaA,traar1aA,traar2aA,trad01aA,trad23aA,trad45aA,trad67aA,recconaA,recar1aA,recar2aA}),
   .activ_outB({intregaB,accmask1aB,accmask2aB,prescaB,genregaB,traconaB,traar1aB,traar2aB,trad01aB,trad23aB,trad45aB,trad67aB,recconaB,recar1aB,recar2aB}),
   .activ_outC({intregaC,accmask1aC,accmask2aC,prescaC,genregaC,traconaC,traar1aC,traar2aC,trad01aC,trad23aC,trad45aC,trad67aC,recconaC,recar1aC,recar2aC})
); 

// HDL Embedded Text Block 1 eb1
assign regbusA =  writedata_iA;
assign regbusB =  writedata_iB;
assign regbusC =  writedata_iC;
assign readdataA =  data_tri_outA;
assign readdataB =  data_tri_outB;
assign readdataC =  data_tri_outC;
assign read_sigA =  csA&(~ read_nA );
assign read_sigB =  csB&(~ read_nB );
assign read_sigC =  csC&(~ read_nC );
assign write_sigA =  csA&(~ write_nA );
assign write_sigB =  csB&(~ write_nB );
assign write_sigC =  csC&(~ write_nC );
assign writedata_iA =  writedataA;
assign writedata_iB =  writedataB;
assign writedata_iC =  writedataC;
// HDL Embedded Text Block 2 eb2
always @( read_sigA or data_regout_iA )
  begin
    if (read_sigA==1'b1)
      data_tri_outA =  data_regout_iA;
    else
      data_tri_outA =  16'd0;
  end
// HDL Embedded Text Block 3 eb3
always @( read_sigB or data_regout_iB )
  begin
    if (read_sigB==1'b1)
      data_tri_outB =  data_regout_iB;
    else
      data_tri_outB =  16'd0;
  end
// HDL Embedded Text Block 4 eb4
always @( read_sigC or data_regout_iC )
  begin
    if (read_sigC==1'b1)
      data_tri_outC =  data_regout_iC;
    else
      data_tri_outC =  16'd0;
  end
// HDL Embedded Text Block 5 eb5
always @( write_sigA )
  begin
    if (write_sigA==1'b1)
      activ_iA =  1'b1;
    else
      activ_iA =  1'b0;
  end
// HDL Embedded Text Block 6 eb6
always @( write_sigB )
  begin
    if (write_sigB==1'b1)
      activ_iB =  1'b1;
    else
      activ_iB =  1'b0;
  end
// HDL Embedded Text Block 7 eb7
always @( write_sigC )
  begin
    if (write_sigC==1'b1)
      activ_iC =  1'b1;
    else
      activ_iC =  1'b0;
  end

endmodule // multiplexer2TMR

