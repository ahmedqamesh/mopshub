/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/timeoutrst_moduleTMR.v                                                        *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 16/08/2022 12:58:39                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/mopshub_top_board_canakari_ftrim/hdl   *
 * cmd     : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/tmrg-master/bin/tmrg -c tmrg.cfg -vvv  *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: timeoutrst_module.v                                                                    *
 *           Git SHA           : File not in git repository!                                        *
 *           Modification time : 2022-08-12 11:28:18                                                *
 *           File Size         : 814                                                                *
 *           MD5 hash          : 23b82a1f7eb4b0298f54586684b68009                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module timout_rstTMR(
  input wire  clk ,
  input wire  entimeout ,
  input wire [31:0] time_limit ,
  input wire  rst ,
  output wire  timeoutrst 
);
wire timeoutrstC;
wire timeoutrstB;
wire timeoutrstA;
wire [31:0] time_limitC;
wire [31:0] time_limitB;
wire [31:0] time_limitA;
wire rstC;
wire rstB;
wire rstA;
wire entimeoutC;
wire entimeoutB;
wire entimeoutA;
wire [31:0] counter_vC;
wire [31:0] counter_vB;
wire [31:0] counter_vA;
wire clkC;
wire clkB;
wire clkA;
wor counterTmrError;
wire [31:0] counter;
reg  [31:0] counterA ;
reg  [31:0] counterB ;
reg  [31:0] counterC ;
reg  timeoutrstregA ;
reg  timeoutrstregB ;
reg  timeoutrstregC ;
wire [31:0] counter_v =  counter;

always @( posedge clkA )
  begin
    if (!rstA)
      begin
        counterA <= 0;
      end
    else
      begin
        if (entimeoutA&!timeoutrstA)
          counterA <= {counter_vA+1};
        else
          begin
            counterA <= 0;
          end
      end
  end

always @( posedge clkB )
  begin
    if (!rstB)
      begin
        counterB <= 0;
      end
    else
      begin
        if (entimeoutB&!timeoutrstB)
          counterB <= {counter_vB+1};
        else
          begin
            counterB <= 0;
          end
      end
  end

always @( posedge clkC )
  begin
    if (!rstC)
      begin
        counterC <= 0;
      end
    else
      begin
        if (entimeoutC&!timeoutrstC)
          counterC <= {counter_vC+1};
        else
          begin
            counterC <= 0;
          end
      end
  end

always @( posedge clkA )
  begin
    if (counter_vA>=time_limitA)
      timeoutrstregA <= 1'b1;
    else
      timeoutrstregA <= 1'b0;
  end

always @( posedge clkB )
  begin
    if (counter_vB>=time_limitB)
      timeoutrstregB <= 1'b1;
    else
      timeoutrstregB <= 1'b0;
  end

always @( posedge clkC )
  begin
    if (counter_vC>=time_limitC)
      timeoutrstregC <= 1'b1;
    else
      timeoutrstregC <= 1'b0;
  end

majorityVoter #(.WIDTH(32)) counterVoter (
    .inA(counterA),
    .inB(counterB),
    .inC(counterC),
    .out(counter),
    .tmrErr(counterTmrError)
    );

fanout clkFanout (
    .in(clk),
    .outA(clkA),
    .outB(clkB),
    .outC(clkC)
    );

fanout #(.WIDTH(32)) counter_vFanout (
    .in(counter_v),
    .outA(counter_vA),
    .outB(counter_vB),
    .outC(counter_vC)
    );

fanout entimeoutFanout (
    .in(entimeout),
    .outA(entimeoutA),
    .outB(entimeoutB),
    .outC(entimeoutC)
    );

fanout rstFanout (
    .in(rst),
    .outA(rstA),
    .outB(rstB),
    .outC(rstC)
    );

fanout #(.WIDTH(32)) time_limitFanout (
    .in(time_limit),
    .outA(time_limitA),
    .outB(time_limitB),
    .outC(time_limitC)
    );

fanout timeoutrstFanout (
    .in(timeoutrst),
    .outA(timeoutrstA),
    .outB(timeoutrstB),
    .outC(timeoutrstC)
    );
endmodule

