/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/tseg_reg2TMR.v                                                                *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 16/08/2022 12:58:39                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/mopshub_top_board_canakari_ftrim/hdl   *
 * cmd     : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/tmrg-master/bin/tmrg -c tmrg.cfg -vvv  *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: tseg_reg2.v                                                                            *
 *           Git SHA           : File not in git repository!                                        *
 *           Modification time : 2022-03-29 13:49:21                                                *
 *           File Size         : 2220                                                               *
 *           MD5 hash          : 5deb88b2550709824f15c027eba323bc                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module tseg_reg2TMR(
  input wire  clockA ,
  input wire  clockB ,
  input wire  clockC ,
  input wire  resetA ,
  input wire  resetB ,
  input wire  resetC ,
  input wire [1:0] ctrlA ,
  input wire [1:0] ctrlB ,
  input wire [1:0] ctrlC ,
  input wire [2:0] tseg1A ,
  input wire [2:0] tseg1B ,
  input wire [2:0] tseg1C ,
  input wire [4:0] tseg1pcountA ,
  input wire [4:0] tseg1pcountB ,
  input wire [4:0] tseg1pcountC ,
  input wire [4:0] tseg1p1psjwA ,
  input wire [4:0] tseg1p1psjwB ,
  input wire [4:0] tseg1p1psjwC ,
  output wire [4:0] tseg1mplA ,
  output wire [4:0] tseg1mplB ,
  output wire [4:0] tseg1mplC 
);
wor tseg1mpl_iTmrErrorC;
wire [4:0] tseg1mpl_iVotedC;
wor tseg1mpl_iTmrErrorB;
wire [4:0] tseg1mpl_iVotedB;
wor tseg1mpl_iTmrErrorA;
wire [4:0] tseg1mpl_iVotedA;
reg  [4:0] tseg1mpl_iA ;
reg  [4:0] tseg1mpl_iB ;
reg  [4:0] tseg1mpl_iC ;
assign tseg1mplA =  tseg1mpl_iVotedA;
assign tseg1mplB =  tseg1mpl_iVotedB;
assign tseg1mplC =  tseg1mpl_iVotedC;

always @( posedge clockA or negedge resetA )
  begin
    if (resetA==1'b0)
      tseg1mpl_iA <= 5'b00000;
    else
      begin
        case (ctrlA)
          2'b01 : tseg1mpl_iA <= {2'b00,tseg1A};
          2'b10 : tseg1mpl_iA <= tseg1pcountA;
          2'b11 : tseg1mpl_iA <= tseg1p1psjwA;
          default : tseg1mpl_iA <= tseg1mpl_iVotedA;
        endcase
      end
  end

always @( posedge clockB or negedge resetB )
  begin
    if (resetB==1'b0)
      tseg1mpl_iB <= 5'b00000;
    else
      begin
        case (ctrlB)
          2'b01 : tseg1mpl_iB <= {2'b00,tseg1B};
          2'b10 : tseg1mpl_iB <= tseg1pcountB;
          2'b11 : tseg1mpl_iB <= tseg1p1psjwB;
          default : tseg1mpl_iB <= tseg1mpl_iVotedB;
        endcase
      end
  end

always @( posedge clockC or negedge resetC )
  begin
    if (resetC==1'b0)
      tseg1mpl_iC <= 5'b00000;
    else
      begin
        case (ctrlC)
          2'b01 : tseg1mpl_iC <= {2'b00,tseg1C};
          2'b10 : tseg1mpl_iC <= tseg1pcountC;
          2'b11 : tseg1mpl_iC <= tseg1p1psjwC;
          default : tseg1mpl_iC <= tseg1mpl_iVotedC;
        endcase
      end
  end

majorityVoter #(.WIDTH(5)) tseg1mpl_iVoterA (
    .inA(tseg1mpl_iA),
    .inB(tseg1mpl_iB),
    .inC(tseg1mpl_iC),
    .out(tseg1mpl_iVotedA),
    .tmrErr(tseg1mpl_iTmrErrorA)
    );

majorityVoter #(.WIDTH(5)) tseg1mpl_iVoterB (
    .inA(tseg1mpl_iA),
    .inB(tseg1mpl_iB),
    .inC(tseg1mpl_iC),
    .out(tseg1mpl_iVotedB),
    .tmrErr(tseg1mpl_iTmrErrorB)
    );

majorityVoter #(.WIDTH(5)) tseg1mpl_iVoterC (
    .inA(tseg1mpl_iA),
    .inB(tseg1mpl_iB),
    .inC(tseg1mpl_iC),
    .out(tseg1mpl_iVotedC),
    .tmrErr(tseg1mpl_iTmrErrorC)
    );
endmodule

