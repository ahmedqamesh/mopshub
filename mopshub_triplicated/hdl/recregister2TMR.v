/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/recregister2TMR.v                                                             *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 05/12/2022 13:28:33                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Documents/GitHub/mopshub_triplicated/triplicated/mopshub_top_board_16/hdl *
 * cmd     : /mnt/c/Users/Lucas/Documents/GitHub/mopshub_triplicated/tmrg-master/bin/tmrg -vv -c    *
 *           tmrg.cfg                                                                               *
 * tmrg rev: b25f042058e4e97751df2a0933c24aeadd5a78a5                                               *
 *                                                                                                  *
 * src file: recregister2.v                                                                         *
 *           Git SHA           : b25f042058e4e97751df2a0933c24aeadd5a78a5 (?? recregister2.v)       *
 *           Modification time : 2022-11-10 21:22:58                                                *
 *           File Size         : 1694                                                               *
 *           MD5 hash          : 551a13d509468e59a8a24d90c780c59f                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module recregister2TMR(
  input wire  clk ,
  input wire  rst ,
  input wire  can ,
  input wire [7:0] regin1 ,
  input wire [7:0] regin2 ,
  output wire [15:0] regout 
);
wire rstC;
wire rstB;
wire rstA;
wire [15:0] regoutC;
wire [15:0] regoutB;
wire [15:0] regoutA;
wire [7:0] regin2C;
wire [7:0] regin2B;
wire [7:0] regin2A;
wire [7:0] regin1C;
wire [7:0] regin1B;
wire [7:0] regin1A;
wire clkC;
wire clkB;
wire clkA;
wire canC;
wire canB;
wire canA;
wor register_iTmrError;
wire [15:0] register_i;
reg  [15:0] register_iA ;
reg  [15:0] register_iB ;
reg  [15:0] register_iC ;
assign regout =  register_i;

always @( posedge clkA )
  begin
    if (rstA==1'b0)
      begin
        register_iA <= 16'd0;
      end
    else
      if (canA==1'b1)
        begin
          register_iA[15:8]  <= regin1A[7:0] ;
          register_iA[7:0]  <= regin2A[7:0] ;
        end
      else
        register_iA <= regoutA;
  end

always @( posedge clkB )
  begin
    if (rstB==1'b0)
      begin
        register_iB <= 16'd0;
      end
    else
      if (canB==1'b1)
        begin
          register_iB[15:8]  <= regin1B[7:0] ;
          register_iB[7:0]  <= regin2B[7:0] ;
        end
      else
        register_iB <= regoutB;
  end

always @( posedge clkC )
  begin
    if (rstC==1'b0)
      begin
        register_iC <= 16'd0;
      end
    else
      if (canC==1'b1)
        begin
          register_iC[15:8]  <= regin1C[7:0] ;
          register_iC[7:0]  <= regin2C[7:0] ;
        end
      else
        register_iC <= regoutC;
  end

majorityVoter #(.WIDTH(16)) register_iVoter (
    .inA(register_iA),
    .inB(register_iB),
    .inC(register_iC),
    .out(register_i),
    .tmrErr(register_iTmrError)
    );

fanout canFanout (
    .in(can),
    .outA(canA),
    .outB(canB),
    .outC(canC)
    );

fanout clkFanout (
    .in(clk),
    .outA(clkA),
    .outB(clkB),
    .outC(clkC)
    );

fanout #(.WIDTH(8)) regin1Fanout (
    .in(regin1),
    .outA(regin1A),
    .outB(regin1B),
    .outC(regin1C)
    );

fanout #(.WIDTH(8)) regin2Fanout (
    .in(regin2),
    .outA(regin2A),
    .outB(regin2B),
    .outC(regin2C)
    );

fanout #(.WIDTH(16)) regoutFanout (
    .in(regout),
    .outA(regoutA),
    .outB(regoutB),
    .outC(regoutC)
    );

fanout rstFanout (
    .in(rst),
    .outA(rstA),
    .outB(rstB),
    .outC(rstC)
    );
endmodule

