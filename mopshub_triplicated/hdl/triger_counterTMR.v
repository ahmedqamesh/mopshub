/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/triger_counterTMR.v                                                           *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 05/12/2022 13:28:38                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Documents/GitHub/mopshub_triplicated/triplicated/mopshub_top_board_16/hdl *
 * cmd     : /mnt/c/Users/Lucas/Documents/GitHub/mopshub_triplicated/tmrg-master/bin/tmrg -vv -c    *
 *           tmrg.cfg                                                                               *
 * tmrg rev: b25f042058e4e97751df2a0933c24aeadd5a78a5                                               *
 *                                                                                                  *
 * src file: triger_counter.v                                                                       *
 *           Git SHA           : b25f042058e4e97751df2a0933c24aeadd5a78a5 (?? triger_counter.v)     *
 *           Modification time : 2022-12-04 14:35:39                                                *
 *           File Size         : 931                                                                *
 *           MD5 hash          : 2559ffb9a9b534dabd376593e1acee17                                   *
 *                                                                                                  *
 ****************************************************************************************************/

`resetall 
`timescale  1ns/10ps
module triger_counterTMR(
  input wire  rst ,
  input wire  clk ,
  output wire  request_trig 
);
wire rstC;
wire rstB;
wire rstA;
wire request_trigC;
wire request_trigB;
wire request_trigA;
wire clkC;
wire clkB;
wire clkA;
wor request_cycle_cntTmrError;
wire [2:0] request_cycle_cnt;
reg  [2:0] cycles_cnt ;
reg  [2:0] request_cycle_cntA ;
reg  [2:0] request_cycle_cntB ;
reg  [2:0] request_cycle_cntC ;
initial
  cycles_cnt =  3'b100;
initial
  request_cycle_cntA =  3'b000;
initial
  request_cycle_cntB =  3'b000;
initial
  request_cycle_cntC =  3'b000;
wire [2:0] request_cycle_cntV =  request_cycle_cnt;

always @( posedge clkA )
  begin
    if (!rstA)
      request_cycle_cntA <= 3'b0;
    begin
      if (request_trigA==1)
        request_cycle_cntA <= 3'b0;
      else
        request_cycle_cntA <= request_cycle_cntA+1'b1;
    end
  end

always @( posedge clkB )
  begin
    if (!rstB)
      request_cycle_cntB <= 3'b0;
    begin
      if (request_trigB==1)
        request_cycle_cntB <= 3'b0;
      else
        request_cycle_cntB <= request_cycle_cntB+1'b1;
    end
  end

always @( posedge clkC )
  begin
    if (!rstC)
      request_cycle_cntC <= 3'b0;
    begin
      if (request_trigC==1)
        request_cycle_cntC <= 3'b0;
      else
        request_cycle_cntC <= request_cycle_cntC+1'b1;
    end
  end
assign request_trig =  (request_cycle_cnt==cycles_cnt) ? 1 : 0;

majorityVoter #(.WIDTH(3)) request_cycle_cntVoter (
    .inA(request_cycle_cntA),
    .inB(request_cycle_cntB),
    .inC(request_cycle_cntC),
    .out(request_cycle_cnt),
    .tmrErr(request_cycle_cntTmrError)
    );

fanout clkFanout (
    .in(clk),
    .outA(clkA),
    .outB(clkB),
    .outC(clkC)
    );

fanout request_trigFanout (
    .in(request_trig),
    .outA(request_trigA),
    .outB(request_trigB),
    .outC(request_trigC)
    );

fanout rstFanout (
    .in(rst),
    .outA(rstA),
    .outB(rstB),
    .outC(rstC)
    );
endmodule

