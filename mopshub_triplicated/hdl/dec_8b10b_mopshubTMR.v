/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/dec_8b10b_mopshubTMR.v                                                        *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 16/08/2022 12:58:14                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/mopshub_top_board_canakari_ftrim/hdl   *
 * cmd     : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/tmrg-master/bin/tmrg -c tmrg.cfg -vvv  *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: dec_8b10b_mopshub.v                                                                    *
 *           Git SHA           : File not in git repository!                                        *
 *           Modification time : 2022-08-12 11:04:45                                                *
 *           File Size         : 5957                                                               *
 *           MD5 hash          : 5630c1cc36a522c7e57c9c4c0045cf40                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module dec_8b10b_mopshubTMR(
  input  rst ,
  input  clk ,
  input [9:0] datain ,
  input  datain_valid ,
  output  ko ,
  output [7:0] dataout ,
  output  code_err ,
  output  disp_err 
);
wor ko_rTmrError;
wire ko_r;
wor dispin_rTmrError;
wire dispin_r;
wor disp_err_rTmrError;
wire disp_err_r;
wor dataout_rTmrError;
wire [7:0] dataout_r;
wor code_err_rTmrError;
wire code_err_r;
reg  dispin_rA ;
reg  dispin_rB ;
reg  dispin_rC ;
reg  disp_err_rA ;
reg  disp_err_rB ;
reg  disp_err_rC ;
reg  [7:0] dataout_rA ;
reg  [7:0] dataout_rB ;
reg  [7:0] dataout_rC ;
reg  ko_rA ;
reg  ko_rB ;
reg  ko_rC ;
reg  code_err_rA ;
reg  code_err_rB ;
reg  code_err_rC ;
wire dispin =  dispin_r;
wire ai =  datain[9] ;
wire bi =  datain[8] ;
wire ci =  datain[7] ;
wire di =  datain[6] ;
wire ei =  datain[5] ;
wire ii =  datain[4] ;
wire fi =  datain[3] ;
wire gi =  datain[2] ;
wire hi =  datain[1] ;
wire ji =  datain[0] ;
wire aeqb =  (ai&bi)|(! ai & ! bi );
wire ceqd =  (ci&di)|(! ci & ! di );
wire p22 =  (ai&bi&!ci&!di)|(ci&di&!ai&!bi)|(! aeqb & ! ceqd );
wire p13 =  (! aeqb & ! ci & ! di )|(! ceqd & ! ai & ! bi );
wire p31 =  (! aeqb & ci & di )|(! ceqd & ai & bi );
wire disp6a =  p31|(p22&dispin);
wire disp6a2 =  p31&dispin;
wire disp6a0 =  p13&!dispin;
wire disp6b =  (((ei&ii&!disp6a0)|(disp6a&(ei|ii))|disp6a2|(ei&ii&di))&(ei|ii|di));
wire p22bceeqi =  p22&bi&ci&(ei==ii);
wire p22bncneeqi =  p22&!bi&!ci&(ei==ii);
wire p13in =  p13&!ii;
wire p31i =  p31&ii;
wire p13dei =  p13&di&ei&ii;
wire p22aceeqi =  p22&ai&ci&(ei==ii);
wire p22ancneeqi =  p22&!ai&!ci&(ei==ii);
wire p13en =  p13&!ei;
wire anbnenin =  !ai&!bi&!ei&!ii;
wire abei =  ai&bi&ei&ii;
wire cndnenin =  !ci&!di&!ei&!ii;
wire compa =  p22bncneeqi|p31i|p13dei|p22ancneeqi|p13en|abei|cndnenin;
wire compb =  p22bceeqi|p31i|p13dei|p22aceeqi|p13en|abei|cndnenin;
wire compc =  p22bceeqi|p31i|p13dei|p22ancneeqi|p13en|anbnenin|cndnenin;
wire compd =  p22bncneeqi|p31i|p13dei|p22aceeqi|p13en|abei|cndnenin;
wire compe =  p22bncneeqi|p13in|p13dei|p22ancneeqi|p13en|anbnenin|cndnenin;
wire ao =  ai^compa;
wire bo =  bi^compb;
wire co =  ci^compc;
wire do =  di^compd;
wire eo =  ei^compe;
wire feqg =  (fi&gi)|(! fi & ! gi );
wire heqj =  (hi&ji)|(! hi & ! ji );
wire fghj22 =  (fi&gi&!hi&!ji)|(! fi & ! gi & hi & ji )|(! feqg & ! heqj );
wire fghjp13 =  (! feqg & ! hi & ! ji )|(! heqj & ! fi & ! gi );
wire fghjp31 =  ((! feqg )&hi&ji)|(! heqj & fi & gi );
wire dispout =  (fghjp31|(disp6b&fghj22)|(hi&ji))&(hi|ji);
wire ko_s =  ((ci&di&ei&ii)|(! ci & ! di & ! ei & ! ii )|(p13&!ei&ii&gi&hi&ji)|(p31&ei&!ii&!gi&!hi&!ji));
wire k28p =  !(ci|di|ei|ii);
wire fo =  (ji&!fi&(hi|!gi|k28p))|(fi&!ji&(! hi | gi | ! k28p ))|(k28p&gi&hi)|(! k28p & ! gi & ! hi );
wire go =  (ji&!fi&(hi|!gi|!k28p))|(fi&!ji&(! hi | gi | k28p ))|(! k28p & gi & hi )|(k28p&!gi&!hi);
wire ho =  ((ji^hi)&!((! fi & gi & ! hi & ji & ! k28p )|(! fi & gi & hi & ! ji & k28p )|(fi&!gi&!hi&ji&!k28p)|(fi&!gi&hi&!ji&k28p)))|(! fi & gi & hi & ji )|(fi&!gi&!hi&!ji);
wire disp6p =  (p31&(ei|ii))|(p22&ei&ii);
wire disp6n =  (p13&!(ei&ii))|(p22&!ei&!ii);
wire disp4p =  fghjp31;
wire disp4n =  fghjp13;
wire dispin_v =  dispin_r;
wire disp_err_r_v =  disp_err_r;
wire [7:0] dataout_r_v =  dataout_r;
wire ko_r_v =  ko_r;
wire code_err_r_v =  code_err_r;

always @( posedge clk or negedge rst )
  begin : output_proc
    if (rst==0)
      begin
        dispin_r <= 0;
        disp_err_r <= 0;
        dataout_r <= 0;
        ko_r <= 0;
        code_err_r <= 0;
      end
    else
      if (datain_valid==1)
        begin
          code_err_r <= ((ai&bi&ci&di)|(! ( ai|bi|ci|di ) ))|(p13&(! ei )&(! ii ))|(p31&ei&ii)|((fi&gi&hi&ji)|(! ( fi|gi|hi|ji ) ))|((ei&ii&fi&gi&hi)|(! ( ei|ii|fi|gi|hi ) ))|(((! ii )&ei&gi&hi&ji)|(! ( (! ii )|ei|gi|hi|ji ) ))|((((! ei )&(! ii )&gi&hi&ji)|(! ( (! ei )|(! ii )|gi|hi|ji ) ))&(! ( (ci&di&ei)|(! ( ci|di|ei ) ) ) ))|((! p31 )&ei&(! ii )&(! gi )&(! hi )&(! ji ))|((! p13 )&(! ei )&ii&gi&hi&ji);
          disp_err_r <= ((dispin&disp6p)|(disp6n&!dispin)|(dispin&!disp6n&fi&gi)|(dispin&ai&bi&ci)|(dispin&!disp6n&disp4p)|(! dispin & ! disp6p & ! fi & ! gi )|(! dispin & ! ai & ! bi & ! ci )|(! dispin & ! disp6p & disp4n )|(disp6p&disp4p)|(disp6n&disp4n));
          dispin_r <= dispout;
          dataout_r <= {ho,go,fo,eo,do,co,bo,ao};
          ko_r <= ko_s;
        end
      else
        begin
          dispin <= dispin_v;
          disp_err_r <= disp_err_r_v;
          dataout_r <= dataout_r_v;
          ko_r <= ko_r_v;
          code_err_r <= code_err_v;
        end
  end
assign disp_err =  disp_err_r;
assign dataout =  dataout_r;
assign ko =  ko_r;
assign code_err =  code_err_r;

majorityVoter code_err_rVoter (
    .inA(code_err_rA),
    .inB(code_err_rB),
    .inC(code_err_rC),
    .out(code_err_r),
    .tmrErr(code_err_rTmrError)
    );

majorityVoter #(.WIDTH(8)) dataout_rVoter (
    .inA(dataout_rA),
    .inB(dataout_rB),
    .inC(dataout_rC),
    .out(dataout_r),
    .tmrErr(dataout_rTmrError)
    );

majorityVoter disp_err_rVoter (
    .inA(disp_err_rA),
    .inB(disp_err_rB),
    .inC(disp_err_rC),
    .out(disp_err_r),
    .tmrErr(disp_err_rTmrError)
    );

majorityVoter dispin_rVoter (
    .inA(dispin_rA),
    .inB(dispin_rB),
    .inC(dispin_rC),
    .out(dispin_r),
    .tmrErr(dispin_rTmrError)
    );

majorityVoter ko_rVoter (
    .inA(ko_rA),
    .inB(ko_rB),
    .inC(ko_rC),
    .out(ko_r),
    .tmrErr(ko_rTmrError)
    );
endmodule

