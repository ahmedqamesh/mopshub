//
// Module mopshub_triplicated.DiffTMR.struct
//
// Created:
//          by - dcs.dcs (localhost)
//          at - 09:18:04 05/10/22
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//


module DiffTMR #(
   // synopsys template
   parameter Width = 8
   )
)
)
( 
   // Port Declarations
   input   wire                       CLKA, 
   input   wire                       CLKB, 
   input   wire                       CLKC, 
   input   wire                       ResetA, 
   input   wire                       ResetB, 
   input   wire                       ResetC, 
   input   wire                       EnableA, 
   input   wire                       EnableB, 
   input   wire                       EnableC, 
   input   wire  signed  [Width-1:0]  a_iA, 
   input   wire  signed  [Width-1:0]  a_iB, 
   input   wire  signed  [Width-1:0]  a_iC, 
   output  wire  signed  [Width-1:0]  diff_oA, 
   output  wire  signed  [Width-1:0]  diff_oB, 
   output  wire  signed  [Width-1:0]  diff_oC
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wor                     a_delayedTmrErrorC;
wire signed [Width-1:0] a_delayedVotedC;
wor                     a_delayedTmrErrorB;
wire signed [Width-1:0] a_delayedVotedB;
wor                     a_delayedTmrErrorA;
wire signed [Width-1:0] a_delayedVotedA;
reg  signed [Width-1:0] a_delayedA;
reg  signed [Width-1:0] a_delayedB;
reg  signed [Width-1:0] a_delayedC;


// Instances 
majorityVoter #(((Width-1)>(0)) ? ((Width-1)-(0)+1) : ((0)-(Width-1)+1)) a_delayedVoterA( 
   .inA    (a_delayedA), 
   .inB    (a_delayedB), 
   .inC    (a_delayedC), 
   .out    (a_delayedVotedA), 
   .tmrErr (a_delayedTmrErrorA)
); 

majorityVoter #(((Width-1)>(0)) ? ((Width-1)-(0)+1) : ((0)-(Width-1)+1)) a_delayedVoterB( 
   .inA    (a_delayedA), 
   .inB    (a_delayedB), 
   .inC    (a_delayedC), 
   .out    (a_delayedVotedB), 
   .tmrErr (a_delayedTmrErrorB)
); 

majorityVoter #(((Width-1)>(0)) ? ((Width-1)-(0)+1) : ((0)-(Width-1)+1)) a_delayedVoterC( 
   .inA    (a_delayedA), 
   .inB    (a_delayedB), 
   .inC    (a_delayedC), 
   .out    (a_delayedVotedC), 
   .tmrErr (a_delayedTmrErrorC)
); 

// HDL Embedded Text Block 1 eb1
always @( posedge CLKA or negedge ResetA )
  begin
    if (ResetA==1'b0)
      begin
        a_delayedA <= 0;
      end
    else
      if (EnableA)
        begin
          a_delayedA <= a_iA;
        end
      else
        begin
          a_delayedA <= a_delayedVotedA;
        end
  end
// HDL Embedded Text Block 2 eb2
always @( posedge CLKB or negedge ResetB )
  begin
    if (ResetB==1'b0)
      begin
        a_delayedB <= 0;
      end
    else
      if (EnableB)
        begin
          a_delayedB <= a_iB;
        end
      else
        begin
          a_delayedB <= a_delayedVotedB;
        end
  end
// HDL Embedded Text Block 3 eb3
always @( posedge CLKC or negedge ResetC )
  begin
    if (ResetC==1'b0)
      begin
        a_delayedC <= 0;
      end
    else
      if (EnableC)
        begin
          a_delayedC <= a_iC;
        end
      else
        begin
          a_delayedC <= a_delayedVotedC;
        end
  end
// HDL Embedded Text Block 4 eb4
assign diff_oA =  a_iA-a_delayedVotedA;
assign diff_oB =  a_iB-a_delayedVotedB;
assign diff_oC =  a_iC-a_delayedVotedC;

endmodule // DiffTMR

