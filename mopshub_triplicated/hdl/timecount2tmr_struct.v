//
// Module mopshub_triplicated.timecount2TMR.struct
//
// Created:
//          by - dcs.dcs (localhost)
//          at - 09:18:04 05/10/22
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//


module timecount2TMR( 
   // Port Declarations
   input   wire           clockA, 
   input   wire           clockB, 
   input   wire           clockC, 
   input   wire           Prescale_ENA, 
   input   wire           Prescale_ENB, 
   input   wire           Prescale_ENC, 
   input   wire           resetA, 
   input   wire           resetB, 
   input   wire           resetC, 
   input   wire           incrementA, 
   input   wire           incrementB, 
   input   wire           incrementC, 
   input   wire           setctzeroA, 
   input   wire           setctzeroB, 
   input   wire           setctzeroC, 
   input   wire           setctotwoA, 
   input   wire           setctotwoB, 
   input   wire           setctotwoC, 
   output  wire    [3:0]  countoA, 
   output  wire    [3:0]  countoB, 
   output  wire    [3:0]  countoC
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wor         counto_iTmrErrorC;
wire  [3:0] counto_iVotedC;
wor         counto_iTmrErrorB;
wire  [3:0] counto_iVotedB;
wor         counto_iTmrErrorA;
wire  [3:0] counto_iVotedA;
reg   [3:0] counto_iA;
reg   [3:0] counto_iB;
reg   [3:0] counto_iC;


// Instances 
majorityVoter #(4) counto_iVoterA( 
   .inA    (counto_iA), 
   .inB    (counto_iB), 
   .inC    (counto_iC), 
   .out    (counto_iVotedA), 
   .tmrErr (counto_iTmrErrorA)
); 

majorityVoter #(4) counto_iVoterB( 
   .inA    (counto_iA), 
   .inB    (counto_iB), 
   .inC    (counto_iC), 
   .out    (counto_iVotedB), 
   .tmrErr (counto_iTmrErrorB)
); 

majorityVoter #(4) counto_iVoterC( 
   .inA    (counto_iA), 
   .inB    (counto_iB), 
   .inC    (counto_iC), 
   .out    (counto_iVotedC), 
   .tmrErr (counto_iTmrErrorC)
); 

// HDL Embedded Text Block 1 eb1
assign countoA =  counto_iVotedA;
assign countoB =  counto_iVotedB;
assign countoC =  counto_iVotedC;
// HDL Embedded Text Block 2 eb2
always @( posedge clockA or negedge resetA )
  begin
    if (resetA==1'b0)
      counto_iA <= 4'b0000;
    else
      if (Prescale_ENA==1'b1)
        begin
          if (setctzeroA==1'b1)
            counto_iA <= 4'b0000;
          else
            if (incrementA==1'b1)
              counto_iA <= counto_iVotedA+1;
            else
              if (setctotwoA==1'b1)
                counto_iA <= 4'd2;
              else
                counto_iA <= counto_iVotedA;
        end
  end
// HDL Embedded Text Block 3 eb3
always @( posedge clockB or negedge resetB )
  begin
    if (resetB==1'b0)
      counto_iB <= 4'b0000;
    else
      if (Prescale_ENB==1'b1)
        begin
          if (setctzeroB==1'b1)
            counto_iB <= 4'b0000;
          else
            if (incrementB==1'b1)
              counto_iB <= counto_iVotedB+1;
            else
              if (setctotwoB==1'b1)
                counto_iB <= 4'd2;
              else
                counto_iB <= counto_iVotedB;
        end
  end
// HDL Embedded Text Block 4 eb4
always @( posedge clockC or negedge resetC )
  begin
    if (resetC==1'b0)
      counto_iC <= 4'b0000;
    else
      if (Prescale_ENC==1'b1)
        begin
          if (setctzeroC==1'b1)
            counto_iC <= 4'b0000;
          else
            if (incrementC==1'b1)
              counto_iC <= counto_iVotedC+1;
            else
              if (setctotwoC==1'b1)
                counto_iC <= 4'd2;
              else
                counto_iC <= counto_iVotedC;
        end
  end

endmodule // timecount2TMR

