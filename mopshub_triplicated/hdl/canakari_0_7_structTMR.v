/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/canakari_0_7_structTMR.v                                                      *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 05/12/2022 13:28:04                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Documents/GitHub/mopshub_triplicated/triplicated/mopshub_top_board_16/hdl *
 * cmd     : /mnt/c/Users/Lucas/Documents/GitHub/mopshub_triplicated/tmrg-master/bin/tmrg -vv -c    *
 *           tmrg.cfg                                                                               *
 * tmrg rev: b25f042058e4e97751df2a0933c24aeadd5a78a5                                               *
 *                                                                                                  *
 * src file: canakari_0_7_struct.v                                                                  *
 *           Git SHA           : b25f042058e4e97751df2a0933c24aeadd5a78a5 (?? canakari_0_7_struct.v) *
 *           Modification time : 2022-12-04 15:41:31.645211                                         *
 *           File Size         : 9537                                                               *
 *           MD5 hash          : de4f984bf54b8ac9fcbc36e9431e189e                                   *
 *                                                                                                  *
 ****************************************************************************************************/

`resetall 
`timescale  1ns/10ps
module canakari_0_7TMR(
  input wire [4:0] address ,
  input wire  clk ,
  input wire  cs0 ,
  input wire  cs1 ,
  input wire  cs2 ,
  input wire  cs3 ,
  input wire  cs4 ,
  input wire  cs5 ,
  input wire  cs6 ,
  input wire  cs7 ,
  input wire  read_n0 ,
  input wire  read_n1 ,
  input wire  read_n2 ,
  input wire  read_n3 ,
  input wire  read_n4 ,
  input wire  read_n5 ,
  input wire  read_n6 ,
  input wire  read_n7 ,
  input wire  rst ,
  input wire  rx0 ,
  input wire  rx1 ,
  input wire  rx2 ,
  input wire  rx3 ,
  input wire  rx4 ,
  input wire  rx5 ,
  input wire  rx6 ,
  input wire  rx7 ,
  input wire  write_n0 ,
  input wire  write_n1 ,
  input wire  write_n2 ,
  input wire  write_n3 ,
  input wire  write_n4 ,
  input wire  write_n5 ,
  input wire  write_n6 ,
  input wire  write_n7 ,
  input wire [15:0] writedata0 ,
  input wire [15:0] writedata1 ,
  input wire [15:0] writedata2 ,
  input wire [15:0] writedata3 ,
  input wire [15:0] writedata4 ,
  input wire [15:0] writedata5 ,
  input wire [15:0] writedata6 ,
  input wire [15:0] writedata7 ,
  output wire  irqsucrec0 ,
  output wire  irqsucrec1 ,
  output wire  irqsucrec2 ,
  output wire  irqsucrec3 ,
  output wire  irqsucrec4 ,
  output wire  irqsucrec5 ,
  output wire  irqsucrec6 ,
  output wire  irqsucrec7 ,
  output wire  irqsuctra0 ,
  output wire  irqsuctra1 ,
  output wire  irqsuctra2 ,
  output wire  irqsuctra3 ,
  output wire  irqsuctra4 ,
  output wire  irqsuctra5 ,
  output wire  irqsuctra6 ,
  output wire  irqsuctra7 ,
  output wire [15:0] readdata0 ,
  output wire [15:0] readdata1 ,
  output wire [15:0] readdata2 ,
  output wire [15:0] readdata3 ,
  output wire [15:0] readdata4 ,
  output wire [15:0] readdata5 ,
  output wire [15:0] readdata6 ,
  output wire [15:0] readdata7 ,
  output wire  tx0 ,
  output wire  tx1 ,
  output wire  tx2 ,
  output wire  tx3 ,
  output wire  tx4 ,
  output wire  tx5 ,
  output wire  tx6 ,
  output wire  tx7 
);
wire [7:0] Kd;
wire [7:0] Ki;
wire [7:0] Kp;
wire en_osc_trim;

canTMR can_0 (
    .clock(clk),
    .reset(rst),
    .address(address),
    .writedata(writedata0),
    .cs(cs0),
    .read_n(read_n0),
    .write_n(write_n0),
    .rx(rx0),
    .en_osc_trim(en_osc_trim),
    .Kd(Kd),
    .Kp(Kp),
    .Ki(Ki),
    .readdata(readdata0),
    .irq(),
    .irqstatus(),
    .irqsuctra(irqsuctra0),
    .irqsucrec(irqsucrec0),
    .tx(tx0),
    .statedeb(),
    .Prescale_EN_debug(),
    .bitst(),
    .ftrim(),
    .ready_osc()
    );

canTMR can_1 (
    .clock(clk),
    .reset(rst),
    .address(address),
    .writedata(writedata1),
    .cs(cs1),
    .read_n(read_n1),
    .write_n(write_n1),
    .rx(rx1),
    .en_osc_trim(en_osc_trim),
    .Kd(Kd),
    .Kp(Kp),
    .Ki(Ki),
    .readdata(readdata1),
    .irq(),
    .irqstatus(),
    .irqsuctra(irqsuctra1),
    .irqsucrec(irqsucrec1),
    .tx(tx1),
    .statedeb(),
    .Prescale_EN_debug(),
    .bitst(),
    .ftrim(),
    .ready_osc()
    );

canTMR can_2 (
    .clock(clk),
    .reset(rst),
    .address(address),
    .writedata(writedata2),
    .cs(cs2),
    .read_n(read_n2),
    .write_n(write_n2),
    .rx(rx2),
    .en_osc_trim(en_osc_trim),
    .Kd(Kd),
    .Kp(Kp),
    .Ki(Ki),
    .readdata(readdata2),
    .irq(),
    .irqstatus(),
    .irqsuctra(irqsuctra2),
    .irqsucrec(irqsucrec2),
    .tx(tx2),
    .statedeb(),
    .Prescale_EN_debug(),
    .bitst(),
    .ftrim(),
    .ready_osc()
    );

canTMR can_3 (
    .clock(clk),
    .reset(rst),
    .address(address),
    .writedata(writedata3),
    .cs(cs3),
    .read_n(read_n3),
    .write_n(write_n3),
    .rx(rx3),
    .en_osc_trim(en_osc_trim),
    .Kd(Kd),
    .Kp(Kp),
    .Ki(Ki),
    .readdata(readdata3),
    .irq(),
    .irqstatus(),
    .irqsuctra(irqsuctra3),
    .irqsucrec(irqsucrec3),
    .tx(tx3),
    .statedeb(),
    .Prescale_EN_debug(),
    .bitst(),
    .ftrim(),
    .ready_osc()
    );

canTMR can_4 (
    .clock(clk),
    .reset(rst),
    .address(address),
    .writedata(writedata4),
    .cs(cs4),
    .read_n(read_n4),
    .write_n(write_n4),
    .rx(rx4),
    .en_osc_trim(en_osc_trim),
    .Kd(Kd),
    .Kp(Kp),
    .Ki(Ki),
    .readdata(readdata4),
    .irq(),
    .irqstatus(),
    .irqsuctra(irqsuctra4),
    .irqsucrec(irqsucrec4),
    .tx(tx4),
    .statedeb(),
    .Prescale_EN_debug(),
    .bitst(),
    .ftrim(),
    .ready_osc()
    );

canTMR can_5 (
    .clock(clk),
    .reset(rst),
    .address(address),
    .writedata(writedata5),
    .cs(cs5),
    .read_n(read_n5),
    .write_n(write_n5),
    .rx(rx5),
    .en_osc_trim(en_osc_trim),
    .Kd(Kd),
    .Kp(Kp),
    .Ki(Ki),
    .readdata(readdata5),
    .irq(),
    .irqstatus(),
    .irqsuctra(irqsuctra5),
    .irqsucrec(irqsucrec5),
    .tx(tx5),
    .statedeb(),
    .Prescale_EN_debug(),
    .bitst(),
    .ftrim(),
    .ready_osc()
    );

canTMR can_6 (
    .clock(clk),
    .reset(rst),
    .address(address),
    .writedata(writedata6),
    .cs(cs6),
    .read_n(read_n6),
    .write_n(write_n6),
    .rx(rx6),
    .en_osc_trim(en_osc_trim),
    .Kd(Kd),
    .Kp(Kp),
    .Ki(Ki),
    .readdata(readdata6),
    .irq(),
    .irqstatus(),
    .irqsuctra(irqsuctra6),
    .irqsucrec(irqsucrec6),
    .tx(tx6),
    .statedeb(),
    .Prescale_EN_debug(),
    .bitst(),
    .ftrim(),
    .ready_osc()
    );

canTMR can_7 (
    .clock(clk),
    .reset(rst),
    .address(address),
    .writedata(writedata7),
    .cs(cs7),
    .read_n(read_n7),
    .write_n(write_n7),
    .rx(rx7),
    .en_osc_trim(en_osc_trim),
    .Kd(Kd),
    .Kp(Kp),
    .Ki(Ki),
    .readdata(readdata7),
    .irq(),
    .irqstatus(),
    .irqsuctra(irqsuctra7),
    .irqsucrec(irqsucrec7),
    .tx(tx7),
    .statedeb(),
    .Prescale_EN_debug(),
    .bitst(),
    .ftrim(),
    .ready_osc()
    );
assign Kd =  8'd0;
assign Ki =  8'd0;
assign Kp =  8'd0;
assign en_osc_trim =  1'b0;
endmodule

