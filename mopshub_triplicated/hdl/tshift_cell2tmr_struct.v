//
// Module mopshub_triplicated.tshift_cell2TMR.struct
//
// Created:
//          by - dcs.dcs (localhost)
//          at - 09:18:08 05/10/22
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//


module tshift_cell2TMR( 
   // Port Declarations
   input   wire      enableA, 
   input   wire      enableB, 
   input   wire      enableC, 
   input   wire      preloadA, 
   input   wire      preloadB, 
   input   wire      preloadC, 
   input   wire      clockA, 
   input   wire      clockB, 
   input   wire      clockC, 
   input   wire      resetA, 
   input   wire      resetB, 
   input   wire      resetC, 
   input   wire      loadA, 
   input   wire      loadB, 
   input   wire      loadC, 
   input   wire      InputA, 
   input   wire      InputB, 
   input   wire      InputC, 
   output  wire      qA, 
   output  wire      qB, 
   output  wire      qC
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wor    q_iTmrErrorC;
wire   q_iVotedC;
wor    q_iTmrErrorB;
wire   q_iVotedB;
wor    q_iTmrErrorA;
wire   q_iVotedA;
reg    q_iA;
reg    q_iB;
reg    q_iC;


// Instances 
majorityVoter q_iVoterA( 
   .inA    (q_iA), 
   .inB    (q_iB), 
   .inC    (q_iC), 
   .out    (q_iVotedA), 
   .tmrErr (q_iTmrErrorA)
); 

majorityVoter q_iVoterB( 
   .inA    (q_iA), 
   .inB    (q_iB), 
   .inC    (q_iC), 
   .out    (q_iVotedB), 
   .tmrErr (q_iTmrErrorB)
); 

majorityVoter q_iVoterC( 
   .inA    (q_iA), 
   .inB    (q_iB), 
   .inC    (q_iC), 
   .out    (q_iVotedC), 
   .tmrErr (q_iTmrErrorC)
); 

// HDL Embedded Text Block 1 eb1
assign qA =  q_iVotedA;
assign qB =  q_iVotedB;
assign qC =  q_iVotedC;
// HDL Embedded Text Block 2 eb2
always @( posedge clockA )
  begin
    if (resetA==1'b0)
      q_iA <= 1'b0;
    else
      if (enableA==1'b1)
        begin
          q_iA <= (preloadA&loadA)|(InputA&(~ loadA ));
        end
      else
        q_iA <= q_iVotedA;
  end
// HDL Embedded Text Block 3 eb3
always @( posedge clockB )
  begin
    if (resetB==1'b0)
      q_iB <= 1'b0;
    else
      if (enableB==1'b1)
        begin
          q_iB <= (preloadB&loadB)|(InputB&(~ loadB ));
        end
      else
        q_iB <= q_iVotedB;
  end
// HDL Embedded Text Block 4 eb4
always @( posedge clockC )
  begin
    if (resetC==1'b0)
      q_iC <= 1'b0;
    else
      if (enableC==1'b1)
        begin
          q_iC <= (preloadC&loadC)|(InputC&(~ loadC ));
        end
      else
        q_iC <= q_iVotedC;
  end

endmodule // tshift_cell2TMR

