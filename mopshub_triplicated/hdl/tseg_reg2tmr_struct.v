//
// Module mopshub_triplicated.tseg_reg2TMR.struct
//
// Created:
//          by - dcs.dcs (localhost)
//          at - 09:18:04 05/10/22
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//


module tseg_reg2TMR( 
   // Port Declarations
   input   wire           clockA, 
   input   wire           clockB, 
   input   wire           clockC, 
   input   wire           resetA, 
   input   wire           resetB, 
   input   wire           resetC, 
   input   wire    [1:0]  ctrlA, 
   input   wire    [1:0]  ctrlB, 
   input   wire    [1:0]  ctrlC, 
   input   wire    [2:0]  tseg1A, 
   input   wire    [2:0]  tseg1B, 
   input   wire    [2:0]  tseg1C, 
   input   wire    [4:0]  tseg1pcountA, 
   input   wire    [4:0]  tseg1pcountB, 
   input   wire    [4:0]  tseg1pcountC, 
   input   wire    [4:0]  tseg1p1psjwA, 
   input   wire    [4:0]  tseg1p1psjwB, 
   input   wire    [4:0]  tseg1p1psjwC, 
   output  wire    [4:0]  tseg1mplA, 
   output  wire    [4:0]  tseg1mplB, 
   output  wire    [4:0]  tseg1mplC
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wor         tseg1mpl_iTmrErrorC;
wire  [4:0] tseg1mpl_iVotedC;
wor         tseg1mpl_iTmrErrorB;
wire  [4:0] tseg1mpl_iVotedB;
wor         tseg1mpl_iTmrErrorA;
wire  [4:0] tseg1mpl_iVotedA;
reg   [4:0] tseg1mpl_iA;
reg   [4:0] tseg1mpl_iB;
reg   [4:0] tseg1mpl_iC;


// Instances 
majorityVoter #(5) tseg1mpl_iVoterA( 
   .inA    (tseg1mpl_iA), 
   .inB    (tseg1mpl_iB), 
   .inC    (tseg1mpl_iC), 
   .out    (tseg1mpl_iVotedA), 
   .tmrErr (tseg1mpl_iTmrErrorA)
); 

majorityVoter #(5) tseg1mpl_iVoterB( 
   .inA    (tseg1mpl_iA), 
   .inB    (tseg1mpl_iB), 
   .inC    (tseg1mpl_iC), 
   .out    (tseg1mpl_iVotedB), 
   .tmrErr (tseg1mpl_iTmrErrorB)
); 

majorityVoter #(5) tseg1mpl_iVoterC( 
   .inA    (tseg1mpl_iA), 
   .inB    (tseg1mpl_iB), 
   .inC    (tseg1mpl_iC), 
   .out    (tseg1mpl_iVotedC), 
   .tmrErr (tseg1mpl_iTmrErrorC)
); 

// HDL Embedded Text Block 1 eb1
assign tseg1mplA =  tseg1mpl_iVotedA;
assign tseg1mplB =  tseg1mpl_iVotedB;
assign tseg1mplC =  tseg1mpl_iVotedC;
// HDL Embedded Text Block 2 eb2
always @( posedge clockA or negedge resetA )
  begin
    if (resetA==1'b0)
      tseg1mpl_iA <= 5'b00000;
    else
      begin
        case (ctrlA)
          2'b01 : tseg1mpl_iA <= {2'b00,tseg1A};
          2'b10 : tseg1mpl_iA <= tseg1pcountA;
          2'b11 : tseg1mpl_iA <= tseg1p1psjwA;
          default : tseg1mpl_iA <= tseg1mpl_iVotedA;
        endcase
      end
  end
// HDL Embedded Text Block 3 eb3
always @( posedge clockB or negedge resetB )
  begin
    if (resetB==1'b0)
      tseg1mpl_iB <= 5'b00000;
    else
      begin
        case (ctrlB)
          2'b01 : tseg1mpl_iB <= {2'b00,tseg1B};
          2'b10 : tseg1mpl_iB <= tseg1pcountB;
          2'b11 : tseg1mpl_iB <= tseg1p1psjwB;
          default : tseg1mpl_iB <= tseg1mpl_iVotedB;
        endcase
      end
  end
// HDL Embedded Text Block 4 eb4
always @( posedge clockC or negedge resetC )
  begin
    if (resetC==1'b0)
      tseg1mpl_iC <= 5'b00000;
    else
      begin
        case (ctrlC)
          2'b01 : tseg1mpl_iC <= {2'b00,tseg1C};
          2'b10 : tseg1mpl_iC <= tseg1pcountC;
          2'b11 : tseg1mpl_iC <= tseg1p1psjwC;
          default : tseg1mpl_iC <= tseg1mpl_iVotedC;
        endcase
      end
  end

endmodule // tseg_reg2TMR

