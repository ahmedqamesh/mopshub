/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/iocpuavalon2TMR.v                                                             *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 16/08/2022 12:58:22                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/mopshub_top_board_canakari_ftrim/hdl   *
 * cmd     : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/tmrg-master/bin/tmrg -c tmrg.cfg -vvv  *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: iocpuavalon2.v                                                                         *
 *           Git SHA           : File not in git repository!                                        *
 *           Modification time : 2022-03-29 13:49:21                                                *
 *           File Size         : 20517                                                              *
 *           MD5 hash          : 92fa50c3ff26ba530ac230ad3421a2bf                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module iocpu2TMR(
  input wire  clockA ,
  input wire  clockB ,
  input wire  clockC ,
  input wire  resetA ,
  input wire  resetB ,
  input wire  resetC ,
  input wire [4:0] addressA ,
  input wire [4:0] addressB ,
  input wire [4:0] addressC ,
  output wire [15:0] readdataA ,
  output wire [15:0] readdataB ,
  output wire [15:0] readdataC ,
  input wire [15:0] writedataA ,
  input wire [15:0] writedataB ,
  input wire [15:0] writedataC ,
  input wire  read_nA ,
  input wire  read_nB ,
  input wire  read_nC ,
  input wire  write_nA ,
  input wire  write_nB ,
  input wire  write_nC ,
  input wire  csA ,
  input wire  csB ,
  input wire  csC ,
  input wire  activgregA ,
  input wire  activgregB ,
  input wire  activgregC ,
  input wire  activtregA ,
  input wire  activtregB ,
  input wire  activtregC ,
  input wire  activrregA ,
  input wire  activrregB ,
  input wire  activrregC ,
  input wire  activintregA ,
  input wire  activintregB ,
  input wire  activintregC ,
  input wire  ldrecidA ,
  input wire  ldrecidB ,
  input wire  ldrecidC ,
  input wire  sucftraniA ,
  input wire  sucftraniB ,
  input wire  sucftraniC ,
  input wire  sucfrecviA ,
  input wire  sucfrecviB ,
  input wire  sucfrecviC ,
  input wire  overflowoA ,
  input wire  overflowoB ,
  input wire  overflowoC ,
  input wire  erroractiveA ,
  input wire  erroractiveB ,
  input wire  erroractiveC ,
  input wire  errorpassiveA ,
  input wire  errorpassiveB ,
  input wire  errorpassiveC ,
  input wire  busoffA ,
  input wire  busoffB ,
  input wire  busoffC ,
  input wire  warningA ,
  input wire  warningB ,
  input wire  warningC ,
  input wire  irqstatusA ,
  input wire  irqstatusB ,
  input wire  irqstatusC ,
  input wire  irqsuctraA ,
  input wire  irqsuctraB ,
  input wire  irqsuctraC ,
  input wire  irqsucrecA ,
  input wire  irqsucrecB ,
  input wire  irqsucrecC ,
  input wire [28:0] rec_idA ,
  input wire [28:0] rec_idB ,
  input wire [28:0] rec_idC ,
  input wire  rremoteA ,
  input wire  rremoteB ,
  input wire  rremoteC ,
  input wire [3:0] rdlcA ,
  input wire [3:0] rdlcB ,
  input wire [3:0] rdlcC ,
  input wire [7:0] data1rA ,
  input wire [7:0] data1rB ,
  input wire [7:0] data1rC ,
  input wire [7:0] data2rA ,
  input wire [7:0] data2rB ,
  input wire [7:0] data2rC ,
  input wire [7:0] data3rA ,
  input wire [7:0] data3rB ,
  input wire [7:0] data3rC ,
  input wire [7:0] data4rA ,
  input wire [7:0] data4rB ,
  input wire [7:0] data4rC ,
  input wire [7:0] data5rA ,
  input wire [7:0] data5rB ,
  input wire [7:0] data5rC ,
  input wire [7:0] data6rA ,
  input wire [7:0] data6rB ,
  input wire [7:0] data6rC ,
  input wire [7:0] data7rA ,
  input wire [7:0] data7rB ,
  input wire [7:0] data7rC ,
  input wire [7:0] data8rA ,
  input wire [7:0] data8rB ,
  input wire [7:0] data8rC ,
  input wire [7:0] teccanA ,
  input wire [7:0] teccanB ,
  input wire [7:0] teccanC ,
  input wire [7:0] reccanA ,
  input wire [7:0] reccanB ,
  input wire [7:0] reccanC ,
  output wire [2:0] sjwA ,
  output wire [2:0] sjwB ,
  output wire [2:0] sjwC ,
  output wire [2:0] tseg1A ,
  output wire [2:0] tseg1B ,
  output wire [2:0] tseg1C ,
  output wire [2:0] tseg2A ,
  output wire [2:0] tseg2B ,
  output wire [2:0] tseg2C ,
  output wire  sucfrecvoA ,
  output wire  sucfrecvoB ,
  output wire  sucfrecvoC ,
  output wire  sucftranoA ,
  output wire  sucftranoB ,
  output wire  sucftranoC ,
  output wire  initreqrA ,
  output wire  initreqrB ,
  output wire  initreqrC ,
  output wire  traregbitA ,
  output wire  traregbitB ,
  output wire  traregbitC ,
  output wire [28:0] accmaskA ,
  output wire [28:0] accmaskB ,
  output wire [28:0] accmaskC ,
  output wire [28:0] ridentifierA ,
  output wire [28:0] ridentifierB ,
  output wire [28:0] ridentifierC ,
  output wire  rextendedA ,
  output wire  rextendedB ,
  output wire  rextendedC ,
  output wire [2:0] ienableA ,
  output wire [2:0] ienableB ,
  output wire [2:0] ienableC ,
  output wire [2:0] irqstdA ,
  output wire [2:0] irqstdB ,
  output wire [2:0] irqstdC ,
  output wire [28:0] tidentifierA ,
  output wire [28:0] tidentifierB ,
  output wire [28:0] tidentifierC ,
  output wire [7:0] data1tA ,
  output wire [7:0] data1tB ,
  output wire [7:0] data1tC ,
  output wire [7:0] data2tA ,
  output wire [7:0] data2tB ,
  output wire [7:0] data2tC ,
  output wire [7:0] data3tA ,
  output wire [7:0] data3tB ,
  output wire [7:0] data3tC ,
  output wire [7:0] data4tA ,
  output wire [7:0] data4tB ,
  output wire [7:0] data4tC ,
  output wire [7:0] data5tA ,
  output wire [7:0] data5tB ,
  output wire [7:0] data5tC ,
  output wire [7:0] data6tA ,
  output wire [7:0] data6tB ,
  output wire [7:0] data6tC ,
  output wire [7:0] data7tA ,
  output wire [7:0] data7tB ,
  output wire [7:0] data7tC ,
  output wire [7:0] data8tA ,
  output wire [7:0] data8tB ,
  output wire [7:0] data8tC ,
  output wire  textendedA ,
  output wire  textendedB ,
  output wire  textendedC ,
  output wire  tremoteA ,
  output wire  tremoteB ,
  output wire  tremoteC ,
  output wire [3:0] tdlcA ,
  output wire [3:0] tdlcB ,
  output wire [3:0] tdlcC ,
  output wire [7:0] prescale_outA ,
  output wire [7:0] prescale_outB ,
  output wire [7:0] prescale_outC ,
  output wire  onoffnA ,
  output wire  onoffnB ,
  output wire  onoffnC 
);
parameter [15:0] system_id =16'hCA05;
wire [15:0] preregrA;
wire [15:0] preregrB;
wire [15:0] preregrC;
wire [15:0] genregrA;
wire [15:0] genregrB;
wire [15:0] genregrC;
wire [15:0] intregrA;
wire [15:0] intregrB;
wire [15:0] intregrC;
wire [15:0] traconrA;
wire [15:0] traconrB;
wire [15:0] traconrC;
wire [15:0] traar1rA;
wire [15:0] traar1rB;
wire [15:0] traar1rC;
wire [15:0] traar2rA;
wire [15:0] traar2rB;
wire [15:0] traar2rC;
wire [15:0] trad01rA;
wire [15:0] trad01rB;
wire [15:0] trad01rC;
wire [15:0] trad23rA;
wire [15:0] trad23rB;
wire [15:0] trad23rC;
wire [15:0] trad45rA;
wire [15:0] trad45rB;
wire [15:0] trad45rC;
wire [15:0] trad67rA;
wire [15:0] trad67rB;
wire [15:0] trad67rC;
wire [15:0] recconrA;
wire [15:0] recconrB;
wire [15:0] recconrC;
wire [15:0] recar1rA;
wire [15:0] recar1rB;
wire [15:0] recar1rC;
wire [15:0] recar2rA;
wire [15:0] recar2rB;
wire [15:0] recar2rC;
wire [15:0] accmask1rA;
wire [15:0] accmask1rB;
wire [15:0] accmask1rC;
wire [15:0] accmask2rA;
wire [15:0] accmask2rB;
wire [15:0] accmask2rC;
wire [15:0] recd01rA;
wire [15:0] recd01rB;
wire [15:0] recd01rC;
wire [15:0] recd23rA;
wire [15:0] recd23rB;
wire [15:0] recd23rC;
wire [15:0] recd45rA;
wire [15:0] recd45rB;
wire [15:0] recd45rC;
wire [15:0] recd67rA;
wire [15:0] recd67rB;
wire [15:0] recd67rC;
wire [15:0] fehlregoutA;
wire [15:0] fehlregoutB;
wire [15:0] fehlregoutC;
wire [15:0] register_busA;
wire [15:0] register_busB;
wire [15:0] register_busC;
wire prescaA;
wire prescaB;
wire prescaC;
wire genregaA;
wire genregaB;
wire genregaC;
wire intregaA;
wire intregaB;
wire intregaC;
wire traconaA;
wire traconaB;
wire traconaC;
wire traar1aA;
wire traar1aB;
wire traar1aC;
wire traar2aA;
wire traar2aB;
wire traar2aC;
wire trad01aA;
wire trad01aB;
wire trad01aC;
wire trad23aA;
wire trad23aB;
wire trad23aC;
wire trad45aA;
wire trad45aB;
wire trad45aC;
wire trad67aA;
wire trad67aB;
wire trad67aC;
wire recconaA;
wire recconaB;
wire recconaC;
wire recar1aA;
wire recar1aB;
wire recar1aC;
wire recar2aA;
wire recar2aB;
wire recar2aC;
wire [15:0] recidin1A;
wire [15:0] recidin1B;
wire [15:0] recidin1C;
wire [15:0] recidin2A;
wire [15:0] recidin2B;
wire [15:0] recidin2C;
wire accmask1aA;
wire accmask1aB;
wire accmask1aC;
wire accmask2aA;
wire accmask2aB;
wire accmask2aC;
assign prescale_outA =  preregrA[7:0] ;
assign prescale_outB =  preregrB[7:0] ;
assign prescale_outC =  preregrC[7:0] ;
assign sjwA =  genregrA[8:6] ;
assign sjwB =  genregrB[8:6] ;
assign sjwC =  genregrC[8:6] ;
assign tseg1A =  genregrA[5:3] ;
assign tseg1B =  genregrB[5:3] ;
assign tseg1C =  genregrC[5:3] ;
assign tseg2A =  genregrA[2:0] ;
assign tseg2B =  genregrB[2:0] ;
assign tseg2C =  genregrC[2:0] ;
assign sucfrecvoA =  genregrA[10] ;
assign sucfrecvoB =  genregrB[10] ;
assign sucfrecvoC =  genregrC[10] ;
assign sucftranoA =  genregrA[11] ;
assign sucftranoB =  genregrB[11] ;
assign sucftranoC =  genregrC[11] ;
assign initreqrA =  genregrA[9] ;
assign initreqrB =  genregrB[9] ;
assign initreqrC =  genregrC[9] ;
assign traregbitA =  traconrA[15] ;
assign traregbitB =  traconrB[15] ;
assign traregbitC =  traconrC[15] ;
assign textendedA =  traconrA[4] ;
assign textendedB =  traconrB[4] ;
assign textendedC =  traconrC[4] ;
assign tremoteA =  traconrA[5] ;
assign tremoteB =  traconrB[5] ;
assign tremoteC =  traconrC[5] ;
assign tdlcA =  traconrA[3:0] ;
assign tdlcB =  traconrB[3:0] ;
assign tdlcC =  traconrC[3:0] ;
assign tidentifierA[28:13]  =  traar1rA;
assign tidentifierB[28:13]  =  traar1rB;
assign tidentifierC[28:13]  =  traar1rC;
assign tidentifierA[12:0]  =  traar2rA[15:3] ;
assign tidentifierB[12:0]  =  traar2rB[15:3] ;
assign tidentifierC[12:0]  =  traar2rC[15:3] ;
assign data1tA =  trad01rA[15:8] ;
assign data1tB =  trad01rB[15:8] ;
assign data1tC =  trad01rC[15:8] ;
assign data2tA =  trad01rA[7:0] ;
assign data2tB =  trad01rB[7:0] ;
assign data2tC =  trad01rC[7:0] ;
assign data3tA =  trad23rA[15:8] ;
assign data3tB =  trad23rB[15:8] ;
assign data3tC =  trad23rC[15:8] ;
assign data4tA =  trad23rA[7:0] ;
assign data4tB =  trad23rB[7:0] ;
assign data4tC =  trad23rC[7:0] ;
assign data5tA =  trad45rA[15:8] ;
assign data5tB =  trad45rB[15:8] ;
assign data5tC =  trad45rC[15:8] ;
assign data6tA =  trad45rA[7:0] ;
assign data6tB =  trad45rB[7:0] ;
assign data6tC =  trad45rC[7:0] ;
assign data7tA =  trad67rA[15:8] ;
assign data7tB =  trad67rB[15:8] ;
assign data7tC =  trad67rC[15:8] ;
assign data8tA =  trad67rA[7:0] ;
assign data8tB =  trad67rB[7:0] ;
assign data8tC =  trad67rC[7:0] ;
assign rextendedA =  recconrA[4] ;
assign rextendedB =  recconrB[4] ;
assign rextendedC =  recconrC[4] ;
assign recidin1A =  rec_idA[28:13] ;
assign recidin1B =  rec_idB[28:13] ;
assign recidin1C =  rec_idC[28:13] ;
assign recidin2A[15:0]  =  {rec_idA[12:0] ,3'b000};
assign recidin2B[15:0]  =  {rec_idB[12:0] ,3'b000};
assign recidin2C[15:0]  =  {rec_idC[12:0] ,3'b000};
assign ridentifierA[28:13]  =  recar1rA;
assign ridentifierB[28:13]  =  recar1rB;
assign ridentifierC[28:13]  =  recar1rC;
assign ridentifierA[12:0]  =  recar2rA[15:3] ;
assign ridentifierB[12:0]  =  recar2rB[15:3] ;
assign ridentifierC[12:0]  =  recar2rC[15:3] ;
assign accmaskA[28:13]  =  accmask1rA;
assign accmaskB[28:13]  =  accmask1rB;
assign accmaskC[28:13]  =  accmask1rC;
assign accmaskA[12:0]  =  accmask2rA[15:3] ;
assign accmaskB[12:0]  =  accmask2rB[15:3] ;
assign accmaskC[12:0]  =  accmask2rC[15:3] ;
assign onoffnA =  intregrA[15] ;
assign onoffnB =  intregrB[15] ;
assign onoffnC =  intregrC[15] ;
assign ienableA =  intregrA[6:4] ;
assign ienableB =  intregrB[6:4] ;
assign ienableC =  intregrC[6:4] ;
assign irqstdA =  intregrA[2:0] ;
assign irqstdB =  intregrB[2:0] ;
assign irqstdC =  intregrC[2:0] ;
assign fehlregoutA =  {teccanA,reccanA};
assign fehlregoutB =  {teccanB,reccanB};
assign fehlregoutC =  {teccanC,reccanC};

multiplexer2TMR #(.system_id(system_id)) komplexe (
    .readdataA(readdataA),
    .readdataB(readdataB),
    .readdataC(readdataC),
    .writedataA(writedataA),
    .writedataB(writedataB),
    .writedataC(writedataC),
    .addressA(addressA),
    .addressB(addressB),
    .addressC(addressC),
    .csA(csA),
    .csB(csB),
    .csC(csC),
    .read_nA(read_nA),
    .read_nB(read_nB),
    .read_nC(read_nC),
    .write_nA(write_nA),
    .write_nB(write_nB),
    .write_nC(write_nC),
    .preregrA(preregrA),
    .preregrB(preregrB),
    .preregrC(preregrC),
    .genregrA(genregrA),
    .genregrB(genregrB),
    .genregrC(genregrC),
    .intregrA(intregrA),
    .intregrB(intregrB),
    .intregrC(intregrC),
    .traconrA(traconrA),
    .traconrB(traconrB),
    .traconrC(traconrC),
    .traar1rA(traar1rA),
    .traar1rB(traar1rB),
    .traar1rC(traar1rC),
    .traar2rA(traar2rA),
    .traar2rB(traar2rB),
    .traar2rC(traar2rC),
    .trad01rA(trad01rA),
    .trad01rB(trad01rB),
    .trad01rC(trad01rC),
    .trad23rA(trad23rA),
    .trad23rB(trad23rB),
    .trad23rC(trad23rC),
    .trad45rA(trad45rA),
    .trad45rB(trad45rB),
    .trad45rC(trad45rC),
    .trad67rA(trad67rA),
    .trad67rB(trad67rB),
    .trad67rC(trad67rC),
    .recconrA(recconrA),
    .recconrB(recconrB),
    .recconrC(recconrC),
    .accmask1rA(accmask1rA),
    .accmask1rB(accmask1rB),
    .accmask1rC(accmask1rC),
    .accmask2rA(accmask2rA),
    .accmask2rB(accmask2rB),
    .accmask2rC(accmask2rC),
    .recar1rA(recar1rA),
    .recar1rB(recar1rB),
    .recar1rC(recar1rC),
    .recar2rA(recar2rA),
    .recar2rB(recar2rB),
    .recar2rC(recar2rC),
    .recd01rA(recd01rA),
    .recd01rB(recd01rB),
    .recd01rC(recd01rC),
    .recd23rA(recd23rA),
    .recd23rB(recd23rB),
    .recd23rC(recd23rC),
    .recd45rA(recd45rA),
    .recd45rB(recd45rB),
    .recd45rC(recd45rC),
    .recd67rA(recd67rA),
    .recd67rB(recd67rB),
    .recd67rC(recd67rC),
    .fehlregrA(fehlregoutA),
    .fehlregrB(fehlregoutB),
    .fehlregrC(fehlregoutC),
    .regbusA(register_busA),
    .regbusB(register_busB),
    .regbusC(register_busC),
    .prescaA(prescaA),
    .prescaB(prescaB),
    .prescaC(prescaC),
    .genregaA(genregaA),
    .genregaB(genregaB),
    .genregaC(genregaC),
    .intregaA(intregaA),
    .intregaB(intregaB),
    .intregaC(intregaC),
    .traconaA(traconaA),
    .traconaB(traconaB),
    .traconaC(traconaC),
    .traar1aA(traar1aA),
    .traar1aB(traar1aB),
    .traar1aC(traar1aC),
    .traar2aA(traar2aA),
    .traar2aB(traar2aB),
    .traar2aC(traar2aC),
    .trad01aA(trad01aA),
    .trad01aB(trad01aB),
    .trad01aC(trad01aC),
    .trad23aA(trad23aA),
    .trad23aB(trad23aB),
    .trad23aC(trad23aC),
    .trad45aA(trad45aA),
    .trad45aB(trad45aB),
    .trad45aC(trad45aC),
    .trad67aA(trad67aA),
    .trad67aB(trad67aB),
    .trad67aC(trad67aC),
    .recconaA(recconaA),
    .recconaB(recconaB),
    .recconaC(recconaC),
    .recar1aA(recar1aA),
    .recar1aB(recar1aB),
    .recar1aC(recar1aC),
    .recar2aA(recar2aA),
    .recar2aB(recar2aB),
    .recar2aC(recar2aC),
    .accmask1aA(accmask1aA),
    .accmask1aB(accmask1aB),
    .accmask1aC(accmask1aC),
    .accmask2aA(accmask2aA),
    .accmask2aB(accmask2aB),
    .accmask2aC(accmask2aC)
    );

generalregister2TMR general (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .cpuA(genregaA),
    .cpuB(genregaB),
    .cpuC(genregaC),
    .canA(activgregA),
    .canB(activgregB),
    .canC(activgregC),
    .bofA(busoffA),
    .bofB(busoffB),
    .bofC(busoffC),
    .eraA(erroractiveA),
    .eraB(erroractiveB),
    .eraC(erroractiveC),
    .erpA(errorpassiveA),
    .erpB(errorpassiveB),
    .erpC(errorpassiveC),
    .warA(warningA),
    .warB(warningB),
    .warC(warningC),
    .sjwA(register_busA[8:6] ),
    .sjwB(register_busB[8:6] ),
    .sjwC(register_busC[8:6] ),
    .tseg1A(register_busA[5:3] ),
    .tseg1B(register_busB[5:3] ),
    .tseg1C(register_busC[5:3] ),
    .tseg2A(register_busA[2:0] ),
    .tseg2B(register_busB[2:0] ),
    .tseg2C(register_busC[2:0] ),
    .sspA(register_busA[11] ),
    .sspB(register_busB[11] ),
    .sspC(register_busC[11] ),
    .srpA(register_busA[10] ),
    .srpB(register_busB[10] ),
    .srpC(register_busC[10] ),
    .sscA(sucftraniA),
    .sscB(sucftraniB),
    .sscC(sucftraniC),
    .srcA(sucfrecviA),
    .srcB(sucfrecviB),
    .srcC(sucfrecviC),
    .rspA(register_busA[9] ),
    .rspB(register_busB[9] ),
    .rspC(register_busC[9] ),
    .registerA(genregrA),
    .registerB(genregrB),
    .registerC(genregrC)
    );

recmescontrolreg2TMR mcontrol (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .cpuA(recconaA),
    .cpuB(recconaB),
    .cpuC(recconaC),
    .canA(activrregA),
    .canB(activrregB),
    .canC(activrregC),
    .ofpA(register_busA[15] ),
    .ofpB(register_busB[15] ),
    .ofpC(register_busC[15] ),
    .ofcA(overflowoA),
    .ofcB(overflowoB),
    .ofcC(overflowoC),
    .ripA(register_busA[14] ),
    .ripB(register_busB[14] ),
    .ripC(register_busC[14] ),
    .ricA(activrregA),
    .ricB(activrregB),
    .ricC(activrregC),
    .ienA(register_busA[8] ),
    .ienB(register_busB[8] ),
    .ienC(register_busC[8] ),
    .rtrA(rremoteA),
    .rtrB(rremoteB),
    .rtrC(rremoteC),
    .extA(register_busA[4] ),
    .extB(register_busB[4] ),
    .extC(register_busC[4] ),
    .dlcA(rdlcA),
    .dlcB(rdlcB),
    .dlcC(rdlcC),
    .regoutA(recconrA),
    .regoutB(recconrB),
    .regoutC(recconrC)
    );

recarbitreg2TMR rarbit1 (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .cpuA(recar1aA),
    .cpuB(recar1aB),
    .cpuC(recar1aC),
    .canA(ldrecidA),
    .canB(ldrecidB),
    .canC(ldrecidC),
    .reginpA(register_busA),
    .reginpB(register_busB),
    .reginpC(register_busC),
    .recidinA(recidin1A),
    .recidinB(recidin1B),
    .recidinC(recidin1C),
    .regoutA(recar1rA),
    .regoutB(recar1rB),
    .regoutC(recar1rC)
    );

recarbitreg2TMR rarbit2 (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .cpuA(recar2aA),
    .cpuB(recar2aB),
    .cpuC(recar2aC),
    .canA(ldrecidA),
    .canB(ldrecidB),
    .canC(ldrecidC),
    .reginpA(register_busA),
    .reginpB(register_busB),
    .reginpC(register_busC),
    .recidinA(recidin2A),
    .recidinB(recidin2B),
    .recidinC(recidin2C),
    .regoutA(recar2rA),
    .regoutB(recar2rB),
    .regoutC(recar2rC)
    );

accmaskreg2TMR accmask1 (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .cpuA(accmask1aA),
    .cpuB(accmask1aB),
    .cpuC(accmask1aC),
    .reginpA(register_busA),
    .reginpB(register_busB),
    .reginpC(register_busC),
    .regoutA(accmask1rA),
    .regoutB(accmask1rB),
    .regoutC(accmask1rC)
    );

accmaskreg2TMR accmask2 (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .cpuA(accmask2aA),
    .cpuB(accmask2aB),
    .cpuC(accmask2aC),
    .reginpA(register_busA),
    .reginpB(register_busB),
    .reginpC(register_busC),
    .regoutA(accmask2rA),
    .regoutB(accmask2rB),
    .regoutC(accmask2rC)
    );

interrupregister2TMR interruptreg (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .cpuA(intregaA),
    .cpuB(intregaB),
    .cpuC(intregaC),
    .canA(activintregA),
    .canB(activintregB),
    .canC(activintregC),
    .onoffninA(register_busA[15] ),
    .onoffninB(register_busB[15] ),
    .onoffninC(register_busC[15] ),
    .iestatuspA(register_busA[6] ),
    .iestatuspB(register_busB[6] ),
    .iestatuspC(register_busC[6] ),
    .iesuctrapA(register_busA[5] ),
    .iesuctrapB(register_busB[5] ),
    .iesuctrapC(register_busC[5] ),
    .iesucrecpA(register_busA[4] ),
    .iesucrecpB(register_busB[4] ),
    .iesucrecpC(register_busC[4] ),
    .irqstatuspA(register_busA[2] ),
    .irqstatuspB(register_busB[2] ),
    .irqstatuspC(register_busC[2] ),
    .irqsuctrapA(register_busA[1] ),
    .irqsuctrapB(register_busB[1] ),
    .irqsuctrapC(register_busC[1] ),
    .irqsucrecpA(register_busA[0] ),
    .irqsucrecpB(register_busB[0] ),
    .irqsucrecpC(register_busC[0] ),
    .irqstatuscA(irqstatusA),
    .irqstatuscB(irqstatusB),
    .irqstatuscC(irqstatusC),
    .irqsuctracA(irqsuctraA),
    .irqsuctracB(irqsuctraB),
    .irqsuctracC(irqsuctraC),
    .irqsucreccA(irqsucrecA),
    .irqsucreccB(irqsucrecB),
    .irqsucreccC(irqsucrecC),
    .registerA(intregrA),
    .registerB(intregrB),
    .registerC(intregrC)
    );

prescalereg2TMR prescaleregister (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .cpuA(prescaA),
    .cpuB(prescaB),
    .cpuC(prescaC),
    .reginpA(register_busA),
    .reginpB(register_busB),
    .reginpC(register_busC),
    .regoutA(preregrA),
    .regoutB(preregrB),
    .regoutC(preregrC)
    );

recregister2TMR rdata12 (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .canA(activrregA),
    .canB(activrregB),
    .canC(activrregC),
    .regin1A(data1rA),
    .regin1B(data1rB),
    .regin1C(data1rC),
    .regin2A(data2rA),
    .regin2B(data2rB),
    .regin2C(data2rC),
    .regoutA(recd01rA),
    .regoutB(recd01rB),
    .regoutC(recd01rC)
    );

recregister2TMR rdata34 (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .canA(activrregA),
    .canB(activrregB),
    .canC(activrregC),
    .regin1A(data3rA),
    .regin1B(data3rB),
    .regin1C(data3rC),
    .regin2A(data4rA),
    .regin2B(data4rB),
    .regin2C(data4rC),
    .regoutA(recd23rA),
    .regoutB(recd23rB),
    .regoutC(recd23rC)
    );

recregister2TMR rdata56 (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .canA(activrregA),
    .canB(activrregB),
    .canC(activrregC),
    .regin1A(data5rA),
    .regin1B(data5rB),
    .regin1C(data5rC),
    .regin2A(data6rA),
    .regin2B(data6rB),
    .regin2C(data6rC),
    .regoutA(recd45rA),
    .regoutB(recd45rB),
    .regoutC(recd45rC)
    );

recregister2TMR rdata78 (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .canA(activrregA),
    .canB(activrregB),
    .canC(activrregC),
    .regin1A(data7rA),
    .regin1B(data7rB),
    .regin1C(data7rC),
    .regin2A(data8rA),
    .regin2B(data8rB),
    .regin2C(data8rC),
    .regoutA(recd67rA),
    .regoutB(recd67rB),
    .regoutC(recd67rC)
    );

transmesconreg2TMR tcontrol (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .cpuA(traconaA),
    .cpuB(traconaB),
    .cpuC(traconaC),
    .canA(activtregA),
    .canB(activtregB),
    .canC(activtregC),
    .tsucfA(sucftraniA),
    .tsucfB(sucftraniB),
    .tsucfC(sucftraniC),
    .reginpA(register_busA),
    .reginpB(register_busB),
    .reginpC(register_busC),
    .regoutA(traconrA),
    .regoutB(traconrB),
    .regoutC(traconrC)
    );

transmitreg2TMR tarbit1 (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .cpuA(traar1aA),
    .cpuB(traar1aB),
    .cpuC(traar1aC),
    .reginpA(register_busA),
    .reginpB(register_busB),
    .reginpC(register_busC),
    .regoutA(traar1rA),
    .regoutB(traar1rB),
    .regoutC(traar1rC)
    );

transmitreg2TMR tarbit2 (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .cpuA(traar2aA),
    .cpuB(traar2aB),
    .cpuC(traar2aC),
    .reginpA(register_busA),
    .reginpB(register_busB),
    .reginpC(register_busC),
    .regoutA(traar2rA),
    .regoutB(traar2rB),
    .regoutC(traar2rC)
    );

transmitreg2TMR tdata12 (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .cpuA(trad01aA),
    .cpuB(trad01aB),
    .cpuC(trad01aC),
    .reginpA(register_busA),
    .reginpB(register_busB),
    .reginpC(register_busC),
    .regoutA(trad01rA),
    .regoutB(trad01rB),
    .regoutC(trad01rC)
    );

transmitreg2TMR tdata34 (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .cpuA(trad23aA),
    .cpuB(trad23aB),
    .cpuC(trad23aC),
    .reginpA(register_busA),
    .reginpB(register_busB),
    .reginpC(register_busC),
    .regoutA(trad23rA),
    .regoutB(trad23rB),
    .regoutC(trad23rC)
    );

transmitreg2TMR tdata56 (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .cpuA(trad45aA),
    .cpuB(trad45aB),
    .cpuC(trad45aC),
    .reginpA(register_busA),
    .reginpB(register_busB),
    .reginpC(register_busC),
    .regoutA(trad45rA),
    .regoutB(trad45rB),
    .regoutC(trad45rC)
    );

transmitreg2TMR tdata78 (
    .clkA(clockA),
    .clkB(clockB),
    .clkC(clockC),
    .rstA(resetA),
    .rstB(resetB),
    .rstC(resetC),
    .cpuA(trad67aA),
    .cpuB(trad67aB),
    .cpuC(trad67aC),
    .reginpA(register_busA),
    .reginpB(register_busB),
    .reginpC(register_busC),
    .regoutA(trad67rA),
    .regoutB(trad67rB),
    .regoutC(trad67rC)
    );
endmodule

