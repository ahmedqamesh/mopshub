//
// Module mopshub_triplicated.edgepuffer2TMR.struct
//
// Created:
//          by - dcs.dcs (localhost)
//          at - 09:18:04 05/10/22
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//


module edgepuffer2TMR( 
   // Port Declarations
   input   wire      clockA, 
   input   wire      clockB, 
   input   wire      clockC, 
   input   wire      Prescale_ENA, 
   input   wire      Prescale_ENB, 
   input   wire      Prescale_ENC, 
   input   wire      resetA, 
   input   wire      resetB, 
   input   wire      resetC, 
   input   wire      rxA, 
   input   wire      rxB, 
   input   wire      rxC, 
   output  wire      pufferA, 
   output  wire      pufferB, 
   output  wire      pufferC
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wor    buffTmrErrorC;
wire   buffVotedC;
wor    buffTmrErrorB;
wire   buffVotedB;
wor    buffTmrErrorA;
wire   buffVotedA;
reg    buffA;
reg    buffB;
reg    buffC;


// Instances 
majorityVoter buffVoterA( 
   .inA    (buffA), 
   .inB    (buffB), 
   .inC    (buffC), 
   .out    (buffVotedA), 
   .tmrErr (buffTmrErrorA)
); 

majorityVoter buffVoterB( 
   .inA    (buffA), 
   .inB    (buffB), 
   .inC    (buffC), 
   .out    (buffVotedB), 
   .tmrErr (buffTmrErrorB)
); 

majorityVoter buffVoterC( 
   .inA    (buffA), 
   .inB    (buffB), 
   .inC    (buffC), 
   .out    (buffVotedC), 
   .tmrErr (buffTmrErrorC)
); 

// HDL Embedded Text Block 1 eb1
assign pufferA =  buffVotedA;
assign pufferB =  buffVotedB;
assign pufferC =  buffVotedC;
// HDL Embedded Text Block 2 eb2
always @( posedge clockA or negedge resetA )
  begin
    if (resetA==1'b0)
      begin
        buffA <= 1'b0;
      end
    else
      begin
        buffA <= buffVotedA;
        if (Prescale_ENA==1'b1)
          begin
            buffA <= rxA;
          end
      end
  end
// HDL Embedded Text Block 3 eb3
always @( posedge clockB or negedge resetB )
  begin
    if (resetB==1'b0)
      begin
        buffB <= 1'b0;
      end
    else
      begin
        buffB <= buffVotedB;
        if (Prescale_ENB==1'b1)
          begin
            buffB <= rxB;
          end
      end
  end
// HDL Embedded Text Block 4 eb4
always @( posedge clockC or negedge resetC )
  begin
    if (resetC==1'b0)
      begin
        buffC <= 1'b0;
      end
    else
      begin
        buffC <= buffVotedC;
        if (Prescale_ENC==1'b1)
          begin
            buffC <= rxC;
          end
      end
  end

endmodule // edgepuffer2TMR

