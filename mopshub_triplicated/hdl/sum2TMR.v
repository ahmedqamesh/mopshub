/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/sum2TMR.v                                                                     *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 05/12/2022 13:28:35                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Documents/GitHub/mopshub_triplicated/triplicated/mopshub_top_board_16/hdl *
 * cmd     : /mnt/c/Users/Lucas/Documents/GitHub/mopshub_triplicated/tmrg-master/bin/tmrg -vv -c    *
 *           tmrg.cfg                                                                               *
 * tmrg rev: b25f042058e4e97751df2a0933c24aeadd5a78a5                                               *
 *                                                                                                  *
 * src file: sum2.v                                                                                 *
 *           Git SHA           : b25f042058e4e97751df2a0933c24aeadd5a78a5 (?? sum2.v)               *
 *           Modification time : 2022-11-10 21:22:58                                                *
 *           File Size         : 4557                                                               *
 *           MD5 hash          : d3bbd618f50621647d009edb54effed3                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module sum2TMR(
  input wire [3:0] count ,
  input wire [2:0] tseg1org ,
  input wire [4:0] tseg1mpl ,
  input wire [2:0] tseg2 ,
  input wire [2:0] sjw ,
  output reg  notnull ,
  output reg  gtsjwp1 ,
  output reg  gttseg1p1 ,
  output reg  cpsgetseg1ptseg2p2 ,
  output reg  cetseg1ptseg2p1 ,
  output reg  countesmpltime ,
  output reg [4:0] tseg1p1psjw ,
  output reg [4:0] tseg1pcount 
);
reg  [2:0] tseg1m1 ;
reg  [4:0] tseg1p1mpl ;
reg  [3:0] tseg1p1org ;
reg  [3:0] sjwp1 ;
reg  [4:0] countpsjw ;
reg  [4:0] tseg1ptseg2p1 ;
reg  [4:0] tseg1ptseg2p2 ;

always @( tseg1mpl )
  begin
    tseg1p1mpl <= tseg1mpl+1;
  end

always @( tseg1org )
  begin
    tseg1p1org <= tseg1org+1;
  end

always @( tseg1org )
  begin
    if (tseg1org>0)
      tseg1m1 <= tseg1org-1;
    else
      tseg1m1 <= 0;
  end

always @( sjw )
  begin
    sjwp1 <= sjw+1;
  end

always @( count or sjw )
  begin
    countpsjw <= count+sjw;
  end

always @( tseg1p1mpl or tseg2 )
  begin
    tseg1ptseg2p1 <= tseg1p1mpl+{2'b00,tseg2};
  end

always @( tseg1ptseg2p1 )
  begin
    tseg1ptseg2p2 <= tseg1ptseg2p1+1;
  end

always @( tseg1m1 or count )
  begin
    tseg1pcount <= tseg1m1+count;
  end

always @( tseg1p1org or sjw )
  begin
    tseg1p1psjw <= tseg1p1org+sjw;
  end

always @( count )
  begin
    if (count!=0)
      notnull <= 1'b1;
    else
      notnull <= 1'b0;
  end

always @( count or sjwp1 )
  begin
    if (count>sjwp1)
      gtsjwp1 <= 1'b1;
    else
      gtsjwp1 <= 1'b0;
  end

always @( count or tseg1p1mpl )
  begin
    if ({1'b0,count}>tseg1p1mpl)
      gttseg1p1 <= 1'b1;
    else
      gttseg1p1 <= 1'b0;
  end

always @( countpsjw or tseg1ptseg2p2 )
  begin
    if (countpsjw>=tseg1ptseg2p2)
      cpsgetseg1ptseg2p2 <= 1'b1;
    else
      cpsgetseg1ptseg2p2 <= 1'b0;
  end

always @( count or tseg1ptseg2p1 )
  begin
    if ({1'b0,count}==tseg1ptseg2p1)
      cetseg1ptseg2p1 <= 1'b1;
    else
      cetseg1ptseg2p1 <= 1'b0;
  end

always @( count or tseg1p1mpl )
  begin
    if ({1'b0,count}==tseg1p1mpl)
      countesmpltime <= 1'b1;
    else
      countesmpltime <= 1'b0;
  end
endmodule

