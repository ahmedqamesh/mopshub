//
// Module mopshub_triplicated.ready_counterTMR.struct
//
// Created:
//          by - dcs.dcs (localhost)
//          at - 09:18:04 05/10/22
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall 
`timescale  1ns/10ps
module ready_counterTMR( 
   // Port Declarations
   input   wire      clkA, 
   input   wire      clkB, 
   input   wire      clkC, 
   input   wire      rstnA, 
   input   wire      rstnB, 
   input   wire      rstnC, 
   input   wire      enableA, 
   input   wire      enableB, 
   input   wire      enableC, 
   input   wire      en_osc_trimA, 
   input   wire      en_osc_trimB, 
   input   wire      en_osc_trimC, 
   output  wire      readyA, 
   output  wire      readyB, 
   output  wire      readyC
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wor         counterTmrErrorC;
wire  [9:0] counterVotedC;
wor         counterTmrErrorB;
wire  [9:0] counterVotedB;
wor         counterTmrErrorA;
wire  [9:0] counterVotedA;
reg   [9:0] counterA;
reg   [9:0] counterB;
reg   [9:0] counterC;


// Instances 
majorityVoter #(10) counterVoterA( 
   .inA    (counterA), 
   .inB    (counterB), 
   .inC    (counterC), 
   .out    (counterVotedA), 
   .tmrErr (counterTmrErrorA)
); 

majorityVoter #(10) counterVoterB( 
   .inA    (counterA), 
   .inB    (counterB), 
   .inC    (counterC), 
   .out    (counterVotedB), 
   .tmrErr (counterTmrErrorB)
); 

majorityVoter #(10) counterVoterC( 
   .inA    (counterA), 
   .inB    (counterB), 
   .inC    (counterC), 
   .out    (counterVotedC), 
   .tmrErr (counterTmrErrorC)
); 

// HDL Embedded Text Block 1 eb1
always @( posedge clkA or negedge rstnA )
  begin
    if (rstnA==0)
      counterA <= 10'd659;
    else
      if (en_osc_trimA&enableA)
        counterA <= counterA-1;
      else
        if (~en_osc_trimA)
          counterA <= 10'd659;
        else
          counterA <= counterVotedA;
  end
// HDL Embedded Text Block 2 eb2
always @( posedge clkB or negedge rstnB )
  begin
    if (rstnB==0)
      counterB <= 10'd659;
    else
      if (en_osc_trimB&enableB)
        counterB <= counterB-1;
      else
        if (~en_osc_trimB)
          counterB <= 10'd659;
        else
          counterB <= counterVotedB;
  end
// HDL Embedded Text Block 3 eb3
always @( posedge clkC or negedge rstnC )
  begin
    if (rstnC==0)
      counterC <= 10'd659;
    else
      if (en_osc_trimC&enableC)
        counterC <= counterC-1;
      else
        if (~en_osc_trimC)
          counterC <= 10'd659;
        else
          counterC <= counterVotedC;
  end
// HDL Embedded Text Block 4 eb4
assign readyA =  (counterVotedA==10'd0) ? 1'b1 : 1'b0;
assign readyB =  (counterVotedB==10'd0) ? 1'b1 : 1'b0;
assign readyC =  (counterVotedC==10'd0) ? 1'b1 : 1'b0;

endmodule // ready_counterTMR

