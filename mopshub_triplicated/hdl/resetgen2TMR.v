/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/resetgen2TMR.v                                                                *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 06/10/2022 13:53:02                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Documents/GitHub/mopshub_triplicated/triplicated/mopshub_top_board/hdl *
 * cmd     : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/tmrg-master/bin/tmrg -vv -c tmrg.cfg   *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: resetgen2.v                                                                            *
 *           Git SHA           : c110441b08b692cc54ebd4a3b84a2599430e8f93                           *
 *           Modification time : 2022-08-25 10:39:13                                                *
 *           File Size         : 1834                                                               *
 *           MD5 hash          : 5511edd98460aba3e72fdd5d5b5fa6ad                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module resetgen2TMR(
  input wire  clock ,
  input wire  reset ,
  output wire  sync_reset 
);
wire resetC;
wire resetB;
wire resetA;
wire [1:0] countVC;
wire [1:0] countVB;
wire [1:0] countVA;
wire clockC;
wire clockB;
wire clockA;
wire activeVC;
wire activeVB;
wire activeVA;
wor countTmrError;
wire [1:0] count;
wor activeTmrError;
wire active;
reg  activeA ;
reg  activeB ;
reg  activeC ;
reg  [1:0] countA ;
reg  [1:0] countB ;
reg  [1:0] countC ;
wire activeV =  active;
wire [1:0] countV =  count;

always @( posedge clockA or negedge resetA )
  begin
    if (resetA==1'b0)
      begin
        activeA <= 1'b1;
        countA <= 2'b00;
      end
    else
      begin
        countA <= countVA;
        activeA <= activeVA;
        if (activeVA==1'b1)
          if (countVA==2'b11)
            activeA <= 1'b0;
          else
            countA <= countVA+1;
      end
  end

always @( posedge clockB or negedge resetB )
  begin
    if (resetB==1'b0)
      begin
        activeB <= 1'b1;
        countB <= 2'b00;
      end
    else
      begin
        countB <= countVB;
        activeB <= activeVB;
        if (activeVB==1'b1)
          if (countVB==2'b11)
            activeB <= 1'b0;
          else
            countB <= countVB+1;
      end
  end

always @( posedge clockC or negedge resetC )
  begin
    if (resetC==1'b0)
      begin
        activeC <= 1'b1;
        countC <= 2'b00;
      end
    else
      begin
        countC <= countVC;
        activeC <= activeVC;
        if (activeVC==1'b1)
          if (countVC==2'b11)
            activeC <= 1'b0;
          else
            countC <= countVC+1;
      end
  end
assign sync_reset =  reset&~activeV;

majorityVoter activeVoter (
    .inA(activeA),
    .inB(activeB),
    .inC(activeC),
    .out(active),
    .tmrErr(activeTmrError)
    );

majorityVoter #(.WIDTH(2)) countVoter (
    .inA(countA),
    .inB(countB),
    .inC(countC),
    .out(count),
    .tmrErr(countTmrError)
    );

fanout activeVFanout (
    .in(activeV),
    .outA(activeVA),
    .outB(activeVB),
    .outC(activeVC)
    );

fanout clockFanout (
    .in(clock),
    .outA(clockA),
    .outB(clockB),
    .outC(clockC)
    );

fanout #(.WIDTH(2)) countVFanout (
    .in(countV),
    .outA(countVA),
    .outB(countVB),
    .outC(countVC)
    );

fanout resetFanout (
    .in(reset),
    .outA(resetA),
    .outB(resetB),
    .outC(resetC)
    );
endmodule

