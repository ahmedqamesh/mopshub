/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/buffer_rec_spi_dataTMR.v                                                      *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 03/04/2022 20:08:31                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/triplicated/mopshub_top_canakari_ftrim/hdl *
 * cmd     : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/tmrg-master/bin/tmrg -vv -c tmrg.cfg   *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: buffer_rec_spi_data.v                                                                  *
 *           Git SHA           : File not in git repository!                                        *
 *           Modification time : 2022-03-28 18:32:11                                                *
 *           File Size         : 1892                                                               *
 *           MD5 hash          : 49fb55593ef8cec98e4454390c846a4e                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module buffer_rec_spi_dataTMR(
  input wire  clkA ,
  input wire  clkB ,
  input wire  clkC ,
  input wire  rstA ,
  input wire  rstB ,
  input wire  rstC ,
  input wire  buffer_enA ,
  input wire  buffer_enB ,
  input wire  buffer_enC ,
  input wire [7:0] spi_id_inA ,
  input wire [7:0] spi_id_inB ,
  input wire [7:0] spi_id_inC ,
  input wire [7:0] spi_regA ,
  input wire [7:0] spi_regB ,
  input wire [7:0] spi_regC ,
  input wire [7:0] data_rec_inA ,
  input wire [7:0] data_rec_inB ,
  input wire [7:0] data_rec_inC ,
  input wire [7:0] spi_selectA ,
  input wire [7:0] spi_selectB ,
  input wire [7:0] spi_selectC ,
  output wire  end_read_misoA ,
  output wire  end_read_misoB ,
  output wire  end_read_misoC ,
  output wire [31:0] data_rec_outA ,
  output wire [31:0] data_rec_outB ,
  output wire [31:0] data_rec_outC 
);
reg  [7:0] idA ;
reg  [7:0] idB ;
reg  [7:0] idC ;
reg  [7:0] b1A ;
reg  [7:0] b1B ;
reg  [7:0] b1C ;
reg  [7:0] b2A ;
reg  [7:0] b2B ;
reg  [7:0] b2C ;
reg  [7:0] b3A ;
reg  [7:0] b3B ;
reg  [7:0] b3C ;
reg  end_read_miso_regA ;
reg  end_read_miso_regB ;
reg  end_read_miso_regC ;
initial
  begin
    idA =  8'h0;
    b1A =  8'h0;
    b2A =  8'h0;
    b3A =  8'h0;
    end_read_miso_regA =  1'b0;
  end
initial
  begin
    idB =  8'h0;
    b1B =  8'h0;
    b2B =  8'h0;
    b3B =  8'h0;
    end_read_miso_regB =  1'b0;
  end
initial
  begin
    idC =  8'h0;
    b1C =  8'h0;
    b2C =  8'h0;
    b3C =  8'h0;
    end_read_miso_regC =  1'b0;
  end

always @( posedge clkA )
  begin
    if (!rstA)
      begin
        idA <= 8'h000;
        b1A <= 8'h00;
        b2A <= 8'h00;
        b3A <= 8'h00;
        end_read_miso_regA =  1'b0;
      end
    if (buffer_enA)
      begin
        idA <= spi_id_inA;
        b1A <= spi_selectA;
        b2A <= spi_regA;
        b3A <= data_rec_inA;
        end_read_miso_regA =  1'b1;
      end
    else
      begin
        idA <= idA;
        b1A <= b1A;
        b2A <= b2A;
        b3A <= b3A;
        end_read_miso_regA =  1'b0;
      end
  end

always @( posedge clkB )
  begin
    if (!rstB)
      begin
        idB <= 8'h000;
        b1B <= 8'h00;
        b2B <= 8'h00;
        b3B <= 8'h00;
        end_read_miso_regB =  1'b0;
      end
    if (buffer_enB)
      begin
        idB <= spi_id_inB;
        b1B <= spi_selectB;
        b2B <= spi_regB;
        b3B <= data_rec_inB;
        end_read_miso_regB =  1'b1;
      end
    else
      begin
        idB <= idB;
        b1B <= b1B;
        b2B <= b2B;
        b3B <= b3B;
        end_read_miso_regB =  1'b0;
      end
  end

always @( posedge clkC )
  begin
    if (!rstC)
      begin
        idC <= 8'h000;
        b1C <= 8'h00;
        b2C <= 8'h00;
        b3C <= 8'h00;
        end_read_miso_regC =  1'b0;
      end
    if (buffer_enC)
      begin
        idC <= spi_id_inC;
        b1C <= spi_selectC;
        b2C <= spi_regC;
        b3C <= data_rec_inC;
        end_read_miso_regC =  1'b1;
      end
    else
      begin
        idC <= idC;
        b1C <= b1C;
        b2C <= b2C;
        b3C <= b3C;
        end_read_miso_regC =  1'b0;
      end
  end
assign end_read_misoA =  end_read_miso_regA;
assign end_read_misoB =  end_read_miso_regB;
assign end_read_misoC =  end_read_miso_regC;
assign data_rec_outA =  {idA,b1A,b2A,b3A};
assign data_rec_outB =  {idB,b1B,b2B,b3B};
assign data_rec_outC =  {idC,b1C,b2C,b3C};
endmodule

