//
// Module mopshub_triplicated.biterrordetect2TMR.struct
//
// Created:
//          by - dcs.dcs (localhost)
//          at - 09:18:06 05/10/22
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//


module biterrordetect2TMR( 
   // Port Declarations
   input   wire      clockA, 
   input   wire      clockB, 
   input   wire      clockC, 
   input   wire      bitinA, 
   input   wire      bitinB, 
   input   wire      bitinC, 
   input   wire      bitoutA, 
   input   wire      bitoutB, 
   input   wire      bitoutC, 
   input   wire      activA, 
   input   wire      activB, 
   input   wire      activC, 
   input   wire      resetA, 
   input   wire      resetB, 
   input   wire      resetC, 
   output  wire      biterrorA, 
   output  wire      biterrorB, 
   output  wire      biterrorC
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wor    errorTmrErrorC;
wire   errorVotedC;
wor    errorTmrErrorB;
wire   errorVotedB;
wor    errorTmrErrorA;
wire   errorVotedA;
reg    errorA;
reg    errorB;
reg    errorC;


// Instances 
majorityVoter errorVoterA( 
   .inA    (errorA), 
   .inB    (errorB), 
   .inC    (errorC), 
   .out    (errorVotedA), 
   .tmrErr (errorTmrErrorA)
); 

majorityVoter errorVoterB( 
   .inA    (errorA), 
   .inB    (errorB), 
   .inC    (errorC), 
   .out    (errorVotedB), 
   .tmrErr (errorTmrErrorB)
); 

majorityVoter errorVoterC( 
   .inA    (errorA), 
   .inB    (errorB), 
   .inC    (errorC), 
   .out    (errorVotedC), 
   .tmrErr (errorTmrErrorC)
); 

// HDL Embedded Text Block 1 eb1
assign biterrorA =  errorVotedA;
assign biterrorB =  errorVotedB;
assign biterrorC =  errorVotedC;
// HDL Embedded Text Block 2 eb2
always @( posedge clockA )
  begin
    if (resetA==1'b0)
      errorA <= 1'b0;
    else
      if (activA==1'b1)
        begin
          if (bitinA!=bitoutA)
            errorA <= 1'b1;
          else
            errorA <= 1'b0;
        end
      else
        errorA <= errorVotedA;
  end
// HDL Embedded Text Block 3 eb3
always @( posedge clockB )
  begin
    if (resetB==1'b0)
      errorB <= 1'b0;
    else
      if (activB==1'b1)
        begin
          if (bitinB!=bitoutB)
            errorB <= 1'b1;
          else
            errorB <= 1'b0;
        end
      else
        errorB <= errorVotedB;
  end
// HDL Embedded Text Block 4 eb4
always @( posedge clockC )
  begin
    if (resetC==1'b0)
      errorC <= 1'b0;
    else
      if (activC==1'b1)
        begin
          if (bitinC!=bitoutC)
            errorC <= 1'b1;
          else
            errorC <= 1'b0;
        end
      else
        errorC <= errorVotedC;
  end

endmodule // biterrordetect2TMR

