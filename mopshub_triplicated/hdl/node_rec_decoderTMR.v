/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./output/node_rec_decoderTMR.v                                                         *
 *                                                                                                  *
 * user    : lucas                                                                                  *
 * host    : DESKTOP-BFDSFP2                                                                        *
 * date    : 16/08/2022 12:58:32                                                                    *
 *                                                                                                  *
 * workdir : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/mopshub_top_board_canakari_ftrim/hdl   *
 * cmd     : /mnt/c/Users/Lucas/Desktop/mopshub_triplication/tmrg-master/bin/tmrg -c tmrg.cfg -vvv  *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: node_rec_decoder.v                                                                     *
 *           Git SHA           : File not in git repository!                                        *
 *           Modification time : 2022-08-12 10:17:11                                                *
 *           File Size         : 2135                                                               *
 *           MD5 hash          : dca4c942aff2e8fa347f1a5e8f43601b                                   *
 *                                                                                                  *
 ****************************************************************************************************/

module dec32_NbitTMR(
  input wire  clk ,
  input wire  rst ,
  input wire  Input0 ,
  input wire  Input1 ,
  input wire  Input2 ,
  input wire  Input3 ,
  input wire  Input4 ,
  input wire  Input5 ,
  input wire  Input6 ,
  input wire  Input7 ,
  input wire  Input8 ,
  input wire  Input9 ,
  input wire  Input10 ,
  input wire  Input11 ,
  input wire  Input12 ,
  input wire  Input13 ,
  input wire  Input14 ,
  input wire  Input15 ,
  output wire [15:0] data_tra_out 
);
wire rstC;
wire rstB;
wire rstA;
wire [15:0] irqsucrec_signalsC;
wire [15:0] irqsucrec_signalsB;
wire [15:0] irqsucrec_signalsA;
wire clkC;
wire clkB;
wire clkA;
wor output_bus_regTmrError;
wire [15:0] output_bus_reg;
reg  [15:0] output_bus_regA ;
reg  [15:0] output_bus_regB ;
reg  [15:0] output_bus_regC ;
wire [15:0] irqsucrec_signals;
initial
  output_bus_regA =  16'd0;
initial
  output_bus_regB =  16'd0;
initial
  output_bus_regC =  16'd0;
assign irqsucrec_signals[0]  =  Input0;
assign irqsucrec_signals[1]  =  Input1;
assign irqsucrec_signals[2]  =  Input2;
assign irqsucrec_signals[3]  =  Input3;
assign irqsucrec_signals[4]  =  Input4;
assign irqsucrec_signals[5]  =  Input5;
assign irqsucrec_signals[6]  =  Input6;
assign irqsucrec_signals[7]  =  Input7;
assign irqsucrec_signals[8]  =  Input8;
assign irqsucrec_signals[9]  =  Input9;
assign irqsucrec_signals[10]  =  Input10;
assign irqsucrec_signals[11]  =  Input11;
assign irqsucrec_signals[12]  =  Input12;
assign irqsucrec_signals[13]  =  Input13;
assign irqsucrec_signals[14]  =  Input14;
assign irqsucrec_signals[15]  =  Input15;
assign data_tra_out =  output_bus_reg;

always @( posedge clkA )
  begin
    if (!rstA)
      begin
        output_bus_regA <= 16'd0;
      end
    else
      output_bus_regA <= irqsucrec_signalsA;
  end

always @( posedge clkB )
  begin
    if (!rstB)
      begin
        output_bus_regB <= 16'd0;
      end
    else
      output_bus_regB <= irqsucrec_signalsB;
  end

always @( posedge clkC )
  begin
    if (!rstC)
      begin
        output_bus_regC <= 16'd0;
      end
    else
      output_bus_regC <= irqsucrec_signalsC;
  end

majorityVoter #(.WIDTH(16)) output_bus_regVoter (
    .inA(output_bus_regA),
    .inB(output_bus_regB),
    .inC(output_bus_regC),
    .out(output_bus_reg),
    .tmrErr(output_bus_regTmrError)
    );

fanout clkFanout (
    .in(clk),
    .outA(clkA),
    .outB(clkB),
    .outC(clkC)
    );

fanout #(.WIDTH(16)) irqsucrec_signalsFanout (
    .in(irqsucrec_signals),
    .outA(irqsucrec_signalsA),
    .outB(irqsucrec_signalsB),
    .outC(irqsucrec_signalsC)
    );

fanout rstFanout (
    .in(rst),
    .outA(rstA),
    .outB(rstB),
    .outC(rstC)
    );
endmodule

