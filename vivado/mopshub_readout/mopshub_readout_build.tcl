#*****************************************************************************************
# Vivado (TM) v2020.2 (64-bit)
#
# mopshub_board_build.tcl: Tcl script for re-creating project 'mopshub_readout'
#
# Generated by Vivado on Tue Mar 26 10:20:00 CET 2024
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************

# Define a procedure for printing information with special formatting
proc specialPrint {name message color} {
    # Define ANSI color escape sequences
    set colorReset "\033\[0m"
    switch $color {
	"red" {
	    set colorCode "\033\[31m"
	}
	"green" {
	    set colorCode "\033\[32m"
	}
	"yellow" {
	    set colorCode "\033\[33m"
	}
	"blue" {
	    set colorCode "\033\[34m"
	}
	default {
	    set colorCode "\033\[0m" ;# Default to no color
	}
    }
    
    puts "\n**************************************"
    puts "*             $name           *"
    puts "**************************************\n"
    puts ">> $message"
    puts "\n**************************************\n"
}



# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true/home/dcs/git/mopshub/
  set files [list \
  # "$origin_dir/../../Vivado/mopshub_debug_board/mopshub_debug_board.srcs/sources_1/bd/mopshub_readout_bd/mopshub_readout_bd.bd" \
   "$origin_dir/src/constrs_1/mopshub_readout_board.xdc" \
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  set files [list \
   "$origin_dir/ip_repo/tri_mode_ethernet_mac_0.xci" \
   "$origin_dir/../../CANAkari/MOPSv2/ftrim/hdl/Accumulator.v" \
   "$origin_dir/../../CANAkari/MOPSv2/ftrim/hdl/Add_PID.v" \
   "$origin_dir/../../CANAkari/MOPSv2/ftrim/hdl/CLK_Counter.v" \
   "$origin_dir/../../CANAkari/MOPSv2/ftrim/hdl/Control_FSM.v" \
   "$origin_dir/../../CANAkari/MOPSv2/ftrim/hdl/Control_Sys.v" \
   "$origin_dir/../../CANAkari/MOPSv2/ftrim/hdl/Diff.v" \
   "$origin_dir/../../CANAkari/MOPSv2/ftrim/hdl/Ftrim_En.v" \
   "$origin_dir/../../CANAkari/MOPSv2/ftrim/hdl/Multi.v" \
   "$origin_dir/../../CANAkari/MOPSv2/ftrim/hdl/Multi_i.v" \
   "$origin_dir/../../CANAkari/MOPSv2/ftrim/hdl/Output_Scaling.v" \
   "$origin_dir/../../CANAkari/MOPSv2/ftrim/hdl/PID_Regler.v" \
   "$origin_dir/../../CANAkari/MOPSv2/ftrim/hdl/Phasenfehler_Reg.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/accmaskreg2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/biterrordetect2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/bittime2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/bittiming2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/can2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/counter2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/decapsulation2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/destuffing2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/edgepuffer2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/encapsulation2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/equal_id2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/erbcount2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/fastshift2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/faultfsm2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/fce2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/fsm_register2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/generalregister2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/interruptregister2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/interruptunit2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/iocpuavalon2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/llc2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/llc_fsm2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/mac2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/macfsm2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/prescale2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/prescalereg2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/rcrc_cell2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/rcrc_top2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/read_mux2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/ftrim/hdl/ready_counter.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/rec2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/recarbitreg2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/recmescontrolreg2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/recmeslen2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/recregister2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/reset_mac2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/resetgen2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/rshift_cell2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/rshift_top2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/meslencompare2.v" \   
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/multiplexeravalon2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/smpldbit_reg2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/stuffing2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/sum2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/tcrc_cell2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/tcrc_top2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/tec2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/timecount2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/transmesconreg2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/transmitreg2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/tseg_reg2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/tshift_cell2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/tshift_top2.v" \
   "$origin_dir/../../CANAkari/MOPSv2/canakari/hdl/write_demux2.v" \
   "$origin_dir/../../mopshub_lib/hdl/bitstream_shift_register.v" \
   "$origin_dir/../../mopshub_lib/hdl/bridge_controller_struct.v" \
   "$origin_dir/../../mopshub_lib/hdl/buffer_tristate_busid.v" \
   "$origin_dir/../../mopshub_lib/hdl/buffer_tristate_elink.v" \
   "$origin_dir/../../mopshub_lib/hdl/can_elink_bridge_sm_fsm.v" \
   "$origin_dir/../../mopshub_lib/hdl/can_interface_sm_fsm.v" \
   "$origin_dir/../../mopshub_lib/hdl/can_struct.v" \
   "$origin_dir/../../mopshub_lib/hdl/canakari_interface_mopshub_struct.v" \
   "$origin_dir/../../mopshub_lib/hdl/caninterface.v" \
   "$origin_dir/../../mopshub_lib/hdl/counter_enable.v" \
   "$origin_dir/../../mopshub_lib/hdl/counter_trigger.v" \
   "$origin_dir/../../mopshub_lib/hdl/debug_uart_core_struct.v" \
   "$origin_dir/../../mopshub_lib/hdl/debug_uart_receiver.v" \
   "$origin_dir/../../mopshub_lib/hdl/debug_uart_sm_fsm.v" \
   "$origin_dir/../../mopshub_lib/hdl/debug_uart_transmitter.v" \
   "$origin_dir/../../mopshub_lib/hdl/dec_8b10b_mopshub.v" \
   "$origin_dir/../../mopshub_lib/hdl/elink_core_struct.v" \
   "$origin_dir/../../mopshub_lib/hdl/elink_data_gen_sm_fsm.v" \
   "$origin_dir/../../mopshub_lib/hdl/elink_interface_rec_sm_fsm.v" \
   "$origin_dir/../../mopshub_lib/hdl/elink_interface_tra_sm_fsm.v" \
   "$origin_dir/../../mopshub_lib/hdl/elink_proc_in_dec8b10b_struct.v" \
   "$origin_dir/../../mopshub_lib/hdl/elink_proc_out_enc8b10b_struct.v" \
   "$origin_dir/../../mopshub_lib/hdl/elink_receiver_struct.v" \
   "$origin_dir/../../mopshub_lib/hdl/elink_transmitter_struct.v" \
   "$origin_dir/../../mopshub_lib/hdl/enc_8b10b_mopshub.v" \
   "$origin_dir/../../mopshub_lib/hdl/ethernet_core_struct.v" \
   "$origin_dir/../../mopshub_lib/hdl/fifo_async.v" \
   "$origin_dir/../../mopshub_lib/hdl/fifo_core_wrapper_struct.v" \
   "$origin_dir/../../mopshub_lib/hdl/fifo_mem.v" \
   "$origin_dir/../../mopshub_lib/hdl/fifo_rptr_empty.v" \
   "$origin_dir/../../mopshub_lib/hdl/fifo_sync_r2w.v" \
   "$origin_dir/../../mopshub_lib/hdl/fifo_sync_w2r.v" \
   "$origin_dir/../../mopshub_lib/hdl/fifo_wptr_full.v" \
   "$origin_dir/../../mopshub_lib/hdl/ip_output_diff_clk_mopshub_debug.v" \
   "$origin_dir/../../mopshub_lib/hdl/serializer_readout.v" \
   "$origin_dir/../../mopshub_lib/hdl/serializer_rx_nitz.v" \
   "$origin_dir/../../mopshub_lib/hdl/serializer_tx_nitz.v" \
   "$origin_dir/../../mopshub_lib/hdl/mux8_1_8bit.v" \
   "$origin_dir/../../mopshub_lib/hdl/mux8_Nbit.v" \
   "$origin_dir/../../mopshub_lib/hdl/osc_trim_sm_fsm.v" \
   "$origin_dir/../../mopshub_lib/hdl/rec_elink_buf.v" \
   "$origin_dir/../../mopshub_lib/hdl/rec_mes_buf.v" \
   "$origin_dir/../../mopshub_lib/hdl/sync_detector_struct.v" \
   "$origin_dir/../../mopshub_lib/hdl/timeout_rst_watchdog.v" \
   "$origin_dir/../../mopshub_lib/hdl/timeoutrst_module.v" \
   "$origin_dir/../../mopshub_lib/hdl/top_led_enable_sm_fsm.v" \
   "$origin_dir/../../mopshub_lib/hdl/top_led_for_synth_struct.v" \
   "$origin_dir/../../mopshub_lib/hdl/tra_elink_buf.v" \
   "$origin_dir/../../mopshub_lib/hdl/tra_mes_buf.v" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/ipbus_clock_div.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/clocks/clocks_us_serdes.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/ipbus_package.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_slaves/firmware/hdl/ipbus_reg_types.vhd" \
   "$origin_dir/../../mopshub_lib/hdl/ethernet_SM_entity.vhd" \
   "$origin_dir/../../mopshub_lib/hdl/ethernet_emac_wrapper_entity.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/led_stretcher.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/ipbus_trans_decl.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_ipam_block.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_build_arp.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_build_ping.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_ipaddr_ipam.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_build_payload.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_build_resend.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_build_status.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_status_buffer.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_byte_sum.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_do_rx_reset.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_packet_parser.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_rxram_mux.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_dualportram.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_buffer_selector.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_rxram_shim.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_dualportram_rx.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_rxtransactor_if_simple.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_dualportram_tx.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_tx_mux.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_txtransactor_if_simple.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_clock_crossing_if.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_if_flat.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/trans_arb.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/transactor_if.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/transactor_sm.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/transactor_cfg.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/transactor.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/masters/ipbus_ctrl.vhd" \
   "$origin_dir/../../mopshub_lib/hdl/ipbus_decode_ipbus_mopshub.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/ipbus_fabric_sel.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_slaves/firmware/hdl/ipbus_ctrlreg_v.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_slaves/firmware/hdl/ipbus_reg_v.vhd" \
   "$origin_dir/../../mopshub_lib/hdl/ethernet_payload_entity.vhd" \
   "$origin_dir/../../mopshub_lib/hdl/ethernet_ipbus_entity.vhd" \
   "$origin_dir/../../mopshub_lib/hdl/mopshub_readout_struct.v" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/ipbus_decode_ipbus_example.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/ipbus_decode_ipbus_example_xilinx_usp.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/icap_util.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/icap_decl.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/ipbus_addr_decode.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_eth/firmware/hdl/emac_hostbus_decl.vhd" \ 
   "$origin_dir/../../ipbus-firmware/components/ipbus_slaves/firmware/hdl/drp_decl.vhd" \
   "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/ipbus_decode_ipbus_example_xilinx_x7.vhd" \
   "$origin_dir/src/constrs_1/mopshub_readout.xdc" \
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  set paths [list \
   [file normalize "$origin_dir/ip_repo"] \
  ]
  foreach ipath $paths {
    if { ![file isdirectory $ipath] } {
      puts " Could not access $ipath "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir [file dirname [info script]]

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "mopshub_readout"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "mopshub_readout_build.tcl"


# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
#set orig_proj_dir "[file normalize "$origin_dir/mopshub_debug_board"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
#create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xczu9eg-ffvb1156-2-e
specialPrint "Build" "Project: ${_xil_proj_name_} $origin_dir/${_xil_proj_name_}" "green"

create_project ${_xil_proj_name_} $origin_dir/${_xil_proj_name_} -part xczu9eg-ffvb1156-2-e
# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "xilinx.com:zcu102:part0:3.3" -objects $obj
set_property -name "corecontainer.enable" -value "1" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_core_container" -value "1" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "zcu102" -objects $obj
set_property -name "platform.default_output_type" -value "sd_card" -objects $obj
set_property -name "platform.design_intent.datacenter" -value "false" -objects $obj
set_property -name "platform.design_intent.embedded" -value "true" -objects $obj
set_property -name "platform.design_intent.external_host" -value "false" -objects $obj
set_property -name "platform.design_intent.server_managed" -value "false" -objects $obj
set_property -name "platform.name" -value "mopshub_emci_hw" -objects $obj
set_property -name "platform.version" -value "1.0" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
if { $obj != {} } {
   set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo"]" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/ip_repo/tri_mode_ethernet_mac_0.xcix"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/bittime2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/bittiming2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Accumulator.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Add_PID.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/CLK_Counter.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Control_FSM.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Control_Sys.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Diff.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Ftrim_En.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Multi.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/counter2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/can2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Multi_i.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Output_Scaling.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/PID_Regler.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Phasenfehler_Reg.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/accmaskreg2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/decapsulation2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/destuffing2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/edgepuffer2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/biterrordetect2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/encapsulation2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/equal_id2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/erbcount2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/fastshift2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/faultfsm2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/fce2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/fsm_register2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/generalregister2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/interruptregister2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/interruptunit2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/iocpuavalon2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/llc2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/llc_fsm2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/mac2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/macfsm2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/meslencompare2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/multiplexeravalon2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/prescale2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/prescalereg2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/rcrc_cell2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/rcrc_top2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/read_mux2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/ready_counter.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/recarbitreg2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/recmescontrolreg2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/recmeslen2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/recregister2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/reset_mac2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/resetgen2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/rshift_cell2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/rshift_top2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/rec2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/transmesconreg2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/transmitreg2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/tcrc_cell2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/tcrc_top2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/tec2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/stuffing2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/smpldbit_reg2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/sum2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/timecount2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/tseg_reg2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/tshift_cell2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/tshift_top2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/write_demux2.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/bitstream_shift_register.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/bridge_controller_struct.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/buffer_tristate_busid.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/buffer_tristate_elink.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/can_elink_bridge_sm_fsm.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/can_interface_sm_fsm.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/can_struct.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/canakari_interface_mopshub_struct.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/caninterface.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/counter_enable.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/counter_trigger.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/debug_uart_core_struct.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/debug_uart_receiver.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/debug_uart_sm_fsm.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/debug_uart_transmitter.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/dec_8b10b_mopshub.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/elink_core_struct.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/elink_data_gen_sm_fsm.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/elink_interface_rec_sm_fsm.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/elink_interface_tra_sm_fsm.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/elink_proc_in_dec8b10b_struct.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/elink_proc_out_enc8b10b_struct.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/elink_receiver_struct.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/elink_transmitter_struct.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/enc_8b10b_mopshub.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/ethernet_core_struct.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/ip_output_diff_clk_mopshub_debug.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/serializer_readout.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/serializer_tx_nitz.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/serializer_rx_nitz.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/mux8_1_8bit.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/mux8_Nbit.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/osc_trim_sm_fsm.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/fifo_async.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/fifo_core_wrapper_struct.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/fifo_mem.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/fifo_rptr_empty.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/fifo_sync_r2w.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/fifo_sync_w2r.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/fifo_wptr_full.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/rec_elink_buf.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/rec_mes_buf.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/sync_detector_struct.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/timeout_rst_watchdog.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/timeoutrst_module.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/top_led_enable_sm_fsm.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/top_led_for_synth_struct.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/tra_elink_buf.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/tra_mes_buf.v"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/ethernet_SM_entity.vhd"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/ethernet_emac_wrapper_entity.vhd"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/ipbus_decode_ipbus_mopshub.vhd"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/ethernet_payload_entity.vhd"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/ethernet_ipbus_entity.vhd"] \
 [file normalize "${origin_dir}/../../mopshub_lib/hdl/mopshub_readout_struct.v"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_util/firmware/hdl/ipbus_clock_div.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_util/firmware/hdl/clocks/clocks_us_serdes.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_core/firmware/hdl/ipbus_package.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_slaves/firmware/hdl/ipbus_reg_types.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_util/firmware/hdl/led_stretcher.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_core/firmware/hdl/ipbus_trans_decl.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_ipam_block.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_build_arp.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_build_ping.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_ipaddr_ipam.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_build_payload.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_build_resend.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_build_status.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_status_buffer.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_byte_sum.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_do_rx_reset.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_packet_parser.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_rxram_mux.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_dualportram.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_buffer_selector.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_rxram_shim.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_dualportram_rx.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_rxtransactor_if_simple.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_dualportram_tx.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_tx_mux.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_txtransactor_if_simple.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_clock_crossing_if.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_if_flat.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_core/firmware/hdl/trans_arb.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_core/firmware/hdl/transactor_if.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_core/firmware/hdl/transactor_sm.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_core/firmware/hdl/transactor_cfg.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_core/firmware/hdl/transactor.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_util/firmware/hdl/masters/ipbus_ctrl.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_core/firmware/hdl/ipbus_fabric_sel.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_slaves/firmware/hdl/ipbus_ctrlreg_v.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_slaves/firmware/hdl/ipbus_reg_v.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_slaves/firmware/hdl/drp_decl.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_util/firmware/hdl/ipbus_decode_ipbus_example.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_util/firmware/hdl/ipbus_decode_ipbus_example_xilinx_usp.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_util/firmware/hdl/icap_util.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_util/firmware/hdl/icap_decl.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_util/firmware/hdl/ipbus_addr_decode.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_eth/firmware/hdl/emac_hostbus_decl.vhd"] \
 [file normalize "${origin_dir}/../../ipbus-firmware/components/ipbus_util/firmware/hdl/ipbus_decode_ipbus_example_xilinx_x7.vhd"] \
 ]

add_files -norecurse -fileset $obj $files

# Add local files from the original project (-no_copy_sources specified)
#set files [list \
# [file normalize "${origin_dir}/mopshub_debug_board/mopshub_debug_board.srcs/sources_1/bd/mopshub_readout_bd/mopshub_readout_bd.bd" ]\
#]
#set added_files [add_files -fileset sources_1 $files]


# Set 'sources_1' fileset file properties for remote files
#set file "$origin_dir/ip_repo/tri_mode_ethernet_mac_0.xcix"
#set file [file normalize $file]
#set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
#set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
#set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/ipbus_clock_div.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/clocks/clocks_us_serdes.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set file "${origin_dir}/../../ipbus-firmware/components/ipbus_eth/firmware/hdl/emac_hostbus_decl.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/ipbus_package.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_slaves/firmware/hdl/ipbus_reg_types.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../mopshub_lib/hdl/ethernet_SM_entity.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../mopshub_lib/hdl/ethernet_emac_wrapper_entity.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/led_stretcher.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/ipbus_trans_decl.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_ipam_block.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_build_arp.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_build_ping.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_ipaddr_ipam.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_build_payload.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_build_resend.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_build_status.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_status_buffer.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_byte_sum.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_do_rx_reset.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_packet_parser.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_rxram_mux.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_dualportram.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_buffer_selector.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_rxram_shim.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_dualportram_rx.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_rxtransactor_if_simple.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_dualportram_tx.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_tx_mux.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_txtransactor_if_simple.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_clock_crossing_if.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_transport_udp/firmware/hdl/udp_if_flat.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/trans_arb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/transactor_if.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/transactor_sm.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/transactor_cfg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/transactor.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/masters/ipbus_ctrl.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../mopshub_lib/hdl/ipbus_decode_ipbus_mopshub.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_core/firmware/hdl/ipbus_fabric_sel.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_slaves/firmware/hdl/ipbus_ctrlreg_v.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_slaves/firmware/hdl/ipbus_reg_v.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../mopshub_lib/hdl/ethernet_payload_entity.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../mopshub_lib/hdl/ethernet_ipbus_entity.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/ipbus_decode_ipbus_example.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/ipbus_decode_ipbus_example_xilinx_usp.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/icap_util.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/icap_decl.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/ipbus_addr_decode.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_slaves/firmware/hdl/drp_decl.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../ipbus-firmware/components/ipbus_util/firmware/hdl/ipbus_decode_ipbus_example_xilinx_x7.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

#set file "$origin_dir/src/imports/rtl/mii_to_rmii_conv/ilk_fpga_package.vhd"
#set file [file normalize $file]
#set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
#set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
#set file "mopshub_readout_bd/mopshub_readout_bd.bd"
#set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
#set_property -name "registered_with_manager" -value "1" -objects $file_obj


# Set 'sources_1' fileset properties
#set obj [get_filesets sources_1]
#set_property -name "top" -value "mopshub_readout_bd_wrapper" -objects $obj
#set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/src/constrs_1/mopshub_debug_board.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/src/constrs_1/mopshub_debug_board.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/src/constrs_1/mopshub_readout.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "mopshub_readout.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xczu9eg-ffvb1156-2-e -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xczu9eg-ffvb1156-2-e -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1

# Create block design
 source $origin_dir/src/bd/mopshub_readout_bd.tcl
after 2000
 # Generate the wrapper
set design_name [get_bd_designs]
after 2000
open_bd_design $origin_dir/src/bd/$design_name.bd 
regenerate_bd_layout
validate_bd_design -force
after 2000
make_wrapper -files [get_files $design_name.bd] -top

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse mopshub_readout_bd.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/${_xil_proj_name_}/${_xil_proj_name_}.gen/sources_1/bd/mopshub_readout_bd/hdl/mopshub_readout_bd_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse mopshub_readout_bd.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}

#add_files -norecurse  "${origin_dir}/${_xil_proj_name_}/${_xil_proj_name_}.gen/sources_1/bd/mopshub_readout_bd/hdl/mopshub_readout_bd_wrapper.v" 
after 2000


# Create 'constrs_1' fileset (if not found)
specialPrint "Build" "Set File Constraints" "green"
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]


update_compile_order -fileset sources_1
set_property top mopshub_readout_bd_wrapper [current_fileset]
update_compile_order -fileset sources_1
launch_runs synth_1 -jobs 3
launch_runs impl_1 -jobs 3
after 2000
launch_runs impl_1 -to_step write_bitstream -jobs 5