# vsim -f hds_args.tmp -foreign "hdsInit /eda/mentor/2019-20/RHELx86/HDL-DESIGNER_2019.4/resources/downstream/modelsim/ModelSim_64Bit.dll" -pli ""/eda/mentor/2019-20/RHELx86/HDL-DESIGNER_2019.4/resources/downstream/modelsim/ModelSim_64Bit.dll"" 
# Start time: 15:53:09 on Aug 25,2021
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: (vsim-3865) Due to PLI being present, global +acc is being enabled automatically. This will cause your simulation to run very slowly. Please use vsim -no_autoacc to disable this feature. This feature is now deprecated and will be removed from future releases.
# ** Warning: (vopt-10016) Option '-L ieee' was detected by vlog for design-unit 'tb_mopshubTop', but was not detected by vopt. The vlog option will be ignored.
# ** Warning: (vopt-10017) vopt and vlog detected inconsistent ordering of options -L tsmcdigital_lib, -L top_lib, -L MOPSv2_lib, -L canakari, -L CANdecoder, -L ftrim and -L mopshub_lib for design-unit 'tb_mopshubTop'. vopt will ignore the ordering that was given to vlog.
# ** Warning: (vopt-10017) vopt and vlog detected inconsistent ordering of options -L tsmcdigital_lib, -L top_lib, -L MOPSv2_lib, -L canakari, -L CANdecoder, -L ftrim and -L mopshub_lib for design-unit 'dec32_Nbit'. vopt will ignore the ordering that was given to vlog.
# ** Warning: (vopt-10017) vopt and vlog detected inconsistent ordering of options -L tsmcdigital_lib, -L top_lib, -L MOPSv2_lib, -L canakari, -L CANdecoder, -L ftrim and -L mopshub_lib for design-unit 'canframegen'. vopt will ignore the ordering that was given to vlog.
# ** Warning: (vopt-10017) vopt and vlog detected inconsistent ordering of options -L tsmcdigital_lib, -L top_lib, -L MOPSv2_lib, -L canakari, -L CANdecoder, -L ftrim and -L mopshub_lib for design-unit 'canframegen_sv_unit'. vopt will ignore the ordering that was given to vlog.
# Loading sv_std.std
# Loading work.tb_mopshubTop(fast)
# Loading work.mopshub_top(fast)
# Loading work.bridge_controller(fast)
# Loading work.can_elink_bridge_SM(fast)
# Loading work.canakari_interface(fast)
# Loading work.bit_counter(fast)
# Loading work.bus_comp(fast)
# Loading work.can_interface(fast)
# Loading work.can_interface_SM(fast)
# Loading work.canakari_rec_buffer(fast)
# Loading MOPSv2_lib.initialize_block(fast)
# Loading work.rec_data_buf(fast)
# Loading work.timout_rst(fast)
# Loading work.tra_data_buf(fast)
# Loading work.canakari_top(fast)
# Loading work.canakari_0_7(fast)
# Loading work.can(fast)
# Loading canakari.can2(fast)
# Loading canakari.resetgen2(fast)
# Loading canakari.mac2(fast)
# Loading canakari.reset_mac2(fast)
# Loading canakari.macfsm2(fast)
# Loading canakari.biterrordetect2(fast)
# Loading canakari.counter2(fast)
# Loading canakari.decapsulation2(fast)
# Loading canakari.destuffing2(fast)
# Loading canakari.encapsulation2(fast)
# Loading canakari.rcrc2(fast)
# Loading canakari.rcrc_cell2(fast)
# Loading canakari.recmeslen2(fast)
# Loading canakari.rshiftreg2(fast)
# Loading canakari.rshift_cell2(fast)
# Loading canakari.rshift_cell2(fast__1)
# Loading canakari.stuffing2(fast)
# Loading canakari.tcrc2(fast)
# Loading canakari.tcrc_cell2(fast)
# Loading canakari.tshiftreg2(fast)
# Loading canakari.tshift_cell2(fast)
# Loading canakari.tshift_cell2(fast__1)
# Loading canakari.fsm_register2(fast)
# Loading canakari.fastshift2(fast)
# Loading canakari.meslencompare2(fast)
# Loading canakari.llc2(fast)
# Loading canakari.llc_fsm2(fast)
# Loading canakari.equal_id2(fast)
# Loading canakari.bittiming2(fast)
# Loading ftrim.Control_Sys(fast)
# Loading ftrim.PID_Regler(fast)
# Loading ftrim.Ftrim_En(fast)
# Loading ftrim.Diff(fast)
# Loading ftrim.Multi(fast)
# Loading ftrim.Multi_i(fast)
# Loading ftrim.Accumulator(fast)
# Loading ftrim.Add_PID(fast)
# Loading ftrim.Output_Scaling(fast)
# Loading ftrim.CLK_Counter(fast)
# Loading ftrim.Control_FSM(fast)
# Loading ftrim.Phasenfehler_Reg(fast)
# Loading ftrim.ready_counter(fast)
# Loading canakari.bittime2(fast)
# Loading canakari.sum2(fast)
# Loading canakari.timecount2(fast)
# Loading canakari.edgepuffer2(fast)
# Loading canakari.smpldbit_reg2(fast)
# Loading canakari.tseg_reg2(fast)
# Loading canakari.fce2(fast)
# Loading canakari.faultfsm2(fast)
# Loading canakari.rec2(fast)
# Loading canakari.tec2(fast)
# Loading canakari.erbcount2(fast)
# Loading canakari.interruptunit2(fast)
# Loading canakari.iocpu2(fast)
# Loading canakari.multiplexer2(fast)
# Loading canakari.read_mux2(fast)
# Loading canakari.write_demux2(fast)
# Loading canakari.generalregister2(fast)
# Loading canakari.recmescontrolreg2(fast)
# Loading canakari.recarbitreg2(fast)
# Loading canakari.accmaskreg2(fast)
# Loading canakari.interrupregister2(fast)
# Loading canakari.prescalereg2(fast)
# Loading canakari.recregister2(fast)
# Loading canakari.transmesconreg2(fast)
# Loading canakari.transmitreg2(fast)
# Loading canakari.prescale2(fast)
# Loading work.node_rec_mux(fast)
# Loading work.bit_shifter(fast)
# Loading work.bus_rec_SM(fast)
# Loading work.dec32_Nbit(fast)
# Loading work.demux1_1bit(fast)
# Loading work.demux1_1bit(fast__1)
# Loading work.mux32_Nbit(fast)
# Loading work.node_tra_demux(fast)
# Loading work.demux1_Nbit(fast)
# Loading work.mux1_1bit(fast)
# Loading work.clock_divider(fast)
# Loading work.clock_divider(fast__1)
# Loading work.elink_core(fast)
# Loading work.clock_domain_crossing(fast)
# Loading work.elink_interface_rec_SM(fast)
# Loading work.elink_interface_tra_SM(fast)
# Loading work.elink_to_fifo(fast)
# Loading work.elink_proc_in_dec8b10b(fast)
# Loading work.bitstream_deserializer(fast)
# Loading work.bitstream_shift_register(fast)
# Loading work.dec_8b10b_wrap(fast)
# Loading work.sync_detector(fast)
# Loading work.fifo_RXelink_wrap(fast)
# Loading work.fifo_upstream(fast)
# Loading work.binary_counter(fast)
# Loading work.fifo_to_elink(fast)
# Loading work.elink_proc_out_enc8b10b(fast)
# Loading work.enc8b10b_wrap(fast)
# Loading work.mux4_Nbit(fast)
# Loading work.mux8_Nbit(fast)
# Loading work.pulse_pdxx_pwxx(fast)
# Loading work.triger_counter(fast)
# Loading work.fifo_TXelink_wrap(fast)
# Loading work.fifo_upstream(fast__1)
# Loading work.binary_counter(fast__1)
# Loading work.intialize_elinkCore(fast)
# Loading work.rec_elink_buf(fast)
# Loading work.tra_elink_buf(fast)
# Loading work.data_generator(fast)
# Loading CANdecoder.CANbus_decoder(fast)
# Loading CANdecoder.CANAkari_interfacedec(fast)
# Loading CANdecoder.caninterfacedec(fast)
# Loading CANdecoder.idcompdec(fast)
# Loading CANdecoder.interfaceSMdec(fast)
# Loading CANdecoder.bridgeSMdec(fast)
# Loading CANdecoder.initialize_blockdec(fast)
# Loading CANdecoder.rec_mes_bufdec(fast)
# Loading CANdecoder.timoutrstdec(fast)
# Loading work.EMCI_Emulator(fast)
# Loading top_lib.canframegen_sv_unit(fast)
# Loading top_lib.canframegen(fast)
# Loading work.clk_div(fast)
# Loading work.data_generator_SM(fast)
# Loading work.mops_top_level(fast)
# Loading CANdecoder.adcdumdata(fast)
# Loading MOPSv2_lib.top_level(fast)
# Loading MOPSv2_lib.clkbuffer(fast)
# Loading MOPSv2_lib.global_resetgen(fast)
# Loading MOPSv2_lib.delay_cell(fast)
# Loading canakari.can2(fast__1)
# Loading canakari.resetgen2(fast__1)
# Loading canakari.mac2(fast__1)
# Loading canakari.reset_mac2(fast__1)
# Loading canakari.macfsm2(fast__1)
# Loading canakari.biterrordetect2(fast__1)
# Loading canakari.counter2(fast__1)
# Loading canakari.destuffing2(fast__1)
# Loading canakari.encapsulation2(fast__1)
# Loading canakari.rcrc2(fast__1)
# Loading canakari.recmeslen2(fast__1)
# Loading canakari.rshiftreg2(fast__1)
# Loading canakari.stuffing2(fast__1)
# Loading canakari.tcrc2(fast__1)
# Loading canakari.tshiftreg2(fast__1)
# Loading canakari.fsm_register2(fast__1)
# Loading canakari.fastshift2(fast__1)
# Loading canakari.llc2(fast__1)
# Loading canakari.llc_fsm2(fast__1)
# Loading canakari.bittiming2(fast__1)
# Loading ftrim.Control_Sys(fast__1)
# Loading ftrim.PID_Regler(fast__1)
# Loading ftrim.Ftrim_En(fast__1)
# Loading ftrim.Diff(fast__1)
# Loading ftrim.Accumulator(fast__1)
# Loading ftrim.Output_Scaling(fast__1)
# Loading ftrim.CLK_Counter(fast__1)
# Loading ftrim.Control_FSM(fast__1)
# Loading ftrim.Phasenfehler_Reg(fast__1)
# Loading ftrim.ready_counter(fast__1)
# Loading canakari.bittime2(fast__1)
# Loading canakari.timecount2(fast__1)
# Loading canakari.edgepuffer2(fast__1)
# Loading canakari.smpldbit_reg2(fast__1)
# Loading canakari.tseg_reg2(fast__1)
# Loading canakari.fce2(fast__1)
# Loading canakari.faultfsm2(fast__1)
# Loading canakari.rec2(fast__1)
# Loading canakari.tec2(fast__1)
# Loading canakari.erbcount2(fast__1)
# Loading canakari.interruptunit2(fast__1)
# Loading canakari.iocpu2(fast__1)
# Loading canakari.generalregister2(fast__1)
# Loading canakari.recmescontrolreg2(fast__1)
# Loading canakari.recarbitreg2(fast__1)
# Loading canakari.accmaskreg2(fast__1)
# Loading canakari.interrupregister2(fast__1)
# Loading canakari.prescalereg2(fast__1)
# Loading canakari.recregister2(fast__1)
# Loading canakari.transmesconreg2(fast__1)
# Loading canakari.transmitreg2(fast__1)
# Loading canakari.prescale2(fast__1)
# Loading MOPSv2_lib.bridge_controller_top(fast)
# Loading MOPSv2_lib.ADCinterface(fast)
# Loading MOPSv2_lib.ADCfsm(fast)
# Loading MOPSv2_lib.adcsel(fast)
# Loading MOPSv2_lib.CANAkari_interface(fast)
# Loading MOPSv2_lib.caninterface(fast)
# Loading MOPSv2_lib.idcomp(fast)
# Loading MOPSv2_lib.interfaceSM(fast)
# Loading MOPSv2_lib.bridgeSM(fast)
# Loading MOPSv2_lib.canopen_block(fast)
# Loading MOPSv2_lib.ODfsm(fast)
# Loading MOPSv2_lib.abortcodes(fast)
# Loading MOPSv2_lib.msgdecode(fast)
# Loading MOPSv2_lib.odinterface(fast)
# Loading MOPSv2_lib.count2reload(fast)
# Loading MOPSv2_lib.ftrim_sel(fast)
# Loading MOPSv2_lib.od(fast)
# Loading MOPSv2_lib.OD_MUX(fast)
# Loading MOPSv2_lib.OD_buf(fast)
# Loading MOPSv2_lib.OD_control(fast)
# Loading MOPSv2_lib.rec_mes_buf(fast)
# Loading MOPSv2_lib.timoutrst(fast)
# Loading MOPSv2_lib.tra_mes_buf(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.dec_8b10b(behavioral)#1
# Loading work.enc_8b10b(behavioral)#1
# Loading /eda/mentor/2019-20/RHELx86/HDL-DESIGNER_2019.4/resources/downstream/modelsim/ModelSim_64Bit.dll
# ** Warning: (vsim-8634) Code was not compiled with coverage options.
add wave -position insertpoint  \
sim:/tb_mopshubTop/clk \
sim:/tb_mopshubTop/rst \
sim:/tb_mopshubTop/start_init \
sim:/tb_mopshubTop/sign_on_sig \
sim:/tb_mopshubTop/osc_auto_trim \
sim:/tb_mopshubTop/info_debug_sig \
sim:/tb_mopshubTop/ch \
sim:/tb_mopshubTop/bus_data \
sim:/tb_mopshubTop/bus_id \
sim:/tb_mopshubTop/start_sign_in \
sim:/tb_mopshubTop/irq_can_ack \
sim:/tb_mopshubTop/end_sign_in \
sim:/tb_mopshubTop/start_trim_sig \
sim:/tb_mopshubTop/start_data_gen \
sim:/tb_mopshubTop/read_adc \
sim:/tb_mopshubTop/read_adc_start \
sim:/tb_mopshubTop/read_adc_end \
sim:/tb_mopshubTop/elink_test \
sim:/tb_mopshubTop/sel_bus \
sim:/tb_mopshubTop/data_rec_uplink \
sim:/tb_mopshubTop/data_uplink_out \
sim:/tb_mopshubTop/request \
sim:/tb_mopshubTop/reqmsg \
sim:/tb_mopshubTop/response \
sim:/tb_mopshubTop/respmsg \
sim:/tb_mopshubTop/can_rec_select \
sim:/tb_mopshubTop/irq_can_rec \
sim:/tb_mopshubTop/irq_elink \
sim:/tb_mopshubTop/start_read_elink \
sim:/tb_mopshubTop/end_read_elink \
sim:/tb_mopshubTop/data_tra_uplink \
sim:/tb_mopshubTop/requestreg \
sim:/tb_mopshubTop/responsereg \
sim:/tb_mopshubTop/data_tra_emulator_out \
sim:/tb_mopshubTop/start_write_emulator \
sim:/tb_mopshubTop/can_tra_select \
sim:/tb_mopshubTop/irq_can_tra \
sim:/tb_mopshubTop/buffer_en \
sim:/tb_mopshubTop/elink_test_done \
sim:/tb_mopshubTop/tx_mopshub_2bit \
sim:/tb_mopshubTop/tx_mopshub_1bit \
sim:/tb_mopshubTop/failures \
sim:/tb_mopshubTop/rx0 \
sim:/tb_mopshubTop/rx1 \
sim:/tb_mopshubTop/tx0 \
sim:/tb_mopshubTop/tx1
run
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# 	 initialization: 0000000000000000000 
# *****************************************************************************
# 	 Sign-in message [BUS ID   0 ]  :
# 	 Request 0000000000000000000 	 Response 7010500000000000000
# Reset request: Status GOOD [BUS ID   0]
# 	 Request 6014020030000000000 	 Response 5814320030000000001
# Status GOOD [BUS ID   0]
# 	 Request 6014020040000000000 	 Response 5814320040000000000
# Status GOOD [BUS ID   0]
# 	 Request 6012320020000000001 	 Response 5816020020000000000
# Status GOOD [BUS ID   0]:
# 	 Request 6012320030000000001 	 Response 5816020030000000000
# Status GOOD [BUS ID   0]:
# 	 Request 6012320040000000000 	 Response 5816020040000000000
# Status GOOD [BUS ID   0]:
# *****************************************************************************
# 	 Sign-in message [BUS ID   1 ]  :
# 	 Request 6014020020001000000 	 Response 5814320020001000001
# Status GOOD [BUS ID   1]
# 	 Request 6014020030001000000 	 Response 5814320030001000001
# Status GOOD [BUS ID   1]
# 	 Request 6014020040001000000 	 Response 5814320040001000000
# Status GOOD [BUS ID   1]
# 	 Request 6012320020001000001 	 Response 5816020020001000000
# Status GOOD [BUS ID   1]:
# 	 Request 6012320030001000001 	 Response 5816020030001000000
# Status GOOD [BUS ID   1]:
# 	 Request 6012320040001000000 	 Response 5816020040001000000
# Status GOOD [BUS ID   1]:
# *****************************************************************************
