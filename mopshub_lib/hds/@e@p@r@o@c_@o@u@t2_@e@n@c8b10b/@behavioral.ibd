DocumentHdrVersion "1.1"
Header (DocumentHdr
version 2
dialect 2
dmPackageRefs [
]
instances [
(Instance
name "outmux"
duLibraryName "mopshub_lib"
duName "MUX8_Nbit"
elements [
(GiElement
name "N"
type "integer"
value "2"
)
]
mwi 0
uid 77,0
)
(Instance
name "enc8b10bx"
duLibraryName "mopshub_lib"
duName "enc8b10_wrap"
elements [
]
mwi 0
uid 98,0
)
(Instance
name "inp_reques1clk"
duLibraryName "mopshub_lib"
duName "pulse_pdxx_pwxx"
elements [
(GiElement
name "pd"
type "integer"
value "0"
)
(GiElement
name "pw"
type "integer"
value "1"
)
]
mwi 0
uid 106,0
)
]
embeddedInstances [
(EmbeddedInstance
name "eb1"
number "18"
)
(EmbeddedInstance
name "eb2"
number "19"
)
(EmbeddedInstance
name "eb3"
number "20"
)
(EmbeddedInstance
name "eb4"
number "21"
)
(EmbeddedInstance
name "eb5"
number "22"
)
]
properties [
(HdrProperty
class "HDS"
name "DocView"
value "EPROC_OUT2_ENC8b10b.vhd"
)
(HdrProperty
class "HDS"
name "DocViewState"
value "1614008315"
)
(HdrProperty
class "HDS"
name "DocView"
value "Temp Path"
)
(HdrProperty
class "HDS"
name "DocViewState"
value ""
)
]
)
version "32.1"
newIbd 1
appVersion "2019.4 (Build 4)"
noEmbeddedEditors 1
model (IbdDiag
VExpander (VariableExpander
vvMap [
(vvPair
variable "HDLDir"
value "/home/dcs/git/mopshub/mopshub_lib/hdl"
)
(vvPair
variable "HDSDir"
value "/home/dcs/git/mopshub/mopshub_lib/hds"
)
(vvPair
variable "SideDataDesignDir"
value "/home/dcs/git/mopshub/mopshub_lib/hds/@e@p@r@o@c_@o@u@t2_@e@n@c8b10b/@behavioral.ibd.info"
)
(vvPair
variable "SideDataUserDir"
value "/home/dcs/git/mopshub/mopshub_lib/hds/@e@p@r@o@c_@o@u@t2_@e@n@c8b10b/@behavioral.ibd.user"
)
(vvPair
variable "SourceDir"
value "/home/dcs/git/mopshub/mopshub_lib/hds"
)
(vvPair
variable "appl"
value "HDL Designer"
)
(vvPair
variable "arch_name"
value "Behavioral"
)
(vvPair
variable "config"
value "%(unit)_%(view)_config"
)
(vvPair
variable "d"
value "/home/dcs/git/mopshub/mopshub_lib/hds/@e@p@r@o@c_@o@u@t2_@e@n@c8b10b"
)
(vvPair
variable "d_logical"
value "/home/dcs/git/mopshub/mopshub_lib/hds/EPROC_OUT2_ENC8b10b"
)
(vvPair
variable "date"
value "02/25/21"
)
(vvPair
variable "day"
value "Thu"
)
(vvPair
variable "day_long"
value "Thursday"
)
(vvPair
variable "dd"
value "25"
)
(vvPair
variable "entity_name"
value "EPROC_OUT2_ENC8b10b"
)
(vvPair
variable "ext"
value "<TBD>"
)
(vvPair
variable "f"
value "@behavioral.ibd"
)
(vvPair
variable "f_logical"
value "Behavioral.ibd"
)
(vvPair
variable "f_noext"
value "@behavioral"
)
(vvPair
variable "graphical_source_author"
value "dcs"
)
(vvPair
variable "graphical_source_date"
value "02/25/21"
)
(vvPair
variable "graphical_source_group"
value "dcs"
)
(vvPair
variable "graphical_source_host"
value "chipdev2.physik.uni-wuppertal.de"
)
(vvPair
variable "graphical_source_time"
value "20:07:51"
)
(vvPair
variable "group"
value "dcs"
)
(vvPair
variable "host"
value "chipdev2.physik.uni-wuppertal.de"
)
(vvPair
variable "language"
value "VHDL"
)
(vvPair
variable "library"
value "mopshub_lib"
)
(vvPair
variable "library_downstream_HdsLintPlugin"
value "$HDS_PROJECT_DIR/mopshub_lib/designcheck"
)
(vvPair
variable "library_downstream_ModelSimCompiler"
value "$HDS_PROJECT_DIR/mopshub_lib/work"
)
(vvPair
variable "library_downstream_QuestaSimCompiler"
value "$HDS_PROJECT_DIR/mopshub_lib/work"
)
(vvPair
variable "mm"
value "02"
)
(vvPair
variable "module_name"
value "EPROC_OUT2_ENC8b10b"
)
(vvPair
variable "month"
value "Feb"
)
(vvPair
variable "month_long"
value "February"
)
(vvPair
variable "p"
value "/home/dcs/git/mopshub/mopshub_lib/hds/@e@p@r@o@c_@o@u@t2_@e@n@c8b10b/@behavioral.ibd"
)
(vvPair
variable "p_logical"
value "/home/dcs/git/mopshub/mopshub_lib/hds/EPROC_OUT2_ENC8b10b/Behavioral.ibd"
)
(vvPair
variable "package_name"
value "<Undefined Variable>"
)
(vvPair
variable "project_name"
value "mopshub"
)
(vvPair
variable "series"
value "HDL Designer Series"
)
(vvPair
variable "task_DesignCompilerPath"
value "<TBD>"
)
(vvPair
variable "task_LeonardoPath"
value "<TBD>"
)
(vvPair
variable "task_ModelSimPath"
value "<TBD>"
)
(vvPair
variable "task_NC-SimPath"
value "/eda/cadence/2018-19/RHELx86/XCELIUM_18.03.010/tools/bin"
)
(vvPair
variable "task_PrecisionRTLPath"
value "<TBD>"
)
(vvPair
variable "task_QuestaSimPath"
value "/eda/mentor/2018-19/RHELx86/AMS_17.1.1/questasim/v10.6_1/bin"
)
(vvPair
variable "task_VCSPath"
value "<TBD>"
)
(vvPair
variable "this_ext"
value "ibd"
)
(vvPair
variable "this_file"
value "@behavioral"
)
(vvPair
variable "this_file_logical"
value "Behavioral"
)
(vvPair
variable "time"
value "20:07:51"
)
(vvPair
variable "unit"
value "EPROC_OUT2_ENC8b10b"
)
(vvPair
variable "user"
value "dcs"
)
(vvPair
variable "version"
value "2019.4 (Build 4)"
)
(vvPair
variable "view"
value "Behavioral"
)
(vvPair
variable "year"
value "2021"
)
(vvPair
variable "yy"
value "21"
)
]
)
LanguageMgr "Vhdl93LangMgr"
uid 1,0
optionalChildren [
*1 (Property
uid 40,0
pclass "HDS"
pname "DocView"
pvalue "EPROC_OUT2_ENC8b10b.vhd"
ptn "String"
)
*2 (Property
uid 41,0
pclass "HDS"
pname "DocViewState"
pvalue "1614008315"
ptn "String"
)
*3 (Property
uid 129,0
pclass "HDS"
pname "DocView"
pvalue "Temp Path"
ptn "String"
)
*4 (Property
uid 130,0
pclass "HDS"
pname "DocViewState"
ptn "String"
)
]
bg "65535,65535,65535"
grid (Grid
origin "0,0"
isVisible 1
isActive 1
xSpacing 1000
xySpacing 1000
xShown 1
yShown 1
color "65535,0,0"
)
packageList *5 (PackageList
uid 2,0
stg "VerticalLayoutStrategy"
textVec [
*6 (Text
uid 3,0
va (VaSet
font "courier,8,1"
)
xt "0,0,6500,900"
st "Package List"
blo "0,700"
)
*7 (MLText
uid 4,0
va (VaSet
font "courier,8,0"
)
xt "0,900,15000,3600"
tm "PackageList"
)
]
)
compDirBlock (MlTextGroup
uid 5,0
stg "VerticalLayoutStrategy"
textVec [
*8 (Text
uid 6,0
va (VaSet
font "courier,8,1"
)
xt "20000,0,30000,900"
st "Compiler Directives"
blo "20000,700"
)
*9 (Text
uid 7,0
va (VaSet
font "courier,8,1"
)
xt "20000,900,31500,1800"
st "Pre-module directives:"
blo "20000,1600"
)
*10 (MLText
uid 8,0
va (VaSet
font "courier,8,0"
)
xt "20000,1800,30100,3600"
st "`resetall
`timescale 1ns/10ps"
tm "BdCompilerDirectivesTextMgr"
)
*11 (Text
uid 9,0
va (VaSet
font "courier,8,1"
)
xt "20000,3600,32000,4500"
st "Post-module directives:"
blo "20000,4300"
)
*12 (MLText
uid 10,0
va (VaSet
font "courier,8,0"
)
xt "20000,0,20000,0"
tm "BdCompilerDirectivesTextMgr"
)
*13 (Text
uid 11,0
va (VaSet
font "courier,8,1"
)
xt "20000,4500,31500,5400"
st "End-module directives:"
blo "20000,5200"
)
*14 (MLText
uid 12,0
va (VaSet
font "courier,8,0"
)
xt "20000,5400,20000,5400"
tm "BdCompilerDirectivesTextMgr"
)
]
associable 1
)
windowSize "0,0,1015,690"
viewArea "0,0,0,0"
cachedDiagramExtent "0,0,0,0"
pageBreakOrigin "0,0"
logical (IbdLogical
uid 13,0
colContainer (IbdColContainer
uid 14,0
optionalChildren [
*15 (IbdInterface
ordering 1
uid 15,0
name "EPROC_OUT2_ENC8b10b"
on 9
fa [
(IbdNFA
io "I"
c *16 (IbdNet
d (Decl
n "bitCLK"
t "std_logic"
o 8
)
uid 57,0
on 26
nodes [
&15
]
)
)
(IbdNFA
io "I"
c *17 (IbdNet
d (Decl
n "bitCLKx2"
t "std_logic"
o 9
)
uid 59,0
on 27
nodes [
&15
]
)
)
(IbdNFA
io "I"
c *18 (IbdNet
d (Decl
n "bitCLKx4"
t "std_logic"
o 10
)
uid 61,0
on 28
nodes [
&15
*19 (IbdHdsComponent
archFileType "UNKNOWN"
p [
*20 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "clk"
t "std_logic"
preAdd 0
posAdd 0
o 1
)
)
)
*21 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "rst"
t "std_logic"
preAdd 0
posAdd 0
o 2
)
)
)
*22 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "dataCode"
t "std_logic_vector"
b "(1 downto 0)"
eolc "-- 00\"data, 01\"eop, 10\"sop, 11\"comma"
preAdd 0
posAdd 0
o 3
)
)
)
*23 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "dataIN"
t "std_logic_vector"
b "(7 downto 0)"
preAdd 0
posAdd 0
o 4
)
)
)
*24 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "dataINrdy"
t "std_logic"
preAdd 0
posAdd 0
o 5
)
)
)
*25 (IbdCptPort
p (LogicalPort
lang 2
m 1
decl (Decl
n "encDataOut"
t "std_logic_vector"
b "(9 downto 0)"
preAdd 0
posAdd 0
o 6
)
)
)
*26 (IbdCptPort
p (LogicalPort
lang 2
m 1
decl (Decl
n "encDataOutrdy"
t "std_logic"
preAdd 0
posAdd 0
o 7
)
)
)
]
inst "enc8b10bx"
lib "mopshub_lib"
ele [
]
bc "


-----------------------------------------------------------------------------------------
 8b10b encoding
-----------------------------------------------------------------------------------------
"
uid 98,0
name "enc8b10_wrap"
on 15
fa [
(IbdCFA
l "encDataOut"
p &25
c *27 (IbdNet
d (Decl
n "enc10bit"
t "std_logic_vector"
b "(9 downto 0)"
o 1
)
uid 43,0
on 14
nodes [
&19
]
)
)
(IbdCFA
l "clk"
p &20
c &18
)
(IbdCFA
l "rst"
p &21
c *28 (IbdNet
d (Decl
n "rst"
t "std_logic"
o 11
)
uid 63,0
on 29
nodes [
&15
&19
]
)
)
(IbdCFA
l "dataINrdy"
p &24
c *29 (IbdNet
d (Decl
n "edataINrdy"
t "std_logic"
o 14
)
uid 69,0
on 34
nodes [
&15
&19
]
)
)
(IbdCFA
l "dataCode"
p &22
c *30 (IbdWire
slice "(9 downto 8)"
uid 102,0
on 32
nodes [
&19
]
net *31 (IbdNet
d (Decl
n "edataIN"
t "std_logic_vector"
b "(9 downto 0)"
o 13
)
uid 67,0
optionalChildren [
&30
*32 (IbdWire
slice "(7 downto 0)"
uid 104,0
on 33
nodes [
&19
]
net &31
)
]
on 31
nodes [
&15
&19
]
)
)
)
(IbdCFA
l "dataIN"
p &23
c &32
)
]
dec [
(IbdCFA
f "*"
p &0
io "I"
dt 1
c &31
)
]
ucp [
(IbdPortFA
f "O: encDataOutrdy"
p &26
c *33 (IbdUcPortConnector
uid 125,0
on 9
nodes [
&19
]
)
)
]
)
*34 (IbdHdsComponent
archFileType "UNKNOWN"
p [
*35 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "clk"
t "std_logic"
preAdd 0
posAdd 0
o 1
)
)
)
*36 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "trigger"
t "std_logic"
preAdd 0
posAdd 0
o 2
)
)
)
*37 (IbdCptPort
p (LogicalPort
lang 2
m 1
decl (Decl
n "pulseout"
t "std_logic"
preAdd 0
posAdd 0
o 3
)
)
)
]
inst "inp_reques1clk"
lib "mopshub_lib"
ele [
(GiElement
name "pd"
type "integer"
value "0"
)
(GiElement
name "pw"
type "integer"
value "1"
)
]
ordering 1
bc "
"
uid 106,0
name "pulse_pdxx_pwxx"
on 18
fa [
(IbdCFA
l "trigger"
p &36
c *38 (IbdNet
d (Decl
n "inp_request_trig"
t "std_logic"
o 6
)
uid 53,0
on 24
nodes [
&34
]
)
)
(IbdCFA
l "pulseout"
p &37
c *39 (IbdNet
d (Decl
n "inp_request_trig_out"
t "std_logic"
o 7
)
uid 55,0
on 25
nodes [
&34
]
)
)
(IbdCFA
l "clk"
p &35
c &18
)
]
dec [
]
ucp [
]
)
]
)
)
(IbdNFA
io "I"
c &28
)
(IbdNFA
io "O"
c *40 (IbdNet
d (Decl
n "getDataTrig"
t "std_logic"
o 12
)
uid 65,0
on 30
nodes [
&15
]
)
)
(IbdNFA
io "I"
c &31
)
(IbdNFA
io "I"
c &29
)
(IbdNFA
io "I"
c *41 (IbdNet
d (Decl
n "fhCR_REVERSE_10B"
t "std_logic"
o 15
)
uid 71,0
on 35
nodes [
&15
]
)
)
(IbdNFA
io "O"
c *42 (IbdNet
d (Decl
n "EdataOUT"
t "std_logic_vector"
b "(1 downto 0)"
o 16
)
uid 73,0
on 36
nodes [
&15
*43 (IbdHdsComponent
archFileType "UNKNOWN"
p [
*44 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "data0"
t "std_logic_vector"
b "((N-1) downto 0)"
preAdd 0
posAdd 0
o 1
)
)
)
*45 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "data1"
t "std_logic_vector"
b "((N-1) downto 0)"
preAdd 0
posAdd 0
o 2
)
)
)
*46 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "data2"
t "std_logic_vector"
b "((N-1) downto 0)"
preAdd 0
posAdd 0
o 3
)
)
)
*47 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "data3"
t "std_logic_vector"
b "((N-1) downto 0)"
preAdd 0
posAdd 0
o 4
)
)
)
*48 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "data4"
t "std_logic_vector"
b "((N-1) downto 0)"
preAdd 0
posAdd 0
o 5
)
)
)
*49 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "data5"
t "std_logic_vector"
b "((N-1) downto 0)"
preAdd 0
posAdd 0
o 6
)
)
)
*50 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "data6"
t "std_logic_vector"
b "((N-1) downto 0)"
preAdd 0
posAdd 0
o 7
)
)
)
*51 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "data7"
t "std_logic_vector"
b "((N-1) downto 0)"
preAdd 0
posAdd 0
o 8
)
)
)
*52 (IbdCptPort
p (LogicalPort
lang 2
decl (Decl
n "sel"
t "std_logic_vector"
b "(2 downto 0)"
preAdd 0
posAdd 0
o 9
)
)
)
*53 (IbdCptPort
p (LogicalPort
lang 2
m 1
decl (Decl
n "data_out"
t "std_logic_vector"
b "((N-1) downto 0)"
preAdd 0
posAdd 0
o 10
)
)
)
]
inst "outmux"
lib "mopshub_lib"
ele [
(GiElement
name "N"
type "integer"
value "2"
)
]
bc "
"
uid 77,0
name "MUX8_Nbit"
on 12
fa [
(IbdCFA
l "sel"
p &52
c *54 (IbdNet
d (Decl
n "send_count"
t "std_logic_vector"
b "(2 downto 0)"
o 4
i "(others=>'0')"
)
uid 49,0
on 22
nodes [
&43
]
)
)
(IbdCFA
l "data_out"
p &53
c &42
)
(IbdCFA
l "data0"
p &44
c *55 (IbdWire
slice "(1 downto 0)"
uid 81,0
on 16
nodes [
&43
]
net *56 (IbdNet
d (Decl
n "enc10bit_r"
t "std_logic_vector"
b "(9 downto 0)"
o 2
)
uid 45,0
optionalChildren [
&55
*57 (IbdWire
slice "(3 downto 2)"
uid 83,0
on 17
nodes [
&43
]
net &56
)
*58 (IbdWire
slice "(5 downto 4)"
uid 85,0
on 18
nodes [
&43
]
net &56
)
*59 (IbdWire
slice "(7 downto 6)"
uid 87,0
on 19
nodes [
&43
]
net &56
)
*60 (IbdWire
slice "(9 downto 8)"
uid 89,0
on 20
nodes [
&43
]
net &56
)
]
on 15
nodes [
&43
]
)
)
)
(IbdCFA
l "data1"
p &45
c &57
)
(IbdCFA
l "data2"
p &46
c &58
)
(IbdCFA
l "data3"
p &47
c &59
)
(IbdCFA
l "data4"
p &48
c &60
)
(IbdCFA
l "data7"
f "data7"
p &51
io "*"
c *61 (IbdExprSlice
uid 96,0
on 13
nodes [
&43
]
)
)
(IbdCFA
l "data6"
f "data6"
p &50
io "*"
c *62 (IbdExprSlice
uid 93,0
on 12
nodes [
&43
]
)
)
(IbdCFA
l "data5"
f "data5"
p &49
io "*"
c *63 (IbdExpr
uid 91,0
optionalChildren [
&62
&61
]
on 11
nodes [
&43
]
expr "zeros2bit"
)
)
]
dec [
(IbdCFA
f "*"
p &0
io "I"
dt 1
c &56
)
]
ucp [
]
)
]
)
)
(IbdNFA
io "I"
c *64 (IbdNet
d (Decl
n "toHostXoff"
t "std_logic"
o 17
)
uid 75,0
on 37
nodes [
&15
]
)
)
]
dec [
]
)
&43
&19
&34
*65 (IbdEB
uid 110,0
optionalChildren [
*66 (IbdEmbeddedText
theText "-------------------------------------------------------------------------------------------
-- input handshaking, request cycle 5 CLKs
-------------------------------------------------------------------------------------------
process(bitCLK)
begin
   if bitCLK'event and bitCLK = '1' then      
      if rst = '1' then
        request_cycle_cnt  <= (others=>'0');
      else 
        if inp_request_trig = '1' then
            request_cycle_cnt <= (others=>'0');
        else
            request_cycle_cnt <= request_cycle_cnt + 1;
        end if;
      end if;
   end if;
end process;
"
uid 111,0
)
]
name "eb1"
on 19
fa [
]
dec [
]
)
*67 (IbdEB
uid 113,0
optionalChildren [
*68 (IbdEmbeddedText
theText "--
inp_request_trig <= '1' when (request_cycle_cnt = \"100\") else '0';
getDataTrig <= inp_request_trig_out;
"
uid 114,0
)
]
name "eb2"
on 20
fa [
]
dec [
]
)
*69 (IbdEB
uid 116,0
optionalChildren [
*70 (IbdEmbeddedText
theText "--
process(bitCLK)
begin
   if bitCLK'event and bitCLK = '1' then      
      send_out_trig <= inp_request_trig;
   end if;
end process;
"
uid 117,0
)
]
name "eb3"
on 21
fa [
]
dec [
]
)
*71 (IbdEB
uid 119,0
optionalChildren [
*72 (IbdEmbeddedText
theText "-------------------------------------------------------------------------------------------
-- sending out 2 bits @ bitCLK
-------------------------------------------------------------------------------------------
--
process(bitCLK)
begin
   if bitCLK'event and bitCLK = '1' then      
        if rst = '1' then  
            enc10bit_r <= (others=>'0');
        elsif send_out_trig = '1' then
            -- LSB send first 
            if (fhCR_REVERSE_10B = '0') then
                enc10bit_r <= enc10bit(0) & enc10bit(1) & enc10bit(2) & enc10bit(3) & enc10bit(4) & enc10bit(5) & enc10bit(6) & enc10bit(7) & enc10bit(8) & enc10bit(9);
            -- MSB send first 
            else
                enc10bit_r <= enc10bit;
            end if;
        end if;
   end if;
end process;
"
uid 120,0
)
]
name "eb4"
on 22
fa [
]
dec [
]
)
*73 (IbdEB
uid 122,0
optionalChildren [
*74 (IbdEmbeddedText
theText "--
process(bitCLK)
begin
   if bitCLK'event and bitCLK = '1' then      
        if send_out_trig = '1' then
            send_count <= (others=>'0');
        else
            send_count <= send_count + 1;
        end if;
   end if;
end process;
"
uid 123,0
)
]
name "eb5"
on 23
fa [
]
dec [
]
)
]
)
rowContainer (IbdRowContainer
uid 16,0
optionalChildren [
&27
&56
*75 (IbdNet
d (Decl
n "request_cycle_cnt"
t "std_logic_vector"
b "(2 downto 0)"
o 3
i "(others=>'0')"
)
uid 47,0
on 21
)
&54
*76 (IbdNet
d (Decl
n "send_out_trig"
t "std_logic"
o 5
i "'0'"
)
uid 51,0
on 23
)
&38
&39
&16
&17
&18
&28
&40
&31
&29
&41
&42
&64
&63
&33
]
)
)
physical (MPhysicalIbd
activeIct &0
mainIct (MIct
name "All"
mcolContainer (MIctColContainer
optionalChildren [
*77 (MRefCol
p 0
uid 20,0
d 20
)
*78 (MNameCol
p 3
uid 21,0
d 150
)
*79 (MTypeCol
p 5
uid 22,0
d 102
)
*80 (MBoundsCol
p 6
uid 23,0
d 78
)
*81 (MFilterCol
p 7
hidden 1
uid 24,0
d 120
)
*82 (MFixedCol
p 8
hidden 1
uid 25,0
d 20
)
*83 (MInterfaceCol
p 9
uid 26,0
d 35
ibdInterface &15
)
*84 (MValueCol
p 24
uid 27,0
d 84
)
*85 (MEolCol
p 25
uid 28,0
)
*86 (MSliceCol
p 4
uid 42,0
)
*87 (MHdsCompInstCol
p 10
uid 78,0
optionalChildren [
*88 (MCompPortCol
p 11
hidden 1
uid 79,0
d 54
)
*89 (MCompActualCol
p 12
hidden 1
uid 80,0
d 35
)
]
d 35
comp &43
)
*90 (MExpandCol
p 2
uid 95,0
d 15
depth 1
)
*91 (MHdsCompInstCol
p 13
uid 99,0
optionalChildren [
*92 (MCompPortCol
p 14
hidden 1
uid 100,0
d 66
)
*93 (MCompActualCol
p 15
hidden 1
uid 101,0
d 35
)
]
d 35
comp &19
)
*94 (MHdsCompInstCol
p 16
uid 107,0
optionalChildren [
*95 (MCompPortCol
p 17
hidden 1
uid 108,0
d 54
)
*96 (MCompActualCol
p 18
hidden 1
uid 109,0
d 35
)
]
d 35
comp &34
)
*97 (MEBCol
p 19
uid 112,0
d 35
eb &65
)
*98 (MEBCol
p 20
uid 115,0
d 35
eb &67
)
*99 (MEBCol
p 21
uid 118,0
d 35
eb &69
)
*100 (MEBCol
p 22
uid 121,0
d 35
eb &71
)
*101 (MEBCol
p 23
uid 124,0
d 35
eb &73
)
*102 (MExpandCol
p 1
uid 128,0
d 15
depth 2
)
]
)
mrowContainer (MIctRowContainer
optionalChildren [
*103 (MRefRow
p 0
uid 30,0
)
*104 (MNameRow
p 1
uid 31,0
d 96
)
*105 (MLibRow
p 2
uid 32,0
)
*106 (MInstanceRefRow
p 3
uid 33,0
)
*107 (MPortMapLabelRow
p 4
uid 34,0
)
*108 (MFilterRow
p 5
hidden 1
uid 35,0
d 20
)
*109 (MFixedRow
p 6
hidden 1
uid 36,0
)
*110 (MReqRow
p 7
hidden 1
uid 37,0
)
*111 (MUcPortGroupRow
p 8
uid 38,0
optionalChildren [
*112 (MUcPortRow
p 9
uid 126,0
ucport &33
)
]
expandCol &90
)
*113 (MEmptyRow
p 38
uid 39,0
)
*114 (MNetRow
p 14
uid 44,0
net &27
)
*115 (MNetRow
p 15
uid 46,0
optionalChildren [
*116 (MWireRow
p 16
uid 82,0
wire &55
)
*117 (MWireRow
p 17
uid 84,0
wire &57
)
*118 (MWireRow
p 18
uid 86,0
wire &58
)
*119 (MWireRow
p 19
uid 88,0
wire &59
)
*120 (MWireRow
p 20
uid 90,0
wire &60
)
]
expandCol &90
net &56
)
*121 (MNetRow
p 21
uid 48,0
net &75
)
*122 (MNetRow
p 22
uid 50,0
net &54
)
*123 (MNetRow
p 23
uid 52,0
net &76
)
*124 (MNetRow
p 24
uid 54,0
net &38
)
*125 (MNetRow
p 25
uid 56,0
net &39
)
*126 (MNetRow
p 26
uid 58,0
net &16
)
*127 (MNetRow
p 27
uid 60,0
net &17
)
*128 (MNetRow
p 28
uid 62,0
net &18
)
*129 (MNetRow
p 29
uid 64,0
net &28
)
*130 (MNetRow
p 30
uid 66,0
net &40
)
*131 (MNetRow
p 31
uid 68,0
optionalChildren [
*132 (MWireRow
p 32
uid 103,0
wire &30
)
*133 (MWireRow
p 33
uid 105,0
wire &32
)
]
expandCol &90
net &31
)
*134 (MNetRow
p 34
uid 70,0
net &29
)
*135 (MNetRow
p 35
uid 72,0
net &41
)
*136 (MNetRow
p 36
uid 74,0
net &42
)
*137 (MNetRow
p 37
uid 76,0
net &64
)
*138 (MGroupRow
p 10
uid 127,0
optionalChildren [
*139 (MExprRow
p 11
uid 92,0
optionalChildren [
*140 (MExprSliceRow
p 12
uid 94,0
slice &62
)
*141 (MExprSliceRow
p 13
uid 97,0
slice &61
)
]
expandCol &90
ibdExpr &63
)
]
expandCol &102
groupName "Port map frames"
groupRowMva (MVa
cellColor "65535,65535,65535"
fontColor "0,0,0"
font "courier,10,0"
)
)
]
)
vaOverrides [
]
)
blkMVa (MVa
cellColor "39936,56832,65280"
fontColor "0,0,0"
font "courier,10,1"
)
hdsCompMva (MVa
cellColor "45055,65535,30000"
fontColor "0,0,0"
font "courier,10,1"
)
mwCompMva (MVa
cellColor "0,65535,65535"
fontColor "0,0,0"
font "courier,10,1"
)
ipCompMva (MVa
cellColor "45055,65535,30000"
fontColor "0,0,0"
font "courier,10,1"
)
embeddedBlkMva (MVa
cellColor "65535,65535,37120"
fontColor "0,0,0"
font "courier,10,1"
)
expressionRowMva (MVa
alignment 0
cellColor "65280,65280,46080"
fontColor "0,0,0"
font "courier,10,1"
)
netSliceMva (MVa
alignment 0
cellColor "39936,56832,65280"
fontColor "0,0,0"
font "courier,10,1"
)
bundleMva (MVa
alignment 0
cellColor "65280,65280,46080"
fontColor "0,0,0"
font "courier,10,1"
)
propColMva (MVa
cellColor "0,49152,49152"
fontColor "0,0,0"
font "courier,10,1"
)
groupColMva (MVa
alignment 0
cellColor "62965,57054,46003"
fontColor "0,0,0"
font "courier,10,1"
)
interfaceColMva (MVa
cellColor "59904,39936,65280"
fontColor "0,0,0"
font "courier,10,1"
)
frameColMva (MVa
alignment 0
cellColor "0,0,65535"
fontColor "65535,65535,65535"
font "courier,10,1"
)
propRowMva (MVa
alignment 0
cellColor "0,49152,49152"
fontColor "0,0,0"
font "courier,10,1"
)
groupRowMva (MVa
alignment 0
cellColor "62965,57054,46003"
fontColor "0,0,0"
font "courier,10,1"
)
netRowMva (MVa
cellColor "65535,65535,65535"
fontColor "0,0,0"
font "courier,10,0"
)
uid 17,0
)
preUserText "----------------------------------
----------------------------------

constant zeros2bit : std_logic_vector (1 downto 0) := (others=>'0');
"
lastUid 130,0
genericsCommonDM (CommonDM
ldm (LogicalDM
emptyRow *142 (LEmptyRow
)
optionalChildren [
*143 (RefLabelRowHdr
)
*144 (TitleRowHdr
)
*145 (FilterRowHdr
)
*146 (RefLabelColHdr
tm "RefLabelColHdrMgr"
)
*147 (RowExpandColHdr
tm "RowExpandColHdrMgr"
)
*148 (GroupColHdr
tm "GroupColHdrMgr"
)
*149 (NameColHdr
tm "GenericNameColHdrMgr"
)
*150 (TypeColHdr
tm "GenericTypeColHdrMgr"
)
*151 (InitColHdr
tm "GenericValueColHdrMgr"
)
*152 (PragmaColHdr
tm "GenericPragmaColHdrMgr"
)
*153 (EolColHdr
tm "GenericEolColHdrMgr"
)
]
)
pdm (PhysicalDM
displayShortBounds 1
editShortBounds 1
optionalChildren [
*154 (Sheet
sheetRow (SheetRow
headerVa (MVa
cellColor "49152,49152,49152"
fontColor "0,0,0"
font "courier,10,0"
)
cellVa (MVa
cellColor "65535,65535,65535"
fontColor "0,0,0"
font "courier,10,0"
)
groupVa (MVa
cellColor "39936,56832,65280"
fontColor "0,0,0"
font "courier,10,0"
)
emptyMRCItem *155 (MRCItem
litem &142
pos 3
dimension 20
)
optionalChildren [
*156 (MRCItem
litem &143
pos 0
dimension 20
)
*157 (MRCItem
litem &144
pos 1
dimension 23
)
*158 (MRCItem
litem &145
pos 2
hidden 1
dimension 20
)
]
)
sheetCol (SheetCol
propVa (MVa
cellColor "0,49152,49152"
fontColor "0,0,0"
font "courier,10,0"
textAngle 90
)
optionalChildren [
*159 (MRCItem
litem &146
pos 0
dimension 20
)
*160 (MRCItem
litem &148
pos 1
dimension 50
)
*161 (MRCItem
litem &149
pos 2
dimension 100
)
*162 (MRCItem
litem &150
pos 3
dimension 100
)
*163 (MRCItem
litem &151
pos 4
dimension 50
)
*164 (MRCItem
litem &152
pos 5
dimension 50
)
*165 (MRCItem
litem &153
pos 6
dimension 80
)
]
)
fixedCol 3
fixedRow 2
name "Ports"
vaOverrides [
]
)
]
)
type 1
)
)
