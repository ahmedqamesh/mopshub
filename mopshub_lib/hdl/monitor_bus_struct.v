//
// Module mopshub_lib.monitor_bus.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 17:33:57 03/10/22
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module monitor_bus( 
   // Port Declarations
   input   wire    [4:0]   addr, 
   input   wire            buffer_spi_tra_en, 
   input   wire            clk, 
   input   wire            cs, 
   input   wire            cs_m, 
   input   wire    [31:0]  data_tra_spi, 
   input   wire            miso, 
   input   wire            rst, 
   input   wire            start_read_miso, 
   output  wire            cs_active, 
   output  wire    [31:0]  data_rec_spi, 
   output  wire            end_read_miso, 
   output  wire            mosi, 
   output  wire            sck
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire  [7:0] data_init;
wire        def_value_0        = 1'b0;
wire        output0;
wire        output1;
wire        output10;
wire        output11;
wire        output12;
wire        output13;
wire        output14;
wire        output15;
wire        output16;
wire        output17;
wire        output18;
wire        output19;
wire        output2;
wire        output20;
wire        output21;
wire        output22;
wire        output23;
wire        output24;
wire        output25;
wire        output26;
wire        output27;
wire        output28;
wire        output29;
wire        output3;
wire        output30;
wire        output31;
wire        output4;
wire        output5;
wire        output6;
wire        output7;
wire        output8;
wire        output9;
wire  [7:0] rxdat;
wire  [7:0] spi_id;
wire  [7:0] spi_reg;
wire  [7:0] spi_select;
wire  [4:0] spi_select_active;
wire        ss;
wire        transceive;
wire  [7:0] txdat;


// Instances 
buffer_rec_spi_data buffer_rec_spi_data0( 
   .clk           (clk), 
   .rst           (rst), 
   .buffer_en     (start_read_miso), 
   .spi_id_in     (spi_id), 
   .spi_reg       (spi_reg), 
   .data_rec_in   (rxdat), 
   .spi_select    (spi_select), 
   .end_read_miso (end_read_miso), 
   .data_rec_out  (data_rec_spi)
); 

buffer_tra_spi_data buffer_tra_spi_data0( 
   .clk          (clk), 
   .data_tra_in  (data_tra_spi), 
   .buffer_en    (buffer_spi_tra_en), 
   .rst          (rst), 
   .spi_id       (spi_id), 
   .spi_reg      (spi_reg), 
   .spi_select   (spi_select), 
   .data_tra_out (txdat)
); 

demux1_1bit demux1_1bit_cs_tra( 
   .def_value  (def_value_0), 
   .sel        (spi_select_active), 
   .input_port (cs_active), 
   .output0    (output0), 
   .output1    (output1), 
   .output2    (output2), 
   .output3    (output3), 
   .output4    (output4), 
   .output5    (output5), 
   .output6    (output6), 
   .output7    (output7), 
   .output8    (output8), 
   .output9    (output9), 
   .output10   (output10), 
   .output11   (output11), 
   .output12   (output12), 
   .output13   (output13), 
   .output14   (output14), 
   .output15   (output15), 
   .output16   (output16), 
   .output17   (output17), 
   .output18   (output18), 
   .output19   (output19), 
   .output20   (output20), 
   .output21   (output21), 
   .output22   (output22), 
   .output23   (output23), 
   .output24   (output24), 
   .output25   (output25), 
   .output26   (output26), 
   .output27   (output27), 
   .output28   (output28), 
   .output29   (output29), 
   .output30   (output30), 
   .output31   (output31)
); 

initialize_spi_communcation initialize_spi_monitoring0( 
   .addr      (addr), 
   .data_init (data_init)
); 

spi_master #(40000000,10000000) spi_master0( 
   .clk        (clk), 
   .rst        (rst), 
   .sck        (sck), 
   .miso       (miso), 
   .mosi       (mosi), 
   .txdat      (txdat), 
   .rxdat      (rxdat), 
   .transceive (transceive), 
   .busy       (ss)
); 

// HDL Embedded Text Block 6 eb6
assign spi_select_active = spi_select[4:0];
assign transceive = (!cs || !cs_m);//1'b1;
assign cs_active = (cs ||cs_m);



































endmodule // monitor_bus

