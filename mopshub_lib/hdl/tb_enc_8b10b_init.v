//
// Module mopshub_lib.tb_enc_8b10b_init.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 14:30:33 03/15/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module tb_enc_8b10b_init; 
   // Port Declarations
   wire [9:0] ENC_OUT;
    reg [7:0] ENC_IN;
    // --enaFall : in std_logic ;
    // --SBYTECLK : in std_logic ;	-- Master synchronous send byte clock
    reg   KI;      // -- Control (K) input(active high)
    reg   ENC_RST;   // -- Global asynchronous reset (active high)
    reg   ENC_CLK;     //  There is a three clock cycle latency between the input and output.
    reg   ena;     // Enable encoder signal. When high, indicates that the data currently present on the datain input is to be encoded.
    //integer i;

// Instances 
enc_8b10b_init U_0( 
                   .AI    (ENC_IN[0]), 
                   .BI    (ENC_IN[1]),  
                   .CI    (ENC_IN[2]),             
                   .DI    (ENC_IN[3]),      
                   .EI    (ENC_IN[4]),   
                   .FI    (ENC_IN[5]),   
                   .GI    (ENC_IN[6]), 
                   .HI    (ENC_IN[7]),
                   
                   .AO    (ENC_OUT[0]), 
                   .BO    (ENC_OUT[1]),
                   .CO    (ENC_OUT[2]), 
                   .DO    (ENC_OUT[3]), 
                   .EO    (ENC_OUT[4]), 
                   .IO    (ENC_OUT[5]), 
                   .FO    (ENC_OUT[6]), 
                   .GO    (ENC_OUT[7]), 
                   .HO    (ENC_OUT[8]),
                   .JO    (ENC_OUT[9]), 
                   
                   .KI    (KI), 
                   .RESET (ENC_RST), 
                   .clk   (ENC_CLK), 
                   .ena   (ena)
                ); 
initial 
  begin
  ENC_IN=8'b00010101; 
  KI=1'b1; 
  ENC_RST=1'b1;
  ENC_CLK=1'b1;
  ena=1;
  end
always #5 ENC_CLK=!ENC_CLK;
always @(posedge ENC_CLK) 
  begin
   $monitor("Time %g  ENC_IN %b ENC_OUT %b",$time, ENC_IN,ENC_OUT);
    ENC_IN<=ENC_IN+1;//+i;
    #1
    ENC_RST<=1'b0;
    KI<=1'b0;
  
   end
//#50 $stop;


endmodule // tb_enc_8b10b_init

