//
// Module mopshub_lib.mopshubTop.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 16:21:53 06/17/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module mopshubTop( 
   // Port Declarations
   input   wire            clock, 
   input   wire    [75:0]  data_tra_uplink, 
   input   wire            end_read_elink, 
   input   wire            end_write_elink, 
   input   wire            irq_elink, 
   input   wire            reset, 
   input   wire            rx0, 
   input   wire            rx1, 
   input   wire            rx2, 
   input   wire            rx3, 
   input   wire            rx4, 
   input   wire            rx5, 
   input   wire            rx6, 
   input   wire            rx7, 
   output  wire    [75:0]  data_rec_uplink, 
   output  wire            send_mes_elink, 
   output  wire            sign_on_sig, 
   output  wire            start_read_elink, 
   output  wire            start_write_elink, 
   output  wire            tx0, 
   output  wire            tx1, 
   output  wire            tx2, 
   output  wire            tx3, 
   output  wire            tx4, 
   output  wire            tx5, 
   output  wire            tx6, 
   output  wire            tx7
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire  [4:0]  addr_can;
wire  [4:0]  bus_rec_select;
wire  [4:0]  bus_tra_select;
wire         choose_bus_end;
wire  [4:0]  count_bus_dbg;
wire         enable_cs;
wire         init_bus_select;
wire         irq_can_rec;
wire         irq_can_tra;
wire  [15:0] read_can;
wire         read_sig_can_n;
wire  [15:0] write_can;
wire         write_sig_can_n;


// Instances 
canakariTop Canakari_controllers( 
   .reset           (reset), 
   .bus_tra_select  (bus_tra_select), 
   .address         (addr_can), 
   .writedata       (write_can), 
   .write_n_sig     (write_sig_can_n), 
   .irq_can_tra     (irq_can_tra), 
   .rx0             (rx0), 
   .rx2             (rx2), 
   .rx3             (rx3), 
   .rx4             (rx4), 
   .rx5             (rx5), 
   .rx6             (rx6), 
   .rx7             (rx7), 
   .tx0             (tx0), 
   .tx1             (tx1), 
   .tx2             (tx2), 
   .tx3             (tx3), 
   .tx4             (tx4), 
   .tx5             (tx5), 
   .tx6             (tx6), 
   .tx7             (tx7), 
   .rx1             (rx1), 
   .bus_rec_select  (bus_rec_select), 
   .choose_bus_end  (choose_bus_end), 
   .genrst          (), 
   .endwait         (), 
   .init_bus_select (init_bus_select), 
   .restirq         (), 
   .read_n_sig      (read_sig_can_n), 
   .enable_cs_sig   (enable_cs), 
   .clk             (), 
   .readdata        (read_can), 
   .irq_can_rec     (irq_can_rec), 
   .count_bus_dbg   (count_bus_dbg)
); 

mopshubCore Mopshub_Core( 
   .addr_can          (addr_can), 
   .bus_rec_select    (bus_rec_select), 
   .bus_tra_select    (bus_tra_select), 
   .clock             (clock), 
   .irq_can_rec       (irq_can_rec), 
   .read_can          (read_can), 
   .read_sig_can_n    (read_sig_can_n), 
   .reset             (reset), 
   .write_can         (write_can), 
   .write_sig_can_n   (write_sig_can_n), 
   .irq_can_tra       (irq_can_tra), 
   .enable_cs         (enable_cs), 
   .data_rec_uplink   (data_rec_uplink), 
   .data_tra_uplink   (data_tra_uplink), 
   .choose_bus_end    (choose_bus_end), 
   .end_read_elink    (end_read_elink), 
   .end_write_elink   (end_write_elink), 
   .irq_elink         (irq_elink), 
   .start_read_elink  (start_read_elink), 
   .start_write_elink (start_write_elink), 
   .send_mes_elink    (send_mes_elink), 
   .sign_on_sig       (sign_on_sig)
); 


endmodule // mopshubTop

