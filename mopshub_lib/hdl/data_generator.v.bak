//
// Module mopshub_lib.data_generator.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 14:44:53 03/30/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module data_generator #(
    parameter DATA_WIDTH       =8
    )( 
   // Port Declarations
   // Port Declarations
   // Port Declarations
   // Port Declarations
   // Port Declarations
   
   input   wire            clk_usr, 
   input   wire            enable, 
   input   wire            loop_en, 
   input   wire            tx_fifo_pfull, 
   output  wire            done, 
   output  wire    [DATA_WIDTH-1:0]  dout, 
   output  wire            wr_en, 
   output  wire    [1:0]   delimeter
);


// Internal Declarations


// Local declarations

// Internal signal declarations
reg   [7:0] dout_i       = 8'b0;
reg   [1:0]  delimeter_r= 2'b11;
wire  [2:0]  sel_cnt;

// Instances 
data_generator_SM U_0( 
   .clk_usr           (clk_usr), 
   .enable            (enable), 
   .loop_en           (loop_en), 
   .tx_fifo_pfull_gen (tx_fifo_pfull), 
   .done              (done), 
   .sel_cnt           (sel_cnt), 
   .wr_en             (wr_en)
); 

// HDL Embedded Text Block 1 data_loader
// data_loader 1
//sel din process
always @(posedge clk_usr)
 begin 
  if(enable == 1 | loop_en == 1)
    case (sel_cnt)
        3'b000 : begin 
                 dout_i  <= 8'h00;
                 delimeter_r  <= 2'b10;
                end
        3'b001 : begin 
                dout_i  <= 8'hDE;
                delimeter_r  <= 2'b00;
                end
        3'b010 : begin 
                 dout_i  <= 8'hAD;
                 delimeter_r <= 2'b00;
                end
        3'b011 : begin 
                 dout_i  <=8'h00;
                 delimeter_r  <=2'b01;
                end
        3'b100 : begin 
                 dout_i  <=8'h00;
                 delimeter_r  <=2'b01;
                end
        3'b011 : begin 
                 dout_i  <=8'h00;
                 delimeter_r  <=2'b01;
                 end
            endcase
          end
//always@(posedge clk_usr)
//begin
  assign dout = dout_i; 
  assign delimeter = delimeter_r;                                     
//end




endmodule // data_generator

