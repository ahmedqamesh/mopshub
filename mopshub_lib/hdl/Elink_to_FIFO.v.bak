//
// Module mopshub_lib.Elink_to_FIFO.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 13:49:44 04/08/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2018.1 (Build 12)
//

`resetall
`timescale 1ns/10ps
module Elink_to_FIFO #(
   // synopsys template
   parameter serialized_input = 0
)
( 
   // Port Declarations
   input   wire           DATA1bitIN, 
   input   wire           bitCLKx2, 
   input   wire           efifoRe, 
   input   wire           swap_input, 
   input   wire           bitCLK, 
   input   wire           efifoRclk, 
   output  wire           efifoEmpty, 
   input   wire           fifo_flush, 
   output  wire           efifoFull, 
   output  wire    [9:0]  efifoDout, 
   input   wire    [1:0]  elink2bit, 
   output  reg            wr_en_dbg        = 0, 
   output  wire    [9:0]  dout_dbg, 
   input   wire           bitCLKx4, 
   input   wire           reverse_rx, 
   output  reg     [9:0]  din_dbg          = 10'b0, 
   output  wire    [9:0]  din_fifo_dbg, 
   output  wire           wr_en_fifo_dbg
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire  [9:0] dec8bOut;
wire        rst;
reg   [1:0] DATA2bitIN   = 2'b0;
reg   [1:0] shreg2bit    = 2'b0;
wire        DATA_RDY;


// Instances 
EPROC_IN_DEC8b10b U_2( 
   .DATA_IN          (DATA2bitIN), 
   .bitCLK           (bitCLK), 
   .bitCLKx4         (bitCLKx4), 
   .rst              (rst), 
   .swap_inputbits   (swap_input), 
   .thCR_REVERSE_10B (reverse_rx), 
   .DATA_OUT_dbg     (dout_dbg), 
   .DATA_RDY         (DATA_RDY), 
   .HGFEDCBA         (dec8bOut[7:0]), 
   .ISK              (dec8bOut[9:8])
); 

fifo_RXelink_wrap U_1( 
   .bitClk         (bitCLK), 
   .din            (dec8bOut), 
   .din_rdy        (DATA_RDY), 
   .flush_fifo     (fifo_flush), 
   .rd_clk_elink   (efifoRclk), 
   .rd_en_elink    (efifoRe), 
   .rst            (rst), 
   .din_fifo_dbg   (din_fifo_dbg), 
   .dout_elink     (efifoDout), 
   .empty_elink    (efifoEmpty), 
   .full_elink     (efifoFull), 
   .wr_en_fifo_dbg (wr_en_fifo_dbg)
); 

// HDL Embedded Text Block 1 eb1
// eb1 1                                   
always@(posedge bitCLK)
if (rst)
  begin
    wr_en_dbg <= 0;
    din_dbg   <= 10'b0; 
  end
else
  begin
    din_dbg   <= dec8bOut; 
    wr_en_dbg <= DATA_RDY;
  end  





















// HDL Embedded Text Block 4 eb4
// Serialization
if (serialized_input == 0)begin:GBT_frame_case
always@(posedge bitCLK)
if (rst)
  begin
   DATA2bitIN <= 2'b0;
  end
else
  begin
    if(swap_input)
    DATA2bitIN <= {elink2bit[0],elink2bit[1]}; 
    else
    DATA2bitIN <= elink2bit;
  end 
end


else begin:actual_elink_case
  always@(posedge bitCLKx2)
  if (rst)
     shreg2bit <= 2'b0;
  else
    shreg2bit <= {DATA1bitIN,shreg2bit[1]};
  
    
  always@(posedge bitCLK)
  if (rst)
     DATA2bitIN <= 2'b0;
  else
  begin
    if(swap_input)
    DATA2bitIN <= {shreg2bit[0],shreg2bit[1]}; 
    else
    DATA2bitIN <= shreg2bit;
  end 
  
end                                       
 









endmodule // Elink_to_FIFO

