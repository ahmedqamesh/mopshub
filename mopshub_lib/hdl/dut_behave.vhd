-- VHDL Entity mopshub_lib.dut.symbol
--
-- Created:
--          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
--          at - 13:36:39 06/23/21
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY dut IS
   PORT( 
      clock             : IN     std_logic;
      reset             : IN     std_logic;
      address           : IN     std_logic_vector (4 DOWNTO 0);
      readdata          : OUT    std_logic_vector (15 DOWNTO 0);
      writedata         : IN     std_logic_vector (15 DOWNTO 0);
      cs                : IN     std_logic;
      read_n            : IN     std_logic;
      write_n           : IN     std_logic;
      irq               : OUT    std_logic;
      irqstatus         : OUT    std_logic;
      irqsuctra         : OUT    std_logic;
      irqsucrec         : OUT    std_logic;
      rx                : IN     std_logic;
      tx                : OUT    std_logic;
      statedeb          : OUT    std_logic_vector (7 DOWNTO 0);
      Prescale_EN_debug : OUT    std_logic;
      bitst             : OUT    std_logic_vector (6 DOWNTO 0)
   );

-- Declarations

END dut ;

--
-- VHDL Architecture mopshub_lib.dut.behave
--
-- Created:
--          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
--          at - 13:36:39 06/23/21
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
--
-- 
-- 


LIBRARY mopshub_lib;

ARCHITECTURE behave OF dut IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL clock_bit             : bit;
   SIGNAL reset_bit             : bit;
   SIGNAL rx_bit                : bit;
   SIGNAL Prescale_EN_debug_bit : bit;
   SIGNAL irq_bit               : bit;
   SIGNAL tx_bit                : bit;
   SIGNAL address_bit           : bit_vector(4 DOWNTO 0);
   SIGNAL irqstatus_bit         : bit;
   SIGNAL irqsuctra_bit         : bit;
   SIGNAL irqsucrec_bit         : bit;


function bit_to_stdlogic(x : bit)
    return std_logic is
  begin
    if(x = '1') then
      return '1';
    else
      return '0';
    end if;
  end bit_to_stdlogic;

   -- Component Declarations
   COMPONENT can
   PORT (
      clock             : IN     bit ;
      reset             : IN     bit ;
      address           : IN     bit_vector (4 DOWNTO 0);
      writedata         : IN     std_logic_vector (15 DOWNTO 0);
      cs                : IN     std_logic ;
      read_n            : IN     std_logic ;
      write_n           : IN     std_logic ;
      rx                : IN     bit ;
      readdata          : OUT    std_logic_vector (15 DOWNTO 0);
      irqsuctra         : OUT    bit ;
      tx                : OUT    bit ;
      statedeb          : OUT    std_logic_vector (7 DOWNTO 0);
      Prescale_EN_debug : OUT    bit ;                         -- -- DW 2005.06.25 Debug Prescale
      bitst             : OUT    std_logic_vector (6 DOWNTO 0);
      irqsucrec         : OUT    bit ;
      irqstatus         : OUT    bit ;
      irq               : OUT    bit 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   clock_bit <= to_bit(clock);
   reset_bit <= to_bit(reset);
   rx_bit <= to_bit(rx);
   Prescale_EN_debug <= bit_to_stdlogic(Prescale_EN_debug_bit);
   irq <= bit_to_stdlogic(irq_bit);
   tx <= bit_to_stdlogic(tx_bit);
   address_bit <= to_bitvector(address);
   irqstatus <= bit_to_stdlogic(irqstatus_bit);
   irqsuctra <= bit_to_stdlogic(irqsuctra_bit);
   irqsucrec <= bit_to_stdlogic(irqsucrec_bit);


   -- Instance port mappings.
   can_controller : can
      PORT MAP (
         clock             => clock_bit,
         reset             => reset_bit,
         address           => address_bit,
         writedata         => writedata,
         cs                => cs,
         read_n            => read_n,
         write_n           => write_n,
         rx                => rx_bit,
         readdata          => readdata,
         irqsuctra         => irqsuctra_bit,
         tx                => tx_bit,
         statedeb          => statedeb,
         Prescale_EN_debug => Prescale_EN_debug_bit,
         bitst             => bitst,
         irqsucrec         => irqsucrec_bit,
         irqstatus         => irqstatus_bit,
         irq               => irq_bit
      );

END behave;
