//
// Verilog Module mopshub_lib.nodedemux
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 17:00:37 01/04/21
//
// using Mentor Graphics HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module node_tra_demux#(
  parameter def_value = 0
  )( 
   // Port Declarations
   input   wire    [4:0]  bus_tra_select, 
   input   wire           enable_cs, 
   output  wire           cs_tra9, 
   output  wire           cs_tra18, 
   output  wire           cs_tra19, 
   output  wire           cs_tra20, 
   output  wire           cs_tra21, 
   output  wire           cs_tra22, 
   output  wire           cs_tra23, 
   output  wire           cs_tra24, 
   output  wire           cs_tra4, 
   output  wire           cs_tra5, 
   output  wire           cs_tra6, 
   output  wire           cs_tra7, 
   output  wire           cs_tra8, 
   output  wire           cs_tra10, 
   output  wire           cs_tra11, 
   output  wire           cs_tra12, 
   output  wire           cs_tra13, 
   output  wire           cs_tra14, 
   output  wire           cs_tra15, 
   output  wire           cs_tra16, 
   output  wire           cs_tra17, 
   output  wire           cs_tra0, 
   output  wire           cs_tra1, 
   output  wire           cs_tra2, 
   output  wire           cs_tra3, 
   output  wire           cs_tra26, 
   output  wire           cs_tra27, 
   output  wire           cs_tra28, 
   output  wire           cs_tra29, 
   output  wire           cs_tra30, 
   output  wire           cs_tra31, 
   output  wire           cs_tra25
);


// Internal Declarations
reg [31:0] cs_tra_reg ;

assign cs_tra9 = cs_tra_reg[9];
assign cs_tra18 = cs_tra_reg[18];
assign cs_tra19 = cs_tra_reg[19];
assign cs_tra20 = cs_tra_reg[20];
assign cs_tra21 = cs_tra_reg[21];
assign cs_tra22 = cs_tra_reg[22];
assign cs_tra23 = cs_tra_reg[23];
assign cs_tra24 = cs_tra_reg[24];
assign cs_tra4 = cs_tra_reg[4];
assign cs_tra5 = cs_tra_reg[5];
assign cs_tra6 = cs_tra_reg[6];
assign cs_tra7 = cs_tra_reg[7];
assign cs_tra8 = cs_tra_reg[8];
assign cs_tra10 = cs_tra_reg[10];
assign cs_tra11 = cs_tra_reg[11];
assign cs_tra12 = cs_tra_reg[12];
assign cs_tra13 = cs_tra_reg[13];
assign cs_tra14 = cs_tra_reg[14];
assign cs_tra15 = cs_tra_reg[15];
assign cs_tra16 = cs_tra_reg[16];
assign cs_tra17 = cs_tra_reg[17];
assign cs_tra0 = cs_tra_reg[0];
assign cs_tra1 = cs_tra_reg[1];
assign cs_tra2 = cs_tra_reg[2];
assign cs_tra3 = cs_tra_reg[3];
assign cs_tra26 = cs_tra_reg[26];
assign cs_tra27 = cs_tra_reg[27];
assign cs_tra28 = cs_tra_reg[28];
assign cs_tra29 = cs_tra_reg[29];
assign cs_tra30 = cs_tra_reg[30];
assign cs_tra31 = cs_tra_reg[31];
assign cs_tra25 = cs_tra_reg[25];


always @(bus_tra_select or enable_cs)
  begin
    cs_tra_reg  = 31'b0;
    case(bus_tra_select)//case statement with "bus_tra_select" 
      5'h0:cs_tra_reg[0] = enable_cs;
      5'h1:cs_tra_reg[1] = enable_cs;
      5'h2:cs_tra_reg[2] = enable_cs;
      5'h3:cs_tra_reg[3] = enable_cs;
      5'h4:cs_tra_reg[4]= enable_cs;
      5'h5:cs_tra_reg[5] = enable_cs;
      5'h6:cs_tra_reg[6] = enable_cs;
      5'h7:cs_tra_reg[7] = enable_cs;
      5'h8:cs_tra_reg[8] = enable_cs;
      5'h9:cs_tra_reg[9] = enable_cs;
      5'hA:cs_tra_reg[10] = enable_cs;
      5'hB:cs_tra_reg[11] = enable_cs;
      5'hC:cs_tra_reg[12] = enable_cs;
      5'hD:cs_tra_reg[13] = enable_cs;
      5'hE:cs_tra_reg[14] = enable_cs;
      5'hF:cs_tra_reg[15] = enable_cs;
      5'h10:cs_tra_reg[16] = enable_cs;
      5'h11:cs_tra_reg[17] = enable_cs;
      5'h12:cs_tra_reg[18] = enable_cs;
      5'h13:cs_tra_reg[19] = enable_cs;
      5'h14:cs_tra_reg[20] = enable_cs;
      5'h15:cs_tra_reg[21] = enable_cs;
      5'h16:cs_tra_reg[22] = enable_cs;
      5'h17:cs_tra_reg[23] = enable_cs;
      5'h18:cs_tra_reg[24] = enable_cs;
      5'h19:cs_tra_reg[25] = enable_cs;
      5'h1A:cs_tra_reg[26] = enable_cs;
      5'h1B:cs_tra_reg[27] = enable_cs;
      5'h1C:cs_tra_reg[28] = enable_cs;
      5'h1D:cs_tra_reg[29] = enable_cs;
      5'h1E:cs_tra_reg[30] = enable_cs;
      5'h1F:cs_tra_reg[31] = enable_cs;
    endcase
  end
endmodule
