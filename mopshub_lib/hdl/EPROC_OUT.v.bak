//
// Module mopshub_lib.EPROC_OUT.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 17:16:29 03/15/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps

//E-link processor, 2bit output
module EPROC_OUT #(
   // synopsys template
   // synopsys template
// synopsys template
// synopsys template
// synopsys template
   parameter DATA_IN_WIDTH = 10
)
( 
   // Port Declarations
   input   wire                         bitCLK, 
   input   wire                         bitCLKx4, 
   input   wire                         rst, 
   input   wire                         swap_outbits,      //A signal to swap the bits
   output  wire                         getDataTrig,       //-- @ bitCLKx4
   output  wire    [1:0]                EDATA_OUT, 
   input   wire                         fhCR_REVERSE_10B, 
   input   wire    [DATA_IN_WIDTH-1:0]  DATA_IN, 
   input   wire                         DATA_RDY
);

// Internal Declarations
// Internal Declarations


// Local declarations

// Internal signal declarations
reg         getDataTrig_ENC8b10b_r;
reg   [1:0] edata_out_r;
wire  [1:0] edata_out_s;


// Instances 
EPROC_OUT_ENC8b10b ENC8b10b( 
   .bitCLKx4         (bitCLKx4), 
   .bitCLK           (bitCLK), 
   .getDataTrig      (getDataTrig_ENC8b10b_r), 
   .edataIN          (DATA_IN), 
   .edataINrdy       (DATA_RDY), 
   .fhCR_REVERSE_10B (fhCR_REVERSE_10B), 
   .EdataOUT         (edata_out_s), 
   .rst              (rst)
); 
// out data from ENC8b10b

// HDL Embedded Text Block 1 eb1
assign EDATA_OUT =edata_out_r;
assign getDataTrig = getDataTrig_ENC8b10b_r;
// HDL Embedded Text Block 2 eb2
// buffer the output data
always @ (swap_outbits, edata_out_s)
  begin
     if (swap_outbits)
      edata_out_r = {edata_out_s[0],edata_out_s[1]};
     else     
    edata_out_r = edata_out_s;
  end


endmodule // EPROC_OUT

