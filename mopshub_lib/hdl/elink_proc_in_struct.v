//
// Module mopshub_lib.elink_proc_in.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 12:27:01 10/04/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module elink_proc_in #(
   // synopsys template
   parameter generate_mopshub = 0
)
( 
   // Port Declarations
   input   wire    [1:0]  EDATA_IN, 
   input   wire           clk, 
   input   wire           enc_stream, 
   input   wire           reverse_stream_10b, 
   input   wire           rst, 
   input   wire           swap_rx_bits, 
   output  wire    [1:0]  ISK, 
   output  wire    [7:0]  data_out, 
   output  wire           data_rdy
);


// Internal Declarations


// Local declarations

// Internal signal declarations
reg   [11:0] EDATAbitstreamSREG  = 12'b0;            //12 bit (2 x 5 = 10, plus 2 more)
wire  [1:0]  ISK_8b10b;
wire         data_8b10b_rdy;
wire  [7:0]  data_direct_out;
wire         data_direct_rdy;
wire  [7:0]  dec_data_out;
wire  [9:0]  direct10b_data      = 10'b1100000000;
reg   [9:0]  direct10b_data_r    = 10'b1100000000;
reg          direct10b_rdy_r     = 1'b0;
reg   [1:0]  direct_inpcount_r   = 2'b00;


// Instances 
elink_proc_in_dec8b10b #(generate_mopshub) elink_proc_in_dec8b10b0( 
   .DATA_IN            (EDATA_IN), 
   .clk                (clk), 
   .swap_rx_bits       (swap_rx_bits), 
   .reverse_stream_10b (reverse_stream_10b), 
   .ISK                (ISK_8b10b), 
   .rst                (rst), 
   .dec8b_data         (dec_data_out), 
   .dec8b_rdy          (data_8b10b_rdy)
); 

// HDL Embedded Text Block 10 eb10
// HDL Embedded Text Block 8 enc_doutrdy
// enc_doutrdy 8  
assign data_out = (enc_stream ==1) ? dec_data_out   : data_direct_out;
assign data_rdy = (enc_stream ==1) ? data_8b10b_rdy : data_direct_rdy;
assign ISK = ISK_8b10b;






// HDL Embedded Text Block 11 alignment_direct1

assign data_direct_out  = direct10b_data[7:0];































// HDL Embedded Text Block 15 direct_data1
always@(clk)
begin
    if (!rst)
    begin
        direct_inpcount_r  <= 2'b0;
        direct10b_rdy_r    <= 1'b0;
        direct10b_data_r   <= 10'b1100000000;
    end
else
  begin
      if (direct_inpcount_r == 2'b11)
      begin
          direct10b_rdy_r <= !enc_stream;
          //-- LSB send first 
          if (reverse_stream_10b == 1'b0)
              direct10b_data_r   <= {2'b00,EDATAbitstreamSREG[7:0]};
         // -- MSB send first 
          else
            direct10b_data_r <= {2'b00,EDATAbitstreamSREG[0],EDATAbitstreamSREG[1],EDATAbitstreamSREG[2],EDATAbitstreamSREG[3],EDATAbitstreamSREG[4],EDATAbitstreamSREG[5],EDATAbitstreamSREG[6],EDATAbitstreamSREG[7]};
      end
      else
      begin
        direct10b_rdy_r   <= 1'b0;
        direct_inpcount_r <= direct_inpcount_r + 1; 
      end
  end
end

// HDL Embedded Text Block 16 direct_data2
assign data_direct_rdy = direct10b_rdy_r;
assign direct10b_data = direct10b_data_r;
always@(clk)
begin
    if (!rst)
    begin
        direct_inpcount_r  <= 2'b0;
        direct10b_rdy_r    <= 1'b0;
        direct10b_data_r   <= 10'b1100000000;
    end
else
  begin
      if (direct_inpcount_r == 2'b11)
      begin
          direct10b_rdy_r <= !enc_stream;
          //-- LSB send first 
          if (reverse_stream_10b == 1'b0)
              direct10b_data_r   <= {2'b00,EDATAbitstreamSREG[7:0]};
         // -- MSB send first 
          else
            direct10b_data_r <= {2'b00,EDATAbitstreamSREG[0],EDATAbitstreamSREG[1],EDATAbitstreamSREG[2],EDATAbitstreamSREG[3],EDATAbitstreamSREG[4],EDATAbitstreamSREG[5],EDATAbitstreamSREG[6],EDATAbitstreamSREG[7]};
      end
      else
      begin
        direct10b_rdy_r   <= 1'b0;
        direct_inpcount_r <= direct_inpcount_r + 1; 
      end
  end
end




endmodule // elink_proc_in

