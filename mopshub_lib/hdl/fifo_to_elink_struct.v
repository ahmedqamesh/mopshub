//
// Module mopshub_lib.fifo_to_elink.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 13:51:35 06/23/22
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module fifo_to_elink( 
   // Port Declarations
   input   wire           fifo_wr_en, 
   input   wire           clk, 
   input   wire    [9:0]  fifo_din, 
   input   wire           fifo_flush, 
   output  wire    [1:0]  data_2bit_out,      //  @ 40MHz
   output  wire           efifo_empty, 
   output  wire           efifo_full, 
   input   wire           rst, 
   input   wire    [7:0]  Kchar_comma, 
   input   wire    [7:0]  Kchar_sop, 
   input   wire    [7:0]  Kchar_eop, 
   input   wire    [9:0]  data_10bit_in_dbg, 
   input   wire    [9:0]  COMMAn, 
   input   wire    [9:0]  COMMAp, 
   input   wire           rdy_dbg, 
   input   wire           dbg_elink
);

// Local declarations
// Internal signal declarations
// Internal Declarations
// Internal Declarations


// Local declarations

// Internal signal declarations
wire  [9:0] data_10bit_in_fifo;   // 10-bit data in
wire        fifo_rd_en;
wire        rdy_fifo;
wire        data_in_rdy;
wire  [9:0] data_10bit_in;        //Data stored in the FIFO
wire        get_data_trig;


// Instances 
elink_proc_out_enc8b10b elink_proc_out_enc8b10b0( 
   .clk           (clk), 
   .data_10bit_in (data_10bit_in), 
   .data_in_rdy   (data_in_rdy), 
   .rst           (rst), 
   .get_data_trig (get_data_trig), 
   .data_2bit_out (data_2bit_out), 
   .COMMAn        (COMMAn), 
   .COMMAp        (COMMAp), 
   .Kchar_comma   (Kchar_comma), 
   .Kchar_eop     (Kchar_eop), 
   .Kchar_sop     (Kchar_sop)
); 

fifo_core_wrapper fifo_core_wrap_tx( 
   .Kchar_comma (Kchar_comma), 
   .clk         (clk), 
   .din_fifo    (fifo_din), 
   .flush_fifo  (fifo_flush), 
   .rd_en       (fifo_rd_en), 
   .rst         (rst), 
   .wr_en       (fifo_wr_en), 
   .dout_fifo   (data_10bit_in_fifo), 
   .empty_fifo  (efifo_empty), 
   .full_fifo   (efifo_full), 
   .rdy_fifo    (rdy_fifo)
); 

// HDL Embedded Text Block 11 FIFO_write2
assign data_in_rdy   =(dbg_elink ==1) ? rdy_dbg : rdy_fifo; 
assign data_10bit_in =(dbg_elink ==1) ? data_10bit_in_dbg : data_10bit_in_fifo; 
assign fifo_rd_en    =(dbg_elink ==1) ? 1'b0 : get_data_trig; 
 













































































































































endmodule // fifo_to_elink
// FIFO_to_Elink
