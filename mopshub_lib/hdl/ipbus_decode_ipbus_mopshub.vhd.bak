-- Address decode logic for ipbus fabric
-- 
-- This file has been AUTOGENERATED from the address table - do not hand edit
-- 
-- We assume the synthesis tool is clever enough to recognise exclusive conditions
-- in the if statement.
-- 
-- Dave Newbold, February 2011

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use ieee.numeric_std.all;

package ipbus_decode_ipbus_mopshub is

  constant IPBUS_SEL_WIDTH: positive := 5; -- Should be enough for now?
  subtype ipbus_sel_t is std_logic_vector(IPBUS_SEL_WIDTH - 1 downto 0);
  function ipbus_sel_ipbus_mopshub(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t;

-- START automatically  generated VHDL the Thu May  3 15:36:57 2018 
  constant N_SLV_CSR: integer := 0;
  constant N_SLV_REG: integer := 1;
  constant N_SLV_REG2: integer := 2;
--  constant N_SLV_RAM: integer := 2;
--  constant N_SLV_PRAM: integer := 3;
  constant N_SLAVES: integer := 3;
-- END automatically generated VHDL

    
end ipbus_decode_ipbus_mopshub;

package body ipbus_decode_ipbus_mopshub is

  function ipbus_sel_ipbus_mopshub(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t is
    variable sel: ipbus_sel_t;
  begin

-- START automatically  generated VHDL the Thu May  3 15:36:57 2018 
    if    std_match(addr,"--0--0000000--------------------") then -- "------------------00----------0-") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_CSR, IPBUS_SEL_WIDTH)); -- csr / base 0x00000000 / mask 0x00003002
    elsif std_match(addr,"--0--0010000--------------------") then-- "------------------00----------10") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_REG, IPBUS_SEL_WIDTH)); --  reg / base 0x00000002 / mask 0x00003002
    elsif std_match(addr,"--0--0100000--------------------") then-- "------------------00----------11") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_REG2, IPBUS_SEL_WIDTH)); -- reg2 / base 0x02000000 / mask 0x27f00000

--    elsif std_match(addr, "------------------01------------") then
--      sel := ipbus_sel_t(to_unsigned(N_SLV_RAM, IPBUS_SEL_WIDTH)); -- ram / base 0x00001000 / mask 0x00003000
--    elsif std_match(addr, "------------------10----------0-") then
--      sel := ipbus_sel_t(to_unsigned(N_SLV_PRAM, IPBUS_SEL_WIDTH)); -- pram / base 0x00002000 / mask 0x00003002
-- END automatically generated VHDL

    else
        sel := ipbus_sel_t(to_unsigned(N_SLAVES, IPBUS_SEL_WIDTH));
    end if;

    return sel;

  end function ipbus_sel_ipbus_mopshub;

end ipbus_decode_ipbus_mopshub;
