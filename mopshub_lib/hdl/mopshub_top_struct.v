//
// Module mopshub_lib.mopshub_top.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 18:17:58 09/15/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module mopshub_top #(
   // synopsys template
   parameter n_buses = 5'b11111
)
( 
   // Port Declarations
   input   wire    [4:0]  can_tra_select_dbg, 
   input   wire           clk, 
   input   wire           end_cnt_dbg, 
   input   wire           osc_auto_trim_mopshub, 
   input   wire           rst, 
   input   wire           rx0, 
   input   wire           rx1, 
   input   wire           rx2, 
   input   wire           rx3, 
   input   wire           rx4, 
   input   wire           rx5, 
   input   wire           rx6, 
   input   wire           rx7, 
   input   wire           rx_elink1bit, 
   input   wire    [1:0]  rx_elink2bit, 
   output  wire           end_init, 
   output  wire           end_trim_bus, 
   output  wire    [4:0]  power_bus_cnt, 
   output  wire           power_bus_en, 
   output  wire           rst_mops_dbg, 
   output  wire           sign_on_sig, 
   output  wire           start_init, 
   output  wire           start_trim_ack, 
   output  wire           tx0, 
   output  wire           tx1, 
   output  wire           tx2, 
   output  wire           tx3, 
   output  wire           tx4, 
   output  wire           tx5, 
   output  wire           tx6, 
   output  wire           tx7, 
   output  wire           tx_elink1bit, 
   output  wire    [1:0]  tx_elink2bit
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire         bitCLK;
wire         bitCLKx2;
wire         buffer_en;
wire  [4:0]  can_rec_select;
wire  [4:0]  can_tra_select;
wire  [75:0] data_rec_uplink;
wire  [75:0] data_tra_uplink;
wire         done_trim_osc;
wire         end_read_elink;
wire         end_write_elink;
wire         irq_can_ack;
wire         irq_elink_rec;
wire         irq_elink_tra;
wire         start_read_elink;
wire         start_write_link;


// Instances 
clock_divider #(28'd2)
clock_divider2( 
   .clock_in  (clk), 
   .clock_out (bitCLKx2)
); 

clock_divider #(28'd4)
clock_divider4( 
   .clock_in  (clk), 
   .clock_out (bitCLK)
); 

elink_core elink_core0( 
   .rx_fifo_full      (), 
   .rx_elink1bit      (rx_elink1bit), 
   .bitCLK            (bitCLK), 
   .bitCLKx2          (bitCLKx2), 
   .clk               (clk), 
   .rst               (rst), 
   .data_rec_uplink   (data_rec_uplink), 
   .start_write_elink (start_write_link), 
   .rx_elink2bit      (rx_elink2bit), 
   .tx_efifo_full     (), 
   .tx_elink1bit      (tx_elink1bit), 
   .tx_elink2bit      (tx_elink2bit), 
   .irq_elink_rec     (irq_elink_rec), 
   .irq_elink_tra     (irq_elink_tra), 
   .data_tra_out      (data_tra_uplink), 
   .end_write_elink   (end_write_elink), 
   .start_read_elink  (start_read_elink), 
   .end_read_elink    (end_read_elink), 
   .buffer_tra_en     (buffer_en)
); 

mopshub_core #(n_buses) mopshub_core0( 
   .buffer_en             (buffer_en), 
   .can_rec_select        (can_rec_select), 
   .can_tra_select        (can_tra_select), 
   .can_tra_select_dbg    (can_tra_select_dbg), 
   .clk                   (clk), 
   .data_tra_uplink       (data_tra_uplink), 
   .end_cnt_dbg           (end_cnt_dbg), 
   .end_read_elink        (end_read_elink), 
   .end_write_elink       (end_write_elink), 
   .irq_elink_tra         (irq_elink_tra), 
   .osc_auto_trim_mopshub (osc_auto_trim_mopshub), 
   .rst                   (rst), 
   .rx0                   (rx0), 
   .rx1                   (rx1), 
   .rx2                   (rx2), 
   .rx3                   (rx3), 
   .rx4                   (rx4), 
   .rx5                   (rx5), 
   .rx6                   (rx6), 
   .rx7                   (rx7), 
   .data_rec_uplink       (data_rec_uplink), 
   .done_trim_osc_all     (done_trim_osc), 
   .end_init              (end_init), 
   .end_trim_bus          (end_trim_bus), 
   .irq_can_ack           (irq_can_ack), 
   .power_bus_cnt         (power_bus_cnt), 
   .power_bus_en          (power_bus_en), 
   .rst_mops_dbg          (rst_mops_dbg), 
   .sign_on_sig           (sign_on_sig), 
   .start_init            (start_init), 
   .start_read_elink      (start_read_elink), 
   .start_trim_ack        (start_trim_ack), 
   .start_write_elink     (start_write_link), 
   .tx0                   (tx0), 
   .tx1                   (tx1), 
   .tx2                   (tx2), 
   .tx3                   (tx3), 
   .tx4                   (tx4), 
   .tx5                   (tx5), 
   .tx6                   (tx6), 
   .tx7                   (tx7)
); 


endmodule // mopshub_top

