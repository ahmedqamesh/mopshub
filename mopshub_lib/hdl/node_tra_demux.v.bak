//
// Verilog Module mopshub_lib.node_tra_demux
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 20:25:27 06/06/21
//
// using Mentor Graphics HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module node_tra_demux #(
   // synopsys template
   parameter def_value = 0
)
( 
   // Port Declarations
   // Port Declarations
   input   wire    [4:0]   bus_tra_select, 
   input   wire            enable_cs_sig, 
   output  wire            cs_tra0, 
   output  wire            cs_tra1, 
   output  wire            cs_tra10, 
   output  wire            cs_tra11, 
   output  wire            cs_tra12, 
   output  wire            cs_tra13, 
   output  wire            cs_tra14, 
   output  wire            cs_tra15, 
   output  wire            cs_tra16, 
   output  wire            cs_tra17, 
   output  wire            cs_tra18, 
   output  wire            cs_tra19, 
   output  wire            cs_tra2, 
   output  wire            cs_tra20, 
   output  wire            cs_tra21, 
   output  wire            cs_tra22, 
   output  wire            cs_tra23, 
   output  wire            cs_tra24, 
   output  wire            cs_tra25, 
   output  wire            cs_tra26, 
   output  wire            cs_tra27, 
   output  wire            cs_tra28, 
   output  wire            cs_tra29, 
   output  wire            cs_tra3, 
   output  wire            cs_tra30, 
   output  wire            cs_tra31, 
   output  wire            cs_tra4, 
   output  wire            cs_tra5, 
   output  wire            cs_tra6, 
   output  wire            cs_tra7, 
   output  wire            cs_tra8, 
   output  wire            cs_tra9, 
   input   wire            write_n_sig, 
   input   wire    [15:0]  writedata, 
   output  wire            irq_can_tra, 
   output  wire            write_n0, 
   output  wire            write_n1, 
   output  wire            write_n2, 
   output  wire            write_n3, 
   output  wire            write_n4, 
   output  wire            write_n5, 
   output  wire            write_n6, 
   output  wire            write_n7
);
 assign  output9=output9_reg; 
 assign  output18=output18_reg; 
 assign  output19=output19_reg; 
 assign  output20=output20_reg; 
 assign  output21=output21_reg; 
 assign  output22=output22_reg; 
 assign  output23=output23_reg; 
 assign  output24=output24_reg; 
 assign  output4=output4_reg; 
 assign  output5=output5_reg; 
 assign  output6=output6_reg; 
 assign  output7=output7_reg; 
 assign  output8=output8_reg; 
 assign  output10=output10_reg; 
 assign  output11=output11_reg; 
 assign  output12=output12_reg; 
 assign  output13=output13_reg; 
 assign  output14=output14_reg; 
 assign  output15=output15_reg; 
 assign  output16=output16_reg; 
 assign  output17=output17_reg; 
 assign  output0=output0_reg; 
 assign  output1=output1_reg; 
 assign  output2=output2_reg; 
 assign  output3=output3_reg; 
 assign  output26=output26_reg; 
 assign  output27=output27_reg; 
 assign  output28=output28_reg; 
 assign  output29=output29_reg; 
 assign  output30=output30_reg; 
 assign  output31=output31_reg; 
 assign  output25=output25_reg; 
 
  
always @(bus_tra_select or sel)
begin 
  case (bus_tra_select)
    5'h0 : begin 
      output0_reg = input_port;
    end
    5'h1 : begin 
      output1_reg  = input_port;
    end
    5'h2 : begin 
      output2_reg  = input_port;
    end
    5'h3 : begin 
      output3_reg  = input_port;
    end
    5'h4 : begin
      output4_reg  = input_port;
    end
    5'h5 : begin 
      output5_reg = input_port;
    end
    5'h6 : begin 
      output6_reg  = input_port;
    end
    5'h7 : begin 
      output7_reg  = input_port;
    end
    5'h8 : begin 
      output8_reg  = input_port;
    end
    5'h9 : begin
      output9_reg  = input_port;
    end
    5'hA : begin 
      output10_reg = input_port;
    end
    5'hB : begin 
      output11_reg  = input_port;
    end
    5'hC : begin 
      output12_reg  = input_port;
    end
    5'hD : begin 
      output13_reg  = input_port;
    end
    5'hE : begin
      output14_reg  = input_port;
    end
    5'hF : begin 
      output15_reg = input_port;
    end
    5'h10 : begin 
      output16_reg  = input_port;
    end
    5'h11 : begin 
      output17_reg  = input_port;
    end
    5'h12 : begin 
      output18_reg  = input_port;
    end
    5'h13 : begin
      output19_reg  = input_port;           
    end
    5'h14 : begin 
      output20_reg  = input_port;
    end
    5'h15 : begin 
      output21_reg  = input_port;
    end
    5'h16 : begin 
      output22_reg  = input_port;
    end
    5'h17 : begin
      output23_reg  = input_port;
    end
    5'h18 : begin 
      output24_reg = input_port;
    end
    5'h19 : begin 
      output25_reg  = input_port;
    end
    5'h1A : begin 
      output26_reg  = input_port;
    end
    5'h1B : begin 
      output27_reg  = input_port;
    end
    5'h1C : begin
      output28_reg  = input_port;
  end 
    5'h1D : begin 
      output29_reg  = input_port;
    end
    5'h1E : begin 
      output30_reg  = input_port;
    end
    5'h1F : begin
      output31_reg  = input_port;
  end    
  endcase
end
  
endmodule

endmodule
