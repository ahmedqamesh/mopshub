-- VHDL Entity mopshub_lib.ethernet_emac_wrapper.symbol
--
-- Created:
--          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
--          at - 10:57:14 01/24/23
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
--
LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;

LIBRARY unisim;
USE unisim.VComponents.all;
LIBRARY mopshub_lib;
USE mopshub_lib.emac_hostbus_decl.all;
LIBRARY mopshub_lib;
USE mopshub_lib.ipbus.all;

ENTITY ethernet_emac_wrapper IS
   PORT( 
      clk125             : IN     STD_LOGIC;
      eth_locked         : IN     STD_LOGIC;
      rst_eth            : IN     STD_LOGIC;
      rx_axis_mac_tdata  : OUT    std_logic_vector (7 DOWNTO 0);
      rx_axis_mac_tvalid : OUT    STD_LOGIC;
      rx_axis_mac_tlast  : OUT    STD_LOGIC;
      rx_axis_mac_tuser  : OUT    STD_LOGIC;
      tx_axis_mac_tdata  : IN     std_logic_vector (7 DOWNTO 0);
      tx_axis_mac_tvalid : IN     STD_LOGIC;
      tx_axis_mac_tlast  : IN     STD_LOGIC;
      tx_axis_mac_tuser  : IN     std_logic_vector (0 DOWNTO 0);
      tx_axis_mac_tready : OUT    STD_LOGIC;
      gmii_txd           : OUT    std_logic_vector (7 DOWNTO 0);
      gmii_tx_en         : OUT    STD_LOGIC;
      gmii_tx_er         : OUT    STD_LOGIC;
      gmii_rxd           : IN     std_logic_vector (7 DOWNTO 0);
      gmii_rx_dv         : IN     STD_LOGIC;
      gmii_rx_er         : IN     STD_LOGIC
   );

-- Declarations

END ethernet_emac_wrapper ;

--
-- VHDL Architecture mopshub_lib.ethernet_emac_wrapper.rtl
--
-- Created:
--          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
--          at - 13:18:03 02/09/23
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
--


LIBRARY mopshub_lib;

ARCHITECTURE rtl OF ethernet_emac_wrapper IS

   -- Architecture declarations
   SIGNAL hostbus_in : emac_hostbus_in := ('0', "00", "0000000000", X"00000000", '0', '0', '0'); 

   -- Internal signal declarations
   SIGNAL hostbus_out : emac_hostbus_out;
   SIGNAL rstn        : std_logic;


   -- Component Declarations
   COMPONENT temac_gbe_v9_0
   PORT (
      glbl_rstn               : IN     STD_LOGIC;
      gmii_rx_dv              : IN     STD_LOGIC;
      gmii_rx_er              : IN     STD_LOGIC;
      gmii_rxd                : IN     STD_LOGIC_VECTOR (7 DOWNTO 0);
      gtx_clk                 : IN     STD_LOGIC;
      pause_req               : IN     STD_LOGIC;
      pause_val               : IN     STD_LOGIC_VECTOR (15 DOWNTO 0);
      rx_axi_rstn             : IN     STD_LOGIC;
      rx_configuration_vector : IN     STD_LOGIC_VECTOR (79 DOWNTO 0);
      tx_axi_rstn             : IN     STD_LOGIC;
      tx_axis_mac_tdata       : IN     STD_LOGIC_VECTOR (7 DOWNTO 0);
      tx_axis_mac_tlast       : IN     STD_LOGIC;
      tx_axis_mac_tuser       : IN     STD_LOGIC_VECTOR (0 DOWNTO 0);
      tx_axis_mac_tvalid      : IN     STD_LOGIC;
      tx_configuration_vector : IN     STD_LOGIC_VECTOR (79 DOWNTO 0);
      tx_ifg_delay            : IN     STD_LOGIC_VECTOR (7 DOWNTO 0);
      gmii_tx_en              : OUT    STD_LOGIC;
      gmii_tx_er              : OUT    STD_LOGIC;
      gmii_txd                : OUT    STD_LOGIC_VECTOR (7 DOWNTO 0);
      rx_axis_mac_tdata       : OUT    STD_LOGIC_VECTOR (7 DOWNTO 0);
      rx_axis_mac_tlast       : OUT    STD_LOGIC;
      rx_axis_mac_tuser       : OUT    STD_LOGIC;
      rx_axis_mac_tvalid      : OUT    STD_LOGIC;
      rx_mac_aclk             : OUT    STD_LOGIC;
      rx_reset                : OUT    STD_LOGIC;
      rx_statistics_valid     : OUT    STD_LOGIC;
      rx_statistics_vector    : OUT    STD_LOGIC_VECTOR (27 DOWNTO 0);
      speedis100              : OUT    STD_LOGIC;
      speedis10100            : OUT    STD_LOGIC;
      tx_axis_mac_tready      : OUT    STD_LOGIC;
      tx_mac_aclk             : OUT    STD_LOGIC;
      tx_reset                : OUT    STD_LOGIC;
      tx_statistics_valid     : OUT    STD_LOGIC;
      tx_statistics_vector    : OUT    STD_LOGIC_VECTOR (31 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : temac_gbe_v9_0 USE ENTITY mopshub_lib.temac_gbe_v9_0;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   rstn <= not (rst_eth or not eth_locked);
   hostbus_out.hostrddata <= (others => '0');
   hostbus_out.hostmiimrdy <= '0';


   -- Instance port mappings.
   mac : temac_gbe_v9_0
      PORT MAP (
         glbl_rstn => rstn,
         gmii_rx_dv => gmii_rx_dv,
         gmii_rx_er => gmii_rx_er,
         gmii_rxd => gmii_rxd,
         gtx_clk => clk125,
         tx_axis_mac_tdata => tx_axis_mac_tdata,
         tx_axis_mac_tlast => tx_axis_mac_tlast,
         tx_axis_mac_tuser => tx_axis_mac_tuser,
         tx_axis_mac_tvalid => tx_axis_mac_tvalid,
         gmii_tx_en => gmii_tx_en,
         gmii_tx_er => gmii_tx_er,
         gmii_txd => gmii_txd,
         rx_axis_mac_tdata => rx_axis_mac_tdata,
         rx_axis_mac_tlast => rx_axis_mac_tlast,
         rx_axis_mac_tuser => rx_axis_mac_tuser,
         rx_axis_mac_tvalid => rx_axis_mac_tvalid,
         tx_axis_mac_tready => tx_axis_mac_tready,
         rx_axi_rstn => '1',
         tx_axi_rstn => '1',
         tx_ifg_delay => X"00",
         pause_req => '0',
         pause_val => X"0000",
         rx_configuration_vector => X"0000_0000_0000_0000_0812",
         tx_configuration_vector => X"0000_0000_0000_0000_0012"
      );

END rtl;
