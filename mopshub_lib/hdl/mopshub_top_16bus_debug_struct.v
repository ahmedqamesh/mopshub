//
// Module mopshub_lib.mopshub_top_16bus_debug.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 09:10:08 04/14/23
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module mopshub_top_16bus_debug( 
   // Port Declarations
   // Port Declarations
   input   wire           clk125, 
   input   wire           clk_40, 
   input   wire           clk_rx, 
   input   wire           clk_tx, 
   input   wire           dbg_elink, 
   input   wire    [3:0]  dip_sw, 
   input   wire           endwait_all, 
   input   wire           gmii_rx_dv, 
   input   wire           gmii_rx_er, 
   input   wire    [7:0]  gmii_rxd, 
   input   wire           mmcm_locked, 
   input   wire           osc_auto_trim_mopshub, 
   input   wire           reset, 
   input   wire           resetdone, 
   input   wire           rx0, 
   input   wire           rx1, 
   input   wire           rx2, 
   input   wire           rx3, 
   input   wire           rx4, 
   input   wire           rx5, 
   input   wire           rx6, 
   input   wire           rx7, 
   input   wire           rx_elink_n, 
   input   wire           rx_elink_p, 
   input   wire           sysclk_n, 
   input   wire           sysclk_p, 
   output  wire           clk_ipb, 
   output  wire    [4:0]  configuration_vector, 
   output  wire           gmii_tx_en, 
   output  wire           gmii_tx_er, 
   output  wire    [7:0]  gmii_txd, 
   output  wire           irq_can_rec, 
   output  wire           irq_can_tra, 
   output  wire           irq_elink_dbg, 
   output  wire           irq_elink_rec, 
   output  wire           irq_elink_tra, 
   output  wire           led, 
   output  wire           rst_eth, 
   output  wire           rx_data_rdy, 
   output  wire           sfp_enable, 
   output  wire           tx0, 
   output  wire           tx1, 
   output  wire           tx2, 
   output  wire           tx3, 
   output  wire           tx4, 
   output  wire           tx5, 
   output  wire           tx6, 
   output  wire           tx7, 
   output  wire           tx_data_rdy, 
   output  wire           tx_elink_n, 
   output  wire           tx_elink_p
);

// Internal Declarations


// Local declarations

// Internal signal declarations
// Internal Declarations


// Local declarations

// Internal signal declarations
wire         cs_active;
wire         cs_active_c;
wire  [9:0]  data_10bit_in_dbg;
wire  [75:0] data_rec_elink_dbg;
wire  [75:0] data_rec_uplink;
wire  [75:0] data_tra_downlink;
wire         enable_cnt               = 1'b1;   // pfull from Tx FIFO
wire         eth_led;
wire         irq_can_rec_in;
wire         irq_can_tra_in;
wire         irq_elink_dbg_sm;
wire         irq_elink_dbg_in_active;
wire         irq_elink_rec_in;
wire         irq_elink_tra_in;
wire  [4:0]  mon_bus_cnt;
wire         mosi_c;
wire         mosi_m;
wire  [4:0]  power_bus_cnt;
wire         rdy_dbg;
wire         rst;
wire         rst_bus;
wire         rx10                     = 1'b0;
wire         rx11                     = 1'b0;
wire         rx12                     = 1'b0;
wire         rx13                     = 1'b0;
wire         rx14                     = 1'b0;
wire         rx15                     = 1'b0;
wire         rx8                      = 1'b0;
wire         rx9                      = 1'b0;
wire         rx_data_rdy_in;
wire  [1:0]  rx_elink2bit;
wire         rx_fifo_full_in;
wire         rx_fifo_full_rdy;
wire         sck_c;
wire         sck_m;
wire         start_write_elink_dbg;
wire  [3:0]  state_o;
wire         test_can_core            = 1'b0;
wire         test_uart_core           = 1'b0;
wire         tx10;
wire         tx11;
wire         tx12;
wire         tx13;
wire         tx14;
wire         tx15;
wire         tx8;
wire         tx9;
wire         tx_data_rdy_in;
wire         tx_efifo_full_in;
wire         tx_fifo_full_rdy;
wire         word10b_rdy;
wire         end_write_elink_dbg;
wire  [15:0] prescaler_init;
wire  [15:0] general_init;
wire  [4:0]  n_buses;
wire         debug_mode;
wire         dbg_spi;
wire         miso_m;
wire         miso_c;
wire         irq_elink_eth;
wire         buffer_eth_en;
wire  [1:0]  tx_elink2bit;
wire  [11:0] xadc_rec_in;


// Instances 
//  Instances
// 
elink_data_gen_SM elink_data_gen_dbg_0( 
   .clk                (clk_40), 
   .rst                (rst), 
   .irq_elink_tra      (), 
   .state_o            (state_o), 
   .start_read_elink   (), 
   .end_read_elink     (), 
   .cnt_done           (), 
   .buffer_en          (), 
   .data_tra_in        (), 
   .rst_cnt            (), 
   .counter_gen_en     (), 
   .test_can_core      (test_can_core), 
   .test_uart_core     (test_uart_core), 
   .tx_uart_ready      (), 
   .data_10bit_in_dbg  (data_10bit_in_dbg), 
   .rdy_dbg            (rdy_dbg), 
   .irq_elink_dbg      (irq_elink_dbg_sm), 
   .tx_uart_valid      (), 
   .tx_uart_data       (), 
   .tx_uart_addr       (), 
   .rx_uart_valid      (), 
   .rx_uart_addr_valid (), 
   .rx_uart_ready      (), 
   .rx_uart_addr_ready (), 
   .rx_uart_addr       ()
); 

ethernet_core ethernet_core0( 
   .clk125                (clk125), 
   .data_rec_uplink       (data_rec_uplink), 
   .data_tra_downlink     (data_tra_downlink), 
   .dip_sw                (dip_sw), 
   .gmii_rx_dv            (gmii_rx_dv), 
   .gmii_rx_er            (gmii_rx_er), 
   .gmii_rxd              (gmii_rxd), 
   .mmcm_locked           (mmcm_locked), 
   .resetdone             (resetdone), 
   .sysclk_n              (sysclk_n), 
   .sysclk_p              (sysclk_p), 
   .clk_ipb               (clk_ipb), 
   .configuration_vector  (configuration_vector), 
   .data_rec_elink_dbg    (data_rec_elink_dbg), 
   .gmii_tx_en            (gmii_tx_en), 
   .gmii_tx_er            (gmii_tx_er), 
   .gmii_txd              (gmii_txd), 
   .led                   (eth_led), 
   .rst_eth               (rst_eth), 
   .sfp_enable            (sfp_enable), 
   .start_write_elink_dbg (start_write_elink_dbg), 
   .clk                   (clk_40), 
   .rst                   (rst), 
   .irq_elink_dbg_in      (irq_elink_eth), 
   .buffer_eth_en         (buffer_eth_en)
); 

ip_select_io_ddr_wrapper ip_select_io_ddr_wrapper0( 
   .clk_rx       (clk_rx), 
   .clk_tx       (clk_tx), 
   .reset        (reset), 
   .rx_elink_n   (rx_elink_n), 
   .rx_elink_p   (rx_elink_p), 
   .rx_elink2bit (rx_elink2bit), 
   .tx_elink2bit (tx_elink2bit), 
   .tx_elink_n   (tx_elink_n), 
   .tx_elink_p   (tx_elink_p)
); 

mopshub_top_16bus mopshub_top_0( 
   .clk                   (clk_40), 
   .data_10bit_in_dbg     (data_10bit_in_dbg), 
   .data_rec_dbg_in       (data_rec_elink_dbg), 
   .dbg_elink             (dbg_elink), 
   .dbg_spi               (dbg_spi), 
   .debug_mode            (debug_mode), 
   .endwait_all           (endwait_all), 
   .general_init          (general_init), 
   .miso_c                (miso_c), 
   .miso_m                (miso_m), 
   .n_buses               (n_buses), 
   .osc_auto_trim_mopshub (osc_auto_trim_mopshub), 
   .prescaler_init        (prescaler_init), 
   .rdy_dbg               (rdy_dbg), 
   .rst                   (rst), 
   .rx0                   (rx0), 
   .rx1                   (rx1), 
   .rx10                  (rx10), 
   .rx11                  (rx11), 
   .rx12                  (rx12), 
   .rx13                  (rx13), 
   .rx14                  (rx14), 
   .rx15                  (rx15), 
   .rx2                   (rx2), 
   .rx3                   (rx3), 
   .rx4                   (rx4), 
   .rx5                   (rx5), 
   .rx6                   (rx6), 
   .rx7                   (rx7), 
   .rx8                   (rx8), 
   .rx9                   (rx9), 
   .rx_elink2bit          (rx_elink2bit), 
   .start_write_elink_dbg (start_write_elink_dbg), 
   .xadc_rec_in           (xadc_rec_in), 
   .buffer_eth_en         (buffer_eth_en), 
   .cs_active_c           (cs_active_c), 
   .cs_active_m           (cs_active), 
   .data_rec_uplink       (data_rec_uplink), 
   .data_tra_downlink     (data_tra_downlink), 
   .end_write_elink_dbg   (end_write_elink_dbg), 
   .irq_can_rec           (irq_can_rec_in), 
   .irq_can_tra           (irq_can_tra_in), 
   .irq_elink_eth         (irq_elink_eth), 
   .irq_elink_rec         (irq_elink_rec_in), 
   .irq_elink_tra         (irq_elink_tra_in), 
   .mon_bus_cnt           (mon_bus_cnt), 
   .mosi_c                (mosi_c), 
   .mosi_m                (mosi_m), 
   .power_bus_cnt         (power_bus_cnt), 
   .rst_bus               (rst_bus), 
   .rx_data_rdy           (rx_data_rdy_in), 
   .rx_fifo_full          (rx_fifo_full_in), 
   .sck_c                 (sck_c), 
   .sck_m                 (sck_m), 
   .tx0                   (tx0), 
   .tx1                   (tx1), 
   .tx10                  (tx10), 
   .tx11                  (tx11), 
   .tx12                  (tx12), 
   .tx13                  (tx13), 
   .tx14                  (tx14), 
   .tx15                  (tx15), 
   .tx2                   (tx2), 
   .tx3                   (tx3), 
   .tx4                   (tx4), 
   .tx5                   (tx5), 
   .tx6                   (tx6), 
   .tx7                   (tx7), 
   .tx8                   (tx8), 
   .tx9                   (tx9), 
   .tx_data_rdy           (tx_data_rdy_in), 
   .tx_efifo_full         (tx_efifo_full_in), 
   .tx_elink2bit          (tx_elink2bit), 
   .word10b_rdy           (word10b_rdy)
); 

top_led_enable_SM top_led_enable_SM5( 
   .clk_in     (clk_40), 
   .enable_cnt (enable_cnt), 
   .rst        (rst), 
   .led        (led)
); 

top_led_for_synth top_led_for_synth0( 
   .clk                  (clk_40), 
   .irq_can_rec_in       (irq_can_rec_in), 
   .irq_can_tra_in       (irq_can_tra_in), 
   .irq_elink_dbg_in     (irq_elink_dbg_in_active), 
   .irq_elink_rec_in     (end_write_elink_dbg), 
   .irq_elink_tra_in     (irq_elink_tra_in), 
   .rst                  (rst), 
   .rx_data_rdy_in       (word10b_rdy), 
   .rx_fifo_full_rdy_in  (rx_fifo_full_in), 
   .tx_data_rdy_in       (tx_data_rdy_in), 
   .tx_fifo_full_rdy_in  (tx_efifo_full_in), 
   .irq_can_rec_out      (irq_can_rec), 
   .irq_can_tra_out      (irq_can_tra), 
   .irq_elink_dbg_out    (irq_elink_dbg), 
   .irq_elink_rec_out    (irq_elink_rec), 
   .irq_elink_tra_out    (irq_elink_tra), 
   .rx_data_rdy_out      (rx_data_rdy), 
   .rx_fifo_full_rdy_out (rx_fifo_full_rdy), 
   .tx_data_rdy_out      (tx_data_rdy), 
   .tx_fifo_full_rdy_out (tx_fifo_full_rdy)
); 

// HDL Embedded Text Block 1 eb1
// HDL Embedded Text Block 2 eb2
// eb1 1             
assign xadc_rec_in=12'hB;                           
assign rst = !reset;                                     
assign irq_elink_dbg_in_active = dbg_elink && irq_elink_dbg_sm;
assign prescaler_init = 16'h00FF;// prescalar register value gives 125000kb/s 
assign general_init = 16'h00A3; // general register.first 7bits<=0 then sjw,tseg1,tseg2 gives 125000kb/s
assign debug_mode   = 1'b1;
assign dbg_spi      = 1'b1;
assign n_buses      =5'b00111;
assign miso_c = 1'b0;
assign miso_m = 1'b0;



endmodule // mopshub_top_16bus_debug
// mopshub_top_16bus_debug
