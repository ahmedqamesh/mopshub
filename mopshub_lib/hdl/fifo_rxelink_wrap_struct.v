//
// Module mopshub_lib.fifo_RXelink_wrap.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 11:47:06 10/30/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module fifo_RXelink_wrap #(
   // synopsys template
   parameter Kchar_sop = 8'b00111100,  // K28.1
   parameter Kchar_eop = 8'b11011100   // K28.6
)
( 
   // Port Declarations
   input   wire           clk, 
   input   wire    [9:0]  din, 
   input   wire           din_rdy, 
   input   wire           flush_fifo, 
   input   wire           rd_en_fifo, 
   input   wire           rst, 
   output  wire    [9:0]  dout_fifo, 
   output  wire           empty_fifo, 
   output  wire           full_fifo
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire   aempty;
wire   afull;
wire   clk_en  = 1;

// ModuleWare signal declarations(v1.12) for instance 'fifo_upstream_ip' of 'fifo'
reg [9:0] mw_fifo_upstream_ipreg_cval0;
reg [9:0] mw_fifo_upstream_ipreg_cval1;
reg [9:0] mw_fifo_upstream_ipreg_cval2;
reg [9:0] mw_fifo_upstream_ipreg_cval3;
reg [9:0] mw_fifo_upstream_ipreg_cval4;
reg [9:0] mw_fifo_upstream_ipreg_cval5;
reg [9:0] mw_fifo_upstream_ipreg_cval6;
reg [9:0] mw_fifo_upstream_ipreg_cval7;
reg [9:0] mw_fifo_upstream_ipreg_cval8;
wire [9:0] mw_fifo_upstream_ipreg_nval0;
wire [9:0] mw_fifo_upstream_ipreg_nval1;
wire [9:0] mw_fifo_upstream_ipreg_nval2;
wire [9:0] mw_fifo_upstream_ipreg_nval3;
wire [9:0] mw_fifo_upstream_ipreg_nval4;
wire [9:0] mw_fifo_upstream_ipreg_nval5;
wire [9:0] mw_fifo_upstream_ipreg_nval6;
wire [9:0] mw_fifo_upstream_ipreg_nval7;
wire [9:0] mw_fifo_upstream_ipreg_nval8;
wire mw_fifo_upstream_iptemp_rena;
wire mw_fifo_upstream_iptemp_wena;
wire mw_fifo_upstream_iptemp_full;
wire mw_fifo_upstream_iptemp_empty;
reg [3:0] mw_fifo_upstream_ipaddr_cval;
wire [3:0] mw_fifo_upstream_ipaddr_nval;


// Instances 

// ModuleWare code(v1.12) for instance 'fifo_upstream_ip' of 'fifo'
assign full_fifo = mw_fifo_upstream_iptemp_full;
assign empty_fifo = mw_fifo_upstream_iptemp_empty;
assign dout_fifo = mw_fifo_upstream_ipreg_cval0;
assign afull = mw_fifo_upstream_iptemp_full;
assign aempty = ~(mw_fifo_upstream_iptemp_empty);
assign mw_fifo_upstream_iptemp_rena = ~flush_fifo & rd_en_fifo & ~mw_fifo_upstream_iptemp_empty;
assign mw_fifo_upstream_iptemp_wena = ~flush_fifo & din_rdy & ~mw_fifo_upstream_iptemp_full;
assign mw_fifo_upstream_iptemp_empty = (mw_fifo_upstream_ipaddr_cval == 0);
assign mw_fifo_upstream_iptemp_full = (mw_fifo_upstream_ipaddr_cval == 8);

assign mw_fifo_upstream_ipaddr_nval = mw_fifo_upstream_iptemp_wena ? mw_fifo_upstream_ipaddr_cval + 1'b1
   : mw_fifo_upstream_iptemp_rena ? mw_fifo_upstream_ipaddr_cval - 1'b1
   : mw_fifo_upstream_ipaddr_cval;
always @(posedge clk, posedge flush_fifo)
begin : fifo_upstream_ipseq_proc
   if (flush_fifo) mw_fifo_upstream_ipaddr_cval =  0;
   else 
      if (clk_en)
         mw_fifo_upstream_ipaddr_cval = mw_fifo_upstream_ipaddr_nval;
end

always @(posedge clk)
begin : fifo_upstream_ipmove_proc
   if (clk_en)
   begin
      mw_fifo_upstream_ipreg_cval0[9:0]  = mw_fifo_upstream_ipreg_nval0[9:0] ;
      mw_fifo_upstream_ipreg_cval1[9:0]  = mw_fifo_upstream_ipreg_nval1[9:0] ;
      mw_fifo_upstream_ipreg_cval2[9:0]  = mw_fifo_upstream_ipreg_nval2[9:0] ;
      mw_fifo_upstream_ipreg_cval3[9:0]  = mw_fifo_upstream_ipreg_nval3[9:0] ;
      mw_fifo_upstream_ipreg_cval4[9:0]  = mw_fifo_upstream_ipreg_nval4[9:0] ;
      mw_fifo_upstream_ipreg_cval5[9:0]  = mw_fifo_upstream_ipreg_nval5[9:0] ;
      mw_fifo_upstream_ipreg_cval6[9:0]  = mw_fifo_upstream_ipreg_nval6[9:0] ;
      mw_fifo_upstream_ipreg_cval7[9:0]  = mw_fifo_upstream_ipreg_nval7[9:0] ;
      mw_fifo_upstream_ipreg_cval8[9:0]  = mw_fifo_upstream_ipreg_nval8[9:0] ;
   end
end
assign mw_fifo_upstream_ipreg_nval0[9:0] = mw_fifo_upstream_iptemp_wena ? mw_fifo_upstream_ipreg_cval0[9:0] : mw_fifo_upstream_iptemp_rena ? mw_fifo_upstream_ipreg_cval1[9:0] : mw_fifo_upstream_ipreg_cval0[9:0];
assign mw_fifo_upstream_ipreg_nval1[9:0] = mw_fifo_upstream_iptemp_wena ? (mw_fifo_upstream_ipaddr_cval == 0) ? din : mw_fifo_upstream_ipreg_cval1[9:0]
    : mw_fifo_upstream_iptemp_rena ? mw_fifo_upstream_ipreg_cval2[9:0] : mw_fifo_upstream_ipreg_cval1[9:0];
assign mw_fifo_upstream_ipreg_nval2[9:0] = mw_fifo_upstream_iptemp_wena ? (mw_fifo_upstream_ipaddr_cval == 1) ? din : mw_fifo_upstream_ipreg_cval2[9:0]
    : mw_fifo_upstream_iptemp_rena ? mw_fifo_upstream_ipreg_cval3[9:0] : mw_fifo_upstream_ipreg_cval2[9:0];
assign mw_fifo_upstream_ipreg_nval3[9:0] = mw_fifo_upstream_iptemp_wena ? (mw_fifo_upstream_ipaddr_cval == 2) ? din : mw_fifo_upstream_ipreg_cval3[9:0]
    : mw_fifo_upstream_iptemp_rena ? mw_fifo_upstream_ipreg_cval4[9:0] : mw_fifo_upstream_ipreg_cval3[9:0];
assign mw_fifo_upstream_ipreg_nval4[9:0] = mw_fifo_upstream_iptemp_wena ? (mw_fifo_upstream_ipaddr_cval == 3) ? din : mw_fifo_upstream_ipreg_cval4[9:0]
    : mw_fifo_upstream_iptemp_rena ? mw_fifo_upstream_ipreg_cval5[9:0] : mw_fifo_upstream_ipreg_cval4[9:0];
assign mw_fifo_upstream_ipreg_nval5[9:0] = mw_fifo_upstream_iptemp_wena ? (mw_fifo_upstream_ipaddr_cval == 4) ? din : mw_fifo_upstream_ipreg_cval5[9:0]
    : mw_fifo_upstream_iptemp_rena ? mw_fifo_upstream_ipreg_cval6[9:0] : mw_fifo_upstream_ipreg_cval5[9:0];
assign mw_fifo_upstream_ipreg_nval6[9:0] = mw_fifo_upstream_iptemp_wena ? (mw_fifo_upstream_ipaddr_cval == 5) ? din : mw_fifo_upstream_ipreg_cval6[9:0]
    : mw_fifo_upstream_iptemp_rena ? mw_fifo_upstream_ipreg_cval7[9:0] : mw_fifo_upstream_ipreg_cval6[9:0];
assign mw_fifo_upstream_ipreg_nval7[9:0] = mw_fifo_upstream_iptemp_wena ? (mw_fifo_upstream_ipaddr_cval == 6) ? din : mw_fifo_upstream_ipreg_cval7[9:0]
    : mw_fifo_upstream_iptemp_rena ? mw_fifo_upstream_ipreg_cval8[9:0] : mw_fifo_upstream_ipreg_cval7[9:0];
assign mw_fifo_upstream_ipreg_nval8[9:0] = mw_fifo_upstream_iptemp_wena ? (mw_fifo_upstream_ipaddr_cval == 7) ? din : mw_fifo_upstream_ipreg_cval8[9:0] : mw_fifo_upstream_iptemp_rena ? mw_fifo_upstream_ipreg_cval8[9:0] : mw_fifo_upstream_ipreg_cval8[9:0];

endmodule // fifo_RXelink_wrap

