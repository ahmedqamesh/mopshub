//
// Module mopshub_lib.select_io_ddr_emci.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 10:57:15 01/24/23
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module select_io_ddr_emci( 
   // Port Declarations
   input   wire           clk_rx, 
   input   wire           clk_tx, 
   input   wire           reset, 
   input   wire           rx_elink_n, 
   input   wire           rx_elink_p, 
   output  wire    [1:0]  rx_elink2bit, 
   input   wire    [1:0]  tx_elink2bit, 
   output  wire           tx_elink_n, 
   output  wire           tx_elink_p
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire   rx_elink1bit;
wire   tx_elink1bit;


// Instances 
// edin buffer [Differential Input Buffer Primitives]
// 
IBUFDS edin_buf( 
   .i  (rx_elink_p), 
   .ib (rx_elink_n), 
   .o  (rx_elink1bit)
); 

//  IDDRE1: Dedicated Double Data Rate (DDR) Input Register
//          Kintex UltraScale+
//  Xilinx HDL Language Template, version 2020.1
// 
IDDRE1 #("OPPOSITE_EDGE",1'b1,1'b0)
IDDRE1_inst( 
   .C  (clk_rx), 
   .CB (clk_rx), 
   .Q2 (rx_elink2bit[1]), 
   .R  (reset), 
   .D  (rx_elink1bit), 
   .Q1 (rx_elink2bit[0])
); 

OBUFDS edout_buf( 
   .I  (tx_elink1bit), 
   .O  (tx_elink_p), 
   .OB (tx_elink_n)
); 

ODDRE1 #(1'b0,1'b0,1'b0,"ULTRASCALE_PLUS",1'b0)
ODDRE1_inst( 
   .C  (clk_tx), 
   .D1 (tx_elink2bit[0]), 
   .D2 (tx_elink2bit[1]), 
   .SR (reset), 
   .Q  (tx_elink1bit)
); 


endmodule // select_io_ddr_emci

