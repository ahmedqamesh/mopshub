//
// Module mopshub_lib.elinkRXfifo_wrap.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 20:06:09 04/07/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2018.1 (Build 12)
//

`resetall
`timescale 1ns/10ps
module elinkRXfifo_wrap #(
   // synopsys template
   parameter Kchar_sop = 8'b00111100,  // K28.1
   parameter Kchar_eop = 8'b11011100   // K28.6
)
( 
   // Port Declarations
   // -----------------------------
   // ------ General Interface ----
   input   wire           bitClk, 
   input   wire    [9:0]  din, 
   input   wire           din_rdy, 
   input   wire           flush_fifo, 
   // ----------------------------
   // --- User Logic Interface ---
   input   wire           rd_clk_elink, 
   input   wire           rd_en_elink, 
   input   wire           rst, 
   output  reg     [9:0]  din_fifo_dbg     = 0, 
   output  wire    [9:0]  dout_elink, 
   output  wire           empty_elink, 
   output  wire           full_elink, 
   output  reg            wr_en_fifo_dbg   = 0
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire        almost_full;
reg   [9:0] din_fifo      = 0;
reg         flag_pack     = 0;
wire        prog_full;
reg         wr_en_fifo    = 0;
reg         wr_en_r       = 0;


// Instances 
upstreamFIFO U_0( 
   .dout        (dout_elink), 
   .full        (full_elink), 
   .empty       (empty_elink), 
   .prog_full   (prog_full), 
   .almost_full (almost_full), 
   .din         (din_fifo), 
   .wr_en       (wr_en_fifo), 
   .rd_en       (rd_en_elink), 
   .rd_clk      (rd_clk_elink), 
   .wr_clk      (bitClk), 
   .rst         (flush_fifo)
); 

// HDL Embedded Text Block 1 write_pipeline
////-------------------------------------------------------------------------------------------
////-- write pipeline
////-------------------------------------------------------------------------------------------
always @ (posedge bitClk)
if (rst)
  begin
    wr_en_fifo      <= 1'b0;
    din_fifo        <= 10'b0;
    din_fifo_dbg    <= 10'b0;
    wr_en_fifo_dbg  <= 1'b0;
  end
  else
  begin
    wr_en_fifo      <= wr_en_r;
    din_fifo        <= din;
    
    din_fifo_dbg    <= din;
    wr_en_fifo_dbg  <= wr_en_r;
  end                                     






// HDL Embedded Text Block 3 FIFO_Write
//what to write into the FIFO?
always@(posedge bitClk)
if (rst == 1)
  begin
    wr_en_r      <= 1'b0;
    flag_pack    <= 1'b0;
  end
else 
  begin
    if(wr_en_r == 1)//always make sure you write only once
      begin
        wr_en_r   <= 1'b0;
        flag_pack <= flag_pack;
      end
                                               
    else if(flag_pack == 1 && din_rdy == 1 && din[9:8] == 2'b11 )// ignore commas
      begin
        wr_en_r      <= 1'b0;
        flag_pack    <= flag_pack;
      end   
    
    else if(flag_pack == 1 && din_rdy == 1 && din != {2'b01,Kchar_eop})// 0xdc = 1101 1100 EOP (if 8b10b)
      begin
        wr_en_r   <= 1'b1;
        flag_pack <= 1'b1;
      end   
    
    else if(flag_pack == 1 && din_rdy == 1 && din == {2'b01,Kchar_eop})// 0xdc = 1101 1100 (if 8b10b)
      begin
        wr_en_r   <= 1'b1;
        flag_pack <= 1'b0; //EOP detected. drop the flag
      end 
    
    else if(flag_pack == 0 && din_rdy == 1 && din == {2'b10,Kchar_sop})// 0x3c = 0011 1100 SOP (if 8b10b)
      begin
        wr_en_r      <= 1'b1;
        flag_pack    <= 1'b1; //SOP detected. raise the flag, write everything
      end   
    
    else
      begin
        wr_en_r   <= 1'b0;
        flag_pack <= flag_pack;
      end 
  end
















endmodule // elinkRXfifo_wrap

