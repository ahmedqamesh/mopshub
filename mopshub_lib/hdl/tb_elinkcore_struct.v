//
// Module mopshub_lib.tb_elinkCore.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 14:26:43 04/11/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module tb_elinkCore #(
   // synopsys template
   parameter clock_period_usr = 25,
   parameter clock_period_40  = 25,
   parameter clock_period_80  = 25/2,
   parameter clock_period_160 = 25/4
)
( 
   // Port Declarations
   output  wire      DATA1bitOUT, 
   output  wire      efifoPfull
);


// Internal Declarations


// Local declarations

// Internal signal declarations
reg         clk_160               = 1'b0;   // posedge
reg         clk_40                = 1'b0;   // posedge
reg         clk_80                = 1'b0;   // posedge
reg         clk_usr               = 1'b0;   // posedge
reg         fifo_flush_s;
reg         rst;
reg  [17:0] tx_fifo_data_in;                // tx_fifo_data_in
reg         tx_fifo_write_enable;           // tx_fifo_write_enable


// Instances 
FIFO_to_Elink U_0( 
   .efifoWr     (), 
   .bitCLK      (), 
   .bitCLKx2    (), 
   .bitCLKx4    (), 
   .rst         (rst), 
   .efifoDin    (tx_fifo_data_in), 
   .efifoPfull  (efifoPfull), 
   .DATA1bitOUT (DATA1bitOUT), 
   .elink2bit   (), 
   .fifo_flush  (fifo_flush_s), 
   .reverse_tx  (), 
   .swap_output (), 
   .efifoWclk   (clk_usr)
); 

// HDL Embedded Text Block 1 Clocking
// Clocking                                       
always clk_usr = #(clock_period_usr/2.0)~clk_usr;
always clk_40 = #(clock_period_40/2.0)~clk_40;
always clk_80 = #(clock_period_80/2.0)~clk_80;
always clk_160 = #(clock_period_160/2.0)~clk_160;

// HDL Embedded Text Block 3 testbench_run
// test_bench run
initial begin
//Intialize and reset blocks
$display($time, " << Starting the Simulation >>");
rst = 1;
fifo_flush_s = 1;
tx_fifo_data_in = {2'b00,16'b0};
tx_fifo_write_enable = 0;

//Stimulus
#100 rst = 0;

#3000 // Enough time for the core to reset (minimum is 2400ns)
 @(posedge clk_usr) tx_fifo_data_in = {2'b10,16'b0};
 @(posedge clk_usr) tx_fifo_write_enable = 1;
 @(posedge clk_usr) tx_fifo_write_enable = 0;

 @(posedge clk_usr) tx_fifo_data_in = {2'b00,16'hDEAD};
 @(posedge clk_usr) tx_fifo_write_enable = 1;
 @(posedge clk_usr) tx_fifo_write_enable = 0;
 
 @(posedge clk_usr) tx_fifo_data_in = {2'b00,16'hBEEF};
 @(posedge clk_usr) tx_fifo_write_enable = 1;
 @(posedge clk_usr) tx_fifo_write_enable = 0;
  
 
 @(posedge clk_usr) tx_fifo_data_in = {2'b01,16'b0};
 @(posedge clk_usr) tx_fifo_write_enable = 1;
 @(posedge clk_usr) tx_fifo_write_enable = 0;
  
end

                                       







endmodule // tb_elinkCore

