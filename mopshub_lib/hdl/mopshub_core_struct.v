//
// Module mopshub_lib.mopshub_core.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 11:35:38 08/05/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module mopshub_core #(
   // synopsys template
   parameter max_cnt_size = 5,
   parameter n_buses      = 5'b11111
)
( 
   // Port Declarations
   input   wire            clk, 
   input   wire            rst, 
   output  wire    [75:0]  data_rec_uplink, 
   input   wire    [75:0]  data_tra_uplink, 
   input   wire            end_read_elink, 
   input   wire            end_write_elink, 
   input   wire            irq_elink, 
   output  wire            start_read_elink, 
   output  wire            start_write_elink, 
   output  wire            send_mes_elink, 
   output  wire            sign_on_sig, 
   input   wire            endwait, 
   input   wire            buffer_en, 
   output  wire            send_mes_can_done, 
   output  wire    [4:0]   can_tra_select, 
   input   wire    [4:0]   can_rec_select, 
   output  wire            end_can_proc, 
   output  wire            priority_sig, 
   input   wire            end_cnt_dbg, 
   output  wire    [4:0]   address, 
   output  wire    [15:0]  write_can, 
   output  wire            write_sig_can_n, 
   input   wire    [15:0]  read_can, 
   output  wire            read_sig_can_n, 
   output  wire            enable_cs, 
   input   wire            irq_can_tra, 
   input   wire            irq_can_rec, 
   output  wire            start_init, 
   output  wire            irq_can_ack
);


// Internal Declarations


// Local declarations

// Internal signal declarations


// Instances 
bridge_controller #(max_cnt_size,n_buses) bridge_controller0( 
   .buffer_en         (buffer_en), 
   .can_rec_select    (can_rec_select), 
   .clk               (clk), 
   .data_tra_uplink   (data_tra_uplink), 
   .end_cnt_dbg       (end_cnt_dbg), 
   .end_read_elink    (end_read_elink), 
   .end_write_elink   (end_write_elink), 
   .endwait           (endwait), 
   .irq_can_rec       (irq_can_rec), 
   .irq_can_tra       (irq_can_tra), 
   .irq_elink         (irq_elink), 
   .read_can          (read_can), 
   .rst               (rst), 
   .addr_can          (address), 
   .can_tra_select    (can_tra_select), 
   .data_rec_uplink   (data_rec_uplink), 
   .enable_cs         (enable_cs), 
   .end_can_proc      (end_can_proc), 
   .irq_can_ack       (irq_can_ack), 
   .priority_sig      (priority_sig), 
   .read_sig_can_n    (read_sig_can_n), 
   .send_mes_can_done (send_mes_can_done), 
   .send_mes_elink    (send_mes_elink), 
   .sign_on_sig       (sign_on_sig), 
   .start_init        (start_init), 
   .start_read_elink  (start_read_elink), 
   .start_write_elink (start_write_elink), 
   .write_can         (write_can), 
   .write_sig_can_n   (write_sig_can_n)
); 


endmodule // mopshub_core

