//
// Module mopshub_lib.GBTX_Emulator.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 19:36:51 04/08/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2018.1 (Build 12)
//

`resetall
`timescale 1ns/10ps
module GBTX_Emulator( 
   // Port Declarations
   input   wire           bitCLK, 
   input   wire           datain_valid, 
   input   wire           rst, 
   output  wire           code_err, 
   output  wire    [7:0]  dataout, 
   output  wire           disp_err, 
   output  wire           ko, 
   input   wire    [1:0]  EDATA_2bit, 
   output  wire    [9:0]  enc10bit_out_dbg, 
   input   wire    [9:0]  data_10b_in, 
   input   wire           data_10b_en
);

// Internal Declarations


// Local declarations

// Internal signal declarations
// Internal Declarations


// Local declarations
reg [1:0] EDATA_2bit_r = 2'b0; 


// Internal signal declarations
reg   [9:0] datain_enc10bit;
wire        inp_request_trig;
reg   [9:0] enc10bit_r;
reg   [2:0] send_count;
wire  [9:0] enc10bit_out;
reg         send_out_trig;


// Instances 
//  Instances
// 
dec_8b10b U_0( 
   .reset        (rst), 
   .clk          (bitCLK), 
   .datain       (datain_enc10bit), 
   .datain_valid (datain_valid), 
   .ko           (ko), 
   .dataout      (dataout), 
   .code_err     (code_err), 
   .disp_err     (disp_err)
); 

demux8_Nbit U_1( 
   .sel          (send_count), 
   .EDATA_2bit   (EDATA_2bit), 
   .enc10bit_out (enc10bit_out)
); 

triger_counter #(3'b100,3'b011) U_2( 
   .rst          (rst), 
   .bitCLK       (bitCLK), 
   .request_trig (inp_request_trig)
); 

// HDL Embedded Text Block 3 eb3
always@(posedge bitCLK)
if (rst)
 datain_enc10bit <= 0;
else
begin
if (data_10b_en ==1)
 datain_enc10bit <= data_10b_in;
else
   datain_enc10bit <= enc10bit_out_dbg;     
end


// HDL Embedded Text Block 4 eb4
// HDL Embedded Text Block 2 eb2
// eb2 2      
always @(posedge bitCLK)
  begin
   if (rst)
      enc10bit_r <= 10'b0;
   else if (send_out_trig  == 1)
      begin
        enc10bit_r <= {enc10bit_out[0],enc10bit_out[1],enc10bit_out[2],enc10bit_out[3],enc10bit_out[4],enc10bit_out[5],enc10bit_out[6],enc10bit_out[7],enc10bit_out[8],enc10bit_out[9]};                                  
      end
  end
// HDL Embedded Text Block 5 eb5
// HDL Embedded Text Block 3 eb3
// eb3 3
assign   enc10bit_out_dbg =  enc10bit_r;


// HDL Embedded Text Block 6 eb6
always @(posedge bitCLK)
if (rst)
  send_out_trig <=0;
else
  begin
    send_out_trig <= inp_request_trig; //send_out_trig will be used later when sending out 2bits @bitCLK
  end

// HDL Embedded Text Block 8 eb8
// HDL Embedded Text Block 6 bitcounter
// eb6 6      
// Counter over the select signal
always @(posedge bitCLK)
  begin
     if (send_out_trig == 1)
        send_count <= 3'b0; 
     else  
      send_count <= send_count + 1'b1;
  end

endmodule // GBTX_Emulator
// GBTX_Emulator
