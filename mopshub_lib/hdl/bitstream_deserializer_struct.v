//
// Module mopshub_lib.bitstream_deserializer.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 11:24:25 09/30/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module bitstream_deserializer( 
   // Port Declarations
   input   wire            clk, 
   input   wire    [1:0]   data_2bit_in, 
   input   wire            rst, 
   input   wire            swap_rx_bits, 
   output  wire    [11:0]  data_12bit_out
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire        dir;
reg         dir_r       = 1;      // Declare input to shift in either left or right direction
reg   [1:0] edata_in_r  = 2'b0;
wire  [1:0] edata_in_s;
wire        en;
reg         en_r        = 1;      // Declare input for enable to switch the shift register on/off


// Instances 
bitstream_shift_register #(12,2) bitstream_shift_register0( 
   .din  (edata_in_s), 
   .clk  (clk), 
   .en   (en), 
   .dir  (dir), 
   .rst  (rst), 
   .dout (data_12bit_out)
); 

// HDL Embedded Text Block 2 assigninig
// eb1 1   
assign edata_in_s = edata_in_r;
assign dir = dir_r; 
assign en = en_r;                                      
// buffer the output data
always @ (swap_rx_bits, data_2bit_in)//bit swapping on a GBT frame level
begin
  if (swap_rx_bits)
  edata_in_r = {data_2bit_in[0],data_2bit_in[1]};
  else     
  edata_in_r = data_2bit_in;
end
  














endmodule // bitstream_deserializer

