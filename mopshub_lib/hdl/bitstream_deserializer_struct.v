//
// Module mopshub_lib.bitstream_deserializer.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 12:40:52 08/11/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module bitstream_deserializer( 
   // Port Declarations
   input   wire    [1:0]   DATA_IN, 
   input   wire            bitCLK, 
   input   wire            reset, 
   input   wire            swap_tx_bits, 
   output  wire    [11:0]  dout
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire        dir;
reg         dir_r       = 1;      // Declare input to shift in either left or right direction
reg   [1:0] edata_in_r  = 2'b0;
wire  [1:0] edata_in_s;
wire        en;
reg         en_r        = 1;      // Declare input for enable to switch the shift register on/off


// Instances 
bitstream_shift_register #(12,2) bitstream_shift_register0( 
   .din   (edata_in_s), 
   .clk   (bitCLK), 
   .en    (en), 
   .dir   (dir), 
   .reset (reset), 
   .dout  (dout)
); 

// HDL Embedded Text Block 2 assigninig
// eb1 1   
assign edata_in_s = edata_in_r;
assign dir = dir_r; 
assign en = en_r;                                      



// HDL Embedded Text Block 14 eb6
  // buffer the output data
always @ (swap_tx_bits, DATA_IN)//bit swapping on a GBT frame level
begin
  if (swap_tx_bits)
  edata_in_r = {DATA_IN[0],DATA_IN[1]};
  else     
  edata_in_r = DATA_IN;
end
  







endmodule // bitstream_deserializer

