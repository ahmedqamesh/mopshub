//
// Module mopshub_lib.mopshub_core_diff_ports.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 10:12:20 12/15/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module mopshub_core_diff_ports #(
   // synopsys template
   parameter n_buses = 5'b111
)
( 
   // Port Declarations
   input   wire      clk, 
   input   wire      clk_100, 
   input   wire      clk_80, 
   input   wire      end_cnt_dbg, 
   input   wire      locked, 
   input   wire      osc_auto_trim_mopshub, 
   input   wire      reset, 
   input   wire      rx0, 
   input   wire      rx1, 
   input   wire      rx2, 
   input   wire      rx3, 
   input   wire      rx4, 
   input   wire      rx5, 
   input   wire      rx6, 
   input   wire      rx7, 
   output  wire      can_rec_dbg, 
   output  wire      can_tra_dbg, 
   output  wire      clk_100out_n, 
   output  wire      clk_100out_p, 
   output  wire      irq_elink_rec_dbg, 
   output  wire      irq_elink_tra_dbg, 
   output  wire      led, 
   output  wire      rx_data_rdy, 
   output  wire      tx0, 
   output  wire      tx1, 
   output  wire      tx2, 
   output  wire      tx3, 
   output  wire      tx4, 
   output  wire      tx5, 
   output  wire      tx6, 
   output  wire      tx7, 
   output  wire      tx_data_rdy, 
   output  wire      tx_fifo_full_rdy
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire         buffer_en;
wire  [4:0]  can_rec_select;
wire  [4:0]  can_tra_select;
wire         cnt_done             = 1'b0;
wire         counter_gen_en;
wire  [75:0] data_rec_in          = {5'h0C,7'h1,16'h4010, 16'h2301,8'h0,8'h0,16'h0};
wire  [75:0] data_rec_uplink;
wire  [75:0] data_tra_in_2;
wire         done_trim_osc;
wire         end_init;
wire         end_read_elink;
wire         end_trim_bus;
wire         end_write_elink      = 1'b0;
wire         irq_can_rec_dbg;
wire         irq_can_tra_dbg;
wire         irq_elink_rec;
wire         irq_elink_tra;
wire  [3:0]  mopshub_sm_dbg;
wire  [4:0]  power_bus_cnt;
wire         power_bus_en;
wire         power_bus_en_sig;
wire         rst;
wire         rst_cnt;
wire         rst_mops_dbg;
wire         rx_data_rdy_in;
wire         rx_fifo_full_rdy;
wire         rx_fifo_full_rdy_in;
wire         sign_on_sig;
wire         start_init;
wire         start_read_elink;
wire         start_trim_ack;
wire         start_write_elink;
wire  [2:0]  state_o;
wire  [5:0]  statedeb;
wire         tx_data_rdy_in;
wire         tx_fifo_full_rdy_in;


// Instances 
elink_data_gen_SM elink_data_gen_SM0( 
   .clk              (clk), 
   .reset            (reset), 
   .irq_elink_tra    (irq_elink_tra), 
   .state_o          (state_o), 
   .start_read_elink (start_read_elink), 
   .end_read_elink   (end_read_elink), 
   .cnt_done         (cnt_done), 
   .buffer_en        (buffer_en), 
   .data_tra_in      (data_tra_in_2), 
   .rst_cnt          (rst_cnt), 
   .counter_gen_en   (counter_gen_en)
); 

mopshub_core #(n_buses) mopshub_core0( 
   .buffer_en             (buffer_en), 
   .clk                   (clk), 
   .data_tra_downlink     (data_tra_in_2), 
   .end_cnt_dbg           (end_cnt_dbg), 
   .end_read_elink        (end_read_elink), 
   .end_write_elink       (end_write_elink), 
   .irq_elink_tra         (irq_elink_tra), 
   .osc_auto_trim_mopshub (osc_auto_trim_mopshub), 
   .rst                   (rst), 
   .rx0                   (rx0), 
   .rx1                   (rx1), 
   .rx2                   (rx2), 
   .rx3                   (rx3), 
   .rx4                   (rx4), 
   .rx5                   (rx5), 
   .rx6                   (rx6), 
   .rx7                   (rx7), 
   .can_rec_select        (can_rec_select), 
   .can_tra_select        (can_tra_select), 
   .data_rec_uplink       (data_rec_uplink), 
   .done_trim_osc_all     (done_trim_osc), 
   .end_init              (end_init), 
   .end_trim_bus          (end_trim_bus), 
   .irq_can_rec           (irq_can_rec_dbg), 
   .irq_can_tra           (irq_can_tra_dbg), 
   .mopshub_sm_dbg        (mopshub_sm_dbg), 
   .power_bus_cnt         (power_bus_cnt), 
   .power_bus_en          (power_bus_en_sig), 
   .rst_mops_dbg          (rst_mops_dbg), 
   .sign_on_sig           (sign_on_sig), 
   .start_init            (start_init), 
   .start_read_elink      (start_read_elink), 
   .start_trim_ack        (start_trim_ack), 
   .start_write_elink     (start_write_elink), 
   .statedeb              (statedeb), 
   .tx0                   (tx0), 
   .tx1                   (tx1), 
   .tx2                   (tx2), 
   .tx3                   (tx3), 
   .tx4                   (tx4), 
   .tx5                   (tx5), 
   .tx6                   (tx6), 
   .tx7                   (tx7)
); 

output_diff_buff_clk U_0( 
   .clk_in    (clk_100), 
   .locked    (locked), 
   .clk_out_p (clk_100out_p), 
   .clk_out_n (clk_100out_n)
); 

top_led_for_synth top_led_for_synth0( 
   .clk                 (clk), 
   .irq_can_rec_dbg     (irq_can_rec_dbg), 
   .irq_can_tra_dbg     (irq_can_tra_dbg), 
   .irq_elink_rec       (irq_elink_rec), 
   .irq_elink_tra       (irq_elink_tra), 
   .reset               (reset), 
   .rx_data_rdy_in      (rx_data_rdy_in), 
   .rx_fifo_full_rdy_in (rx_fifo_full_rdy_in), 
   .tx_data_rdy_in      (tx_data_rdy_in), 
   .tx_fifo_full_rdy_in (tx_fifo_full_rdy_in), 
   .can_rec_dbg         (can_rec_dbg), 
   .can_tra_dbg         (can_tra_dbg), 
   .irq_elink_rec_dbg   (irq_elink_rec_dbg), 
   .irq_elink_tra_dbg   (irq_elink_tra_dbg), 
   .rx_data_rdy         (rx_data_rdy), 
   .rx_fifo_full_rdy    (rx_fifo_full_rdy), 
   .tx_data_rdy         (tx_data_rdy), 
   .tx_fifo_full_rdy    (tx_fifo_full_rdy)
); 

top_led_test top_led_test( 
   .reset (reset), 
   .clk   (clk), 
   .led   (led)
); 

// HDL Embedded Text Block 2 eb2
// eb1 1   
assign rst = !reset;   
assign power_bus_en = power_bus_en_sig & rst;                                 

endmodule // mopshub_core_diff_ports

