//
// Module mopshub_lib.mopshub_top_board_16bus.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 19:37:30 11/18/22
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module mopshub_top_board_16bus( 
   // Port Declarations
   input   wire           clk_40, 
   input   wire           clk_m, 
   input   wire           locked, 
   input   wire           miso_c, 
   input   wire           miso_m, 
   input   wire           reset, 
   input   wire           rx0, 
   input   wire           rx1, 
   input   wire           rx2, 
   input   wire           rx3, 
   input   wire           rx4, 
   input   wire           rx5, 
   input   wire           rx6, 
   input   wire           rx7, 
   input   wire    [1:0]  rx_elink2bit, 
   output  wire           clk_out_n, 
   output  wire           clk_out_p, 
   output  wire           cs_c0, 
   output  wire           cs_c1, 
   output  wire           cs_c10, 
   output  wire           cs_c11, 
   output  wire           cs_c12, 
   output  wire           cs_c13, 
   output  wire           cs_c14, 
   output  wire           cs_c15, 
   output  wire           cs_c2, 
   output  wire           cs_c3, 
   output  wire           cs_c4, 
   output  wire           cs_c5, 
   output  wire           cs_c6, 
   output  wire           cs_c7, 
   output  wire           cs_c8, 
   output  wire           cs_c9, 
   output  wire           cs_m0, 
   output  wire           cs_m1, 
   output  wire           cs_m10, 
   output  wire           cs_m11, 
   output  wire           cs_m12, 
   output  wire           cs_m13, 
   output  wire           cs_m14, 
   output  wire           cs_m15, 
   output  wire           cs_m2, 
   output  wire           cs_m3, 
   output  wire           cs_m4, 
   output  wire           cs_m5, 
   output  wire           cs_m6, 
   output  wire           cs_m7, 
   output  wire           cs_m8, 
   output  wire           cs_m9, 
   output  wire           irq_can_rec, 
   output  wire           irq_can_tra, 
   output  wire           irq_elink_rec, 
   output  wire           irq_elink_tra, 
   output  wire           mosi_c, 
   output  wire           mosi_m, 
   output  wire           rx_data_rdy, 
   output  wire           sck_c, 
   output  wire           sck_m, 
   output  wire           tx0, 
   output  wire           tx1, 
   output  wire           tx2, 
   output  wire           tx3, 
   output  wire           tx4, 
   output  wire           tx5, 
   output  wire           tx6, 
   output  wire           tx7, 
   output  wire           tx_data_rdy, 
   output  wire    [1:0]  tx_elink2bit
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire        cs_active_c;
wire        cs_active_m;
wire  [9:0] data_10bit_in_dbg;
wire        dbg_elink                = 1'b0;
wire        dbg_spi                  = 1'b0;
wire        debug_mode               = 1'b0;
reg         def_value_1;
wire        endwait_all              = 1'b0;
wire        irq_can_rec_in;
wire        irq_can_tra_in;
wire        irq_elink_dbg;
wire        irq_elink_dbg_in;
wire        irq_elink_dbg_in_active;
wire        irq_elink_rec_in;
wire        irq_elink_tra_in;
wire  [4:0] mon_bus_cnt;
wire  [4:0] n_buses                  = 5'b11111;
wire        osc_auto_trim_mopshub    = 1'b1;
wire  [4:0] power_bus_cnt;
wire        rdy_dbg;
wire        rst;
wire        rst_bus;
wire        rx10;
wire        rx11;
wire        rx12;
wire        rx13;
wire        rx14;
wire        rx15;
wire        rx8;
wire        rx9;
wire        rx_data_rdy_in;
wire        rx_fifo_full_in;
wire        rx_fifo_full_rdy;
wire  [3:0] state_o;
wire        test_can_core            = 1'b0;
wire        test_uart_core           = 1'b0;
wire        tx10;
wire        tx11;
wire        tx12;
wire        tx13;
wire        tx14;
wire        tx15;
wire        tx8;
wire        tx9;
wire        tx_data_rdy_in;
wire        tx_efifo_full_in;
wire        tx_fifo_full_rdy;
wire        word10b_rdy;


// Instances 
demux1_16_1bit cs_active_c_mux( 
   .def_value  (def_value_1), 
   .sel        (power_bus_cnt), 
   .input_port (cs_active_c), 
   .output0    (cs_c0), 
   .output1    (cs_c1), 
   .output2    (cs_c2), 
   .output3    (cs_c3), 
   .output4    (cs_c4), 
   .output5    (cs_c5), 
   .output6    (cs_c6), 
   .output7    (cs_c7), 
   .output8    (cs_c8), 
   .output9    (cs_c9), 
   .output10   (cs_c10), 
   .output11   (cs_c11), 
   .output12   (cs_c12), 
   .output13   (cs_c13), 
   .output14   (cs_c14), 
   .output15   (cs_c15)
); 

demux1_16_1bit cs_active_c_mux1( 
   .def_value  (def_value_1), 
   .sel        (mon_bus_cnt), 
   .input_port (cs_active_m), 
   .output0    (cs_m0), 
   .output1    (cs_m1), 
   .output2    (cs_m2), 
   .output3    (cs_m3), 
   .output4    (cs_m4), 
   .output5    (cs_m5), 
   .output6    (cs_m6), 
   .output7    (cs_m7), 
   .output8    (cs_m8), 
   .output9    (cs_m9), 
   .output10   (cs_m10), 
   .output11   (cs_m11), 
   .output12   (cs_m12), 
   .output13   (cs_m13), 
   .output14   (cs_m14), 
   .output15   (cs_m15)
); 

elink_data_gen_SM elink_data_gen_dbg( 
   .clk                (clk_40), 
   .rst                (rst), 
   .irq_elink_tra      (), 
   .state_o            (state_o), 
   .start_read_elink   (), 
   .end_read_elink     (), 
   .cnt_done           (), 
   .buffer_en          (), 
   .data_tra_in        (), 
   .rst_cnt            (), 
   .counter_gen_en     (), 
   .test_can_core      (test_can_core), 
   .test_uart_core     (test_uart_core), 
   .tx_uart_ready      (), 
   .data_10bit_in_dbg  (data_10bit_in_dbg), 
   .rdy_dbg            (rdy_dbg), 
   .irq_elink_dbg      (irq_elink_dbg_in), 
   .tx_uart_valid      (), 
   .tx_uart_data       (), 
   .tx_uart_addr       (), 
   .rx_uart_valid      (), 
   .rx_uart_addr_valid (), 
   .rx_uart_ready      (), 
   .rx_uart_addr_ready (), 
   .rx_uart_addr       ()
); 

mopshub_top_16bus mopshub_top_16bus0( 
   .clk                   (clk_40), 
   .data_10bit_in_dbg     (data_10bit_in_dbg), 
   .dbg_elink             (irq_elink_dbg_in_active), 
   .dbg_spi               (dbg_spi), 
   .debug_mode            (debug_mode), 
   .endwait_all           (endwait_all), 
   .miso_c                (miso_c), 
   .miso_m                (miso_m), 
   .n_buses               (n_buses), 
   .osc_auto_trim_mopshub (osc_auto_trim_mopshub), 
   .rdy_dbg               (rdy_dbg), 
   .rst                   (rst), 
   .rx0                   (rx0), 
   .rx1                   (rx1), 
   .rx10                  (rx10), 
   .rx11                  (rx11), 
   .rx12                  (rx12), 
   .rx13                  (rx13), 
   .rx14                  (rx14), 
   .rx15                  (rx15), 
   .rx2                   (rx2), 
   .rx3                   (rx3), 
   .rx4                   (rx4), 
   .rx5                   (rx5), 
   .rx6                   (rx6), 
   .rx7                   (rx7), 
   .rx8                   (rx8), 
   .rx9                   (rx9), 
   .rx_elink2bit          (rx_elink2bit), 
   .cs_active_c           (cs_active_c), 
   .cs_active_m           (cs_active_m), 
   .irq_can_rec           (irq_can_rec_in), 
   .irq_can_tra           (irq_can_tra_in), 
   .irq_elink_rec         (irq_elink_rec_in), 
   .irq_elink_tra         (irq_elink_tra_in), 
   .mon_bus_cnt           (mon_bus_cnt), 
   .mosi_c                (mosi_c), 
   .mosi_m                (mosi_m), 
   .power_bus_cnt         (power_bus_cnt), 
   .rst_bus               (rst_bus), 
   .rx_data_rdy           (rx_data_rdy_in), 
   .rx_fifo_full          (rx_fifo_full_in), 
   .sck_c                 (sck_c), 
   .sck_m                 (sck_m), 
   .tx0                   (tx0), 
   .tx1                   (tx1), 
   .tx10                  (tx10), 
   .tx11                  (tx11), 
   .tx12                  (tx12), 
   .tx13                  (tx13), 
   .tx14                  (tx14), 
   .tx15                  (tx15), 
   .tx2                   (tx2), 
   .tx3                   (tx3), 
   .tx4                   (tx4), 
   .tx5                   (tx5), 
   .tx6                   (tx6), 
   .tx7                   (tx7), 
   .tx8                   (tx8), 
   .tx9                   (tx9), 
   .tx_data_rdy           (tx_data_rdy_in), 
   .tx_efifo_full         (tx_efifo_full_in), 
   .tx_elink2bit          (tx_elink2bit), 
   .word10b_rdy           (word10b_rdy)
); 

output_diff_buff_clk output_diff_buff_clk0( 
   .clk_in    (clk_m), 
   .locked    (locked), 
   .clk_out_p (clk_out_p), 
   .clk_out_n (clk_out_n)
); 

top_led_for_synth top_led_for_synth0( 
   .clk                  (clk_40), 
   .irq_can_rec_in       (irq_can_rec_in), 
   .irq_can_tra_in       (irq_can_tra_in), 
   .irq_elink_dbg_in     (irq_elink_dbg_in_active), 
   .irq_elink_rec_in     (irq_elink_rec_in), 
   .irq_elink_tra_in     (irq_elink_tra_in), 
   .rst                  (rst), 
   .rx_data_rdy_in       (rx_data_rdy_in), 
   .rx_fifo_full_rdy_in  (rx_fifo_full_in), 
   .tx_data_rdy_in       (tx_data_rdy_in), 
   .tx_fifo_full_rdy_in  (tx_efifo_full_in), 
   .irq_can_rec_out      (irq_can_rec), 
   .irq_can_tra_out      (irq_can_tra), 
   .irq_elink_dbg_out    (irq_elink_dbg), 
   .irq_elink_rec_out    (irq_elink_rec), 
   .irq_elink_tra_out    (irq_elink_tra), 
   .rx_data_rdy_out      (rx_data_rdy), 
   .rx_fifo_full_rdy_out (tx_data_rdy), 
   .tx_data_rdy_out      (rx_fifo_full_rdy), 
   .tx_fifo_full_rdy_out (tx_fifo_full_rdy)
); 

// HDL Embedded Text Block 2 eb2
// eb1 1                                        
assign rst = !reset;                               
initial def_value_1       = 1'b1;














// HDL Embedded Text Block 3 eb3
// eb1 1                                        
assign irq_elink_dbg_in_active = dbg_elink && irq_elink_dbg_in;                                   










endmodule // mopshub_top_board_16bus

