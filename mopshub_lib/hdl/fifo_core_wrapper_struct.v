//
// Module mopshub_lib.fifo_core_wrapper.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 15:38:36 07/10/23
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module fifo_core_wrapper( 
   // Port Declarations
   input   wire    [7:0]  Kchar_comma, 
   input   wire           clk_elink, 
   input   wire    [9:0]  din_fifo, 
   input   wire           fclk, 
   input   wire           flush_fifo, 
   input   wire           rd_en, 
   input   wire           rst, 
   input   wire           wr_en, 
   output  wire    [9:0]  dout_fifo, 
   output  wire           empty_fifo, 
   output  wire           full_fifo, 
   output  wire           rdy_fifo, 
   output  wire           read_fifo_empty
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire        aempty;
wire        afull;
reg         clk_en;
wire  [9:0] dout10bit;
wire  [9:0] dout10bit_async_fifo;
wire  [9:0] dout_async_fifo;
reg   [9:0] dout_async_fifo_reg;
reg   [9:0] dout_fifo_reg;
reg         dout_rdy_async_fifo_reg;
reg         dout_rdy_fifo_reg;
reg         rd_en_data;
reg         rd_en_data_tx;
wire        rd_en_s;
wire        rd_en_s_async;
wire        rdy_async_fifo;
wire        rst_async_fifo;
wire        rst_fifo;

// ModuleWare signal declarations(v1.12) for instance 'fifo_downstream_ip' of 'fifo'
reg [9:0] mw_fifo_downstream_ipreg_cval0;
reg [9:0] mw_fifo_downstream_ipreg_cval1;
reg [9:0] mw_fifo_downstream_ipreg_cval2;
reg [9:0] mw_fifo_downstream_ipreg_cval3;
reg [9:0] mw_fifo_downstream_ipreg_cval4;
reg [9:0] mw_fifo_downstream_ipreg_cval5;
reg [9:0] mw_fifo_downstream_ipreg_cval6;
reg [9:0] mw_fifo_downstream_ipreg_cval7;
reg [9:0] mw_fifo_downstream_ipreg_cval8;
reg [9:0] mw_fifo_downstream_ipreg_cval9;
reg [9:0] mw_fifo_downstream_ipreg_cval10;
wire [9:0] mw_fifo_downstream_ipreg_nval0;
wire [9:0] mw_fifo_downstream_ipreg_nval1;
wire [9:0] mw_fifo_downstream_ipreg_nval2;
wire [9:0] mw_fifo_downstream_ipreg_nval3;
wire [9:0] mw_fifo_downstream_ipreg_nval4;
wire [9:0] mw_fifo_downstream_ipreg_nval5;
wire [9:0] mw_fifo_downstream_ipreg_nval6;
wire [9:0] mw_fifo_downstream_ipreg_nval7;
wire [9:0] mw_fifo_downstream_ipreg_nval8;
wire [9:0] mw_fifo_downstream_ipreg_nval9;
wire [9:0] mw_fifo_downstream_ipreg_nval10;
wire mw_fifo_downstream_iptemp_rena;
wire mw_fifo_downstream_iptemp_wena;
wire mw_fifo_downstream_iptemp_full;
wire mw_fifo_downstream_iptemp_empty;
reg [3:0] mw_fifo_downstream_ipaddr_cval;
wire [3:0] mw_fifo_downstream_ipaddr_nval;


// Instances 
fifo_async #(10,18) fifo_async1( 
   .wclk      (fclk), 
   .wrst_n    (rst_async_fifo), 
   .winc      (wr_en), 
   .wdata     (din_fifo), 
   .wfull     (), 
   .awfull    (), 
   .rclk      (clk_elink), 
   .rrst_n    (rst_async_fifo), 
   .rinc      (rd_en_s_async), 
   .dout_fifo (dout10bit_async_fifo), 
   .rempty    (read_fifo_empty), 
   .arempty   ()
); 

// HDL Embedded Text Block 1 eb1
initial dout_rdy_async_fifo_reg  = 1'b0;
initial dout_async_fifo_reg      = {2'b11,8'b10111100};
initial rd_en_data_tx         = 1'b0;


//assign dout_async_fifo = dout_async_fifo_reg;
//assign rdy_async_fifo = dout_rdy_async_fifo_reg;
assign dout_fifo = dout_async_fifo_reg;
assign rdy_fifo = dout_rdy_async_fifo_reg;

assign rd_en_s_async     = (rd_en && !read_fifo_empty);               
assign rst_async_fifo  = (rst   && !flush_fifo);

always @ (posedge clk_elink)
  if (!rst) rd_en_data_tx       <=1'b0;
  else rd_en_data_tx  <= rd_en_s_async;  
                          
always @ (posedge clk_elink)
  if (!rst) 
  begin 
  dout_async_fifo_reg       <={2'b11,Kchar_comma};
  dout_rdy_async_fifo_reg   <= 1'b0;
  end
  else
    begin
      if (rd_en_data_tx == 1)      
      begin
        dout_async_fifo_reg  <= dout10bit_async_fifo ;
        dout_rdy_async_fifo_reg   <= 1'b1;
      end
      else
      begin                  
        dout_async_fifo_reg  <= dout_async_fifo_reg; 
        dout_rdy_async_fifo_reg   <= 1'b0;
      end
    end                                     




// HDL Embedded Text Block 2 eb2
initial dout_rdy_fifo_reg  = 1'b0;
initial dout_fifo_reg      = {2'b11,8'b10111100};
initial rd_en_data         = 1'b0;
initial clk_en             = 1;

assign dout_async_fifo = dout_fifo_reg;
assign rdy_async_fifo  = dout_rdy_fifo_reg;
assign rd_en_s   = (rd_en && !empty_fifo);
assign rst_fifo  = (rst   && !flush_fifo);

always @ (posedge fclk)
  if (!rst) rd_en_data   <=1'b0;
    else    rd_en_data   <= rd_en_s;   
    
      
always @ (posedge fclk)
  if (!rst) 
  begin 
  dout_fifo_reg       <={2'b11,Kchar_comma};
  dout_rdy_fifo_reg   <= 1'b0;
  end
  else
    begin
      if (rd_en_data == 1)      
      begin
        dout_fifo_reg  <= dout10bit ;
        dout_rdy_fifo_reg   <= 1'b1;
      end
      else
      begin                  
        dout_fifo_reg  <= dout_fifo_reg; 
        dout_rdy_fifo_reg   <= 1'b0;
      end
    end                                     


















































































































// ModuleWare code(v1.12) for instance 'fifo_downstream_ip' of 'fifo'
assign full_fifo = mw_fifo_downstream_iptemp_full;
assign empty_fifo = mw_fifo_downstream_iptemp_empty;
assign dout10bit = mw_fifo_downstream_ipreg_cval0;
assign afull = ~(mw_fifo_downstream_iptemp_full);
assign aempty = ~(mw_fifo_downstream_iptemp_empty);
assign mw_fifo_downstream_iptemp_rena = rst_fifo & rd_en_s & ~mw_fifo_downstream_iptemp_empty;
assign mw_fifo_downstream_iptemp_wena = rst_fifo & wr_en & ~mw_fifo_downstream_iptemp_full;
assign mw_fifo_downstream_iptemp_empty = (mw_fifo_downstream_ipaddr_cval == 0);
assign mw_fifo_downstream_iptemp_full = (mw_fifo_downstream_ipaddr_cval == 10);

assign mw_fifo_downstream_ipaddr_nval = (~rst_fifo) ? 0
   : mw_fifo_downstream_iptemp_wena ? mw_fifo_downstream_iptemp_rena ? mw_fifo_downstream_ipaddr_cval : mw_fifo_downstream_ipaddr_cval + 1'b1
   : mw_fifo_downstream_iptemp_rena ? mw_fifo_downstream_ipaddr_cval - 1'b1
   : mw_fifo_downstream_ipaddr_cval;
always @(posedge fclk)
begin : fifo_downstream_ipseq_proc
   if (clk_en)
      mw_fifo_downstream_ipaddr_cval = mw_fifo_downstream_ipaddr_nval;
end

always @(posedge fclk)
begin : fifo_downstream_ipmove_proc
   if (clk_en)
   begin
      mw_fifo_downstream_ipreg_cval0[9:0]  = mw_fifo_downstream_ipreg_nval0[9:0] ;
      mw_fifo_downstream_ipreg_cval1[9:0]  = mw_fifo_downstream_ipreg_nval1[9:0] ;
      mw_fifo_downstream_ipreg_cval2[9:0]  = mw_fifo_downstream_ipreg_nval2[9:0] ;
      mw_fifo_downstream_ipreg_cval3[9:0]  = mw_fifo_downstream_ipreg_nval3[9:0] ;
      mw_fifo_downstream_ipreg_cval4[9:0]  = mw_fifo_downstream_ipreg_nval4[9:0] ;
      mw_fifo_downstream_ipreg_cval5[9:0]  = mw_fifo_downstream_ipreg_nval5[9:0] ;
      mw_fifo_downstream_ipreg_cval6[9:0]  = mw_fifo_downstream_ipreg_nval6[9:0] ;
      mw_fifo_downstream_ipreg_cval7[9:0]  = mw_fifo_downstream_ipreg_nval7[9:0] ;
      mw_fifo_downstream_ipreg_cval8[9:0]  = mw_fifo_downstream_ipreg_nval8[9:0] ;
      mw_fifo_downstream_ipreg_cval9[9:0]  = mw_fifo_downstream_ipreg_nval9[9:0] ;
      mw_fifo_downstream_ipreg_cval10[9:0]  = mw_fifo_downstream_ipreg_nval10[9:0] ;
   end
end
assign mw_fifo_downstream_ipreg_nval0[9:0] = mw_fifo_downstream_iptemp_wena ? mw_fifo_downstream_iptemp_rena ? (mw_fifo_downstream_ipaddr_cval == 0) ? din_fifo : mw_fifo_downstream_ipreg_cval1[9:0] : mw_fifo_downstream_ipreg_cval0[9:0] : mw_fifo_downstream_iptemp_rena ? mw_fifo_downstream_ipreg_cval1[9:0] : mw_fifo_downstream_ipreg_cval0[9:0];
assign mw_fifo_downstream_ipreg_nval1[9:0] = mw_fifo_downstream_iptemp_wena ? mw_fifo_downstream_iptemp_rena ? (mw_fifo_downstream_ipaddr_cval == 1) ? din_fifo : mw_fifo_downstream_ipreg_cval2[9:0]
    : (mw_fifo_downstream_ipaddr_cval == 0) ? din_fifo : mw_fifo_downstream_ipreg_cval1[9:0]
    : mw_fifo_downstream_iptemp_rena ? mw_fifo_downstream_ipreg_cval2[9:0] : mw_fifo_downstream_ipreg_cval1[9:0];
assign mw_fifo_downstream_ipreg_nval2[9:0] = mw_fifo_downstream_iptemp_wena ? mw_fifo_downstream_iptemp_rena ? (mw_fifo_downstream_ipaddr_cval == 2) ? din_fifo : mw_fifo_downstream_ipreg_cval3[9:0]
    : (mw_fifo_downstream_ipaddr_cval == 1) ? din_fifo : mw_fifo_downstream_ipreg_cval2[9:0]
    : mw_fifo_downstream_iptemp_rena ? mw_fifo_downstream_ipreg_cval3[9:0] : mw_fifo_downstream_ipreg_cval2[9:0];
assign mw_fifo_downstream_ipreg_nval3[9:0] = mw_fifo_downstream_iptemp_wena ? mw_fifo_downstream_iptemp_rena ? (mw_fifo_downstream_ipaddr_cval == 3) ? din_fifo : mw_fifo_downstream_ipreg_cval4[9:0]
    : (mw_fifo_downstream_ipaddr_cval == 2) ? din_fifo : mw_fifo_downstream_ipreg_cval3[9:0]
    : mw_fifo_downstream_iptemp_rena ? mw_fifo_downstream_ipreg_cval4[9:0] : mw_fifo_downstream_ipreg_cval3[9:0];
assign mw_fifo_downstream_ipreg_nval4[9:0] = mw_fifo_downstream_iptemp_wena ? mw_fifo_downstream_iptemp_rena ? (mw_fifo_downstream_ipaddr_cval == 4) ? din_fifo : mw_fifo_downstream_ipreg_cval5[9:0]
    : (mw_fifo_downstream_ipaddr_cval == 3) ? din_fifo : mw_fifo_downstream_ipreg_cval4[9:0]
    : mw_fifo_downstream_iptemp_rena ? mw_fifo_downstream_ipreg_cval5[9:0] : mw_fifo_downstream_ipreg_cval4[9:0];
assign mw_fifo_downstream_ipreg_nval5[9:0] = mw_fifo_downstream_iptemp_wena ? mw_fifo_downstream_iptemp_rena ? (mw_fifo_downstream_ipaddr_cval == 5) ? din_fifo : mw_fifo_downstream_ipreg_cval6[9:0]
    : (mw_fifo_downstream_ipaddr_cval == 4) ? din_fifo : mw_fifo_downstream_ipreg_cval5[9:0]
    : mw_fifo_downstream_iptemp_rena ? mw_fifo_downstream_ipreg_cval6[9:0] : mw_fifo_downstream_ipreg_cval5[9:0];
assign mw_fifo_downstream_ipreg_nval6[9:0] = mw_fifo_downstream_iptemp_wena ? mw_fifo_downstream_iptemp_rena ? (mw_fifo_downstream_ipaddr_cval == 6) ? din_fifo : mw_fifo_downstream_ipreg_cval7[9:0]
    : (mw_fifo_downstream_ipaddr_cval == 5) ? din_fifo : mw_fifo_downstream_ipreg_cval6[9:0]
    : mw_fifo_downstream_iptemp_rena ? mw_fifo_downstream_ipreg_cval7[9:0] : mw_fifo_downstream_ipreg_cval6[9:0];
assign mw_fifo_downstream_ipreg_nval7[9:0] = mw_fifo_downstream_iptemp_wena ? mw_fifo_downstream_iptemp_rena ? (mw_fifo_downstream_ipaddr_cval == 7) ? din_fifo : mw_fifo_downstream_ipreg_cval8[9:0]
    : (mw_fifo_downstream_ipaddr_cval == 6) ? din_fifo : mw_fifo_downstream_ipreg_cval7[9:0]
    : mw_fifo_downstream_iptemp_rena ? mw_fifo_downstream_ipreg_cval8[9:0] : mw_fifo_downstream_ipreg_cval7[9:0];
assign mw_fifo_downstream_ipreg_nval8[9:0] = mw_fifo_downstream_iptemp_wena ? mw_fifo_downstream_iptemp_rena ? (mw_fifo_downstream_ipaddr_cval == 8) ? din_fifo : mw_fifo_downstream_ipreg_cval9[9:0]
    : (mw_fifo_downstream_ipaddr_cval == 7) ? din_fifo : mw_fifo_downstream_ipreg_cval8[9:0]
    : mw_fifo_downstream_iptemp_rena ? mw_fifo_downstream_ipreg_cval9[9:0] : mw_fifo_downstream_ipreg_cval8[9:0];
assign mw_fifo_downstream_ipreg_nval9[9:0] = mw_fifo_downstream_iptemp_wena ? mw_fifo_downstream_iptemp_rena ? (mw_fifo_downstream_ipaddr_cval == 9) ? din_fifo : mw_fifo_downstream_ipreg_cval10[9:0]
    : (mw_fifo_downstream_ipaddr_cval == 8) ? din_fifo : mw_fifo_downstream_ipreg_cval9[9:0]
    : mw_fifo_downstream_iptemp_rena ? mw_fifo_downstream_ipreg_cval10[9:0] : mw_fifo_downstream_ipreg_cval9[9:0];
assign mw_fifo_downstream_ipreg_nval10[9:0] = mw_fifo_downstream_iptemp_wena ? mw_fifo_downstream_iptemp_rena ? mw_fifo_downstream_ipreg_cval10[9:0]
    : (mw_fifo_downstream_ipaddr_cval == 9) ? din_fifo : mw_fifo_downstream_ipreg_cval10[9:0]
    : mw_fifo_downstream_iptemp_rena ? mw_fifo_downstream_ipreg_cval10[9:0] : mw_fifo_downstream_ipreg_cval10[9:0];

// ModuleWare code(v1.12) for instance 'fifo_downstream_ip1' of 'fifo'

// ModuleWare code(v1.12) for instance 'fifo_downstream_ip2' of 'fifo'

endmodule // fifo_core_wrapper

