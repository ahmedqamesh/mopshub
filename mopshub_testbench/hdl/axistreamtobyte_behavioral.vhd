-- VHDL Entity mopshub_testbench.AxiStreamToByte.symbol
--
-- Created:
--          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
--          at - 14:09:59 04/06/22
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
--
LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
LIBRARY mopshub_testbench;
USE mopshub_testbench.axi_stream_package.all;
LIBRARY mopshub_testbench;
USE mopshub_testbench.all;

--  Uncomment the following library declaration if using
--  arithmetic functions with Signed or Unsigned values
-- use IEEE.NUMERIC_STD.ALL;
-- 
--  Uncomment the following library declaration if instantiating
--  any Xilinx leaf cells in this code.
-- library UNISIM;
-- use UNISIM.VComponents.all;
-- 
ENTITY AxiStreamToByte IS
   GENERIC( 
      BYTES             : integer   := 1;
      BLOCKSIZE         : integer   := 1024;
      USE_BUILT_IN_FIFO : std_logic := '1'
   );
   PORT( 
      clk40         : IN     std_logic;                              --BC clock for DataIn
      reset         : IN     std_logic;                              --Acitve high reset
      EnableIn      : IN     std_logic;                              --Enable epath (register map)
      s_axis        : IN     axis_8_type;                            --FIFO write port (axi stream)
      s_axis_tready : OUT    std_logic;                              --FIFO write tready (axi stream)
      s_axis_aclk   : IN     std_logic;                              --FIFO write clock (axi stream)
      m_axis_tready : IN     std_logic;                              --From Protocol Encoder;
      almost_full   : OUT    std_logic;
      DataOut       : OUT    std_logic_vector (BYTES*8-1 DOWNTO 0);  --8b Data to Protocol Encoder
      DataOutValid  : OUT    std_logic_vector (BYTES-1 DOWNTO 0);    --Data validated to Encoder, (always 1 if enabled)
      EOP           : OUT    std_logic_vector (BYTES-1 DOWNTO 0)     --from tlast
   );

-- Declarations

END AxiStreamToByte ;

--
-- VHDL Architecture mopshub_testbench.AxiStreamToByte.Behavioral
--
-- Created:
--          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
--          at - 14:10:03 04/06/22
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
--


LIBRARY mopshub_testbench;

ARCHITECTURE Behavioral OF AxiStreamToByte IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL s_axis_aresetn  : std_logic;
   SIGNAL m_axis          : axis_8_type;
   SIGNAL EnableIn_aclk   : std_logic;
   SIGNAL m_axis_tready_s : std_logic;


   -- Component Declarations
   COMPONENT Axis8Fifo
   GENERIC (
      DEPTH             : integer;
      CLOCKING_MODE     : string               := "independent_clock";
      RELATED_CLOCKS    : integer range 0 to 1 := 0;
      FIFO_MEMORY_TYPE  : string               := "auto";
      PACKET_FIFO       : string               := "false";
      USE_BUILT_IN_FIFO : std_logic            := '1'
   );
   PORT (
      -- axi stream slave
      s_axis_aresetn : IN     std_logic ;
      s_axis_aclk    : IN     std_logic ;
      s_axis         : IN     axis_8_type ;
      s_axis_tready  : OUT    std_logic ;
      -- axi stream master
      m_axis_aclk    : IN     std_logic ;
      m_axis         : OUT    axis_8_type ;
      m_axis_tready  : IN     std_logic ;
      almost_full    : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : Axis8Fifo USE ENTITY mopshub_testbench.Axis8Fifo;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 2 eb1
   --NICO: same clock domain? does it need clock synchronization?
   s_axis_aresetn <= not reset;

   -- HDL Embedded Text Block 3 eb2
   -- clock synch process (double buffer)
   process(clk40)
       variable EnableIn_p1: std_logic;
   begin
       if rising_edge(clk40) then
           EnableIn_aclk <= EnableIn_p1;
           EnableIn_p1 := EnableIn;
       end if;
   end process;


   -- Instance port mappings.
   fifo0 : Axis8Fifo
      GENERIC MAP (
         DEPTH             => BLOCKSIZE*2,
         CLOCKING_MODE     => "independent_clock",
         RELATED_CLOCKS    => 0,
         FIFO_MEMORY_TYPE  => "auto",
         PACKET_FIFO       => "false",
         USE_BUILT_IN_FIFO => USE_BUILT_IN_FIFO
      )
      PORT MAP (
         s_axis_aresetn => s_axis_aresetn,
         s_axis_aclk    => s_axis_aclk,
         s_axis         => s_axis,
         s_axis_tready  => s_axis_tready,
         m_axis_aclk    => clk40,
         m_axis         => m_axis,
         m_axis_tready  => m_axis_tready_s,
         almost_full    => almost_full
      );

   g_onebyte: IF BYTES = 1 GENERATE
   BEGIN
      -- HDL Embedded Text Block 1 g_onebyte
      DataOut <= m_axis.tdata(BYTES*8-1 downto 0);
      DataOutValid(0) <= m_axis.tvalid when EnableIn_aclk = '1' else '0';
      EOP(0) <= m_axis.tlast when EnableIn_aclk = '1' else '0';
      m_axis_tready_s <= m_axis_tready when EnableIn_aclk = '1' else '1'; --When the Epath is disabled we need to constantly read out the FIFO, otherwise the CRFromHost gets blocked.

   END GENERATE g_onebyte;

   g_multibyte: IF BYTES > 1 GENERATE
   BEGIN
   END GENERATE g_multibyte;

END Behavioral;
