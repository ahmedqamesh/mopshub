//
// Module mopshub_testbench.mops_top_level.struct
//
// Created:
//          by - dcs.dcs (chipdev2.physik.uni-wuppertal.de)
//          at - 21:16:47 09/06/21
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.4 (Build 4)
//

`resetall
`timescale 1ns/10ps
module mops_top_level( 
   // Port Declarations
   input   wire    [6:0]  can_nodeid, 
   input   wire           clk,            // write FIFO clk
   input   wire           osc_auto_trim, 
   input   wire           rst_n, 
   input   wire           rxmops, 
   output  wire           ready_osc, 
   output  wire           txmops
);


// Internal Declarations


// Local declarations

// Internal signal declarations
wire         adc_clk;
wire  [11:0] adc_data;
wire         adc_eoc;
wire         adc_reset;
wire  [39:0] adc_select;
wire         adc_soc;
wire  [5:0]  adc_trim;
wire  [5:0]  ftrim_osc;
wire  [5:0]  ftrim_pads;
reg   [5:0]  ftrim_pads_reg  = 6'b111100;
wire         osc_reset_n;
wire         rst;


// Instances 
adcdumdata adcdumdata0( 
   .clk        (clk), 
   .rst        (rst), 
   .soc        (adc_soc), 
   .eoc        (adc_eoc), 
   .dataout    (adc_data), 
   .adc_select (adc_select)
); 

top_level top_level_mops0( 
   .clk           (clk), 
   .rst_n         (rst_n), 
   .osc_reset_n   (osc_reset_n), 
   .can_rx        (rxmops), 
   .can_tx        (txmops), 
   .can_nodeid    (can_nodeid), 
   .adc_clk       (adc_clk), 
   .adc_reset     (adc_reset), 
   .adc_trim      (adc_trim), 
   .adc_select    (adc_select), 
   .adc_soc       (adc_soc), 
   .adc_eoc       (adc_eoc), 
   .adc_data      (adc_data), 
   .osc_auto_trim (osc_auto_trim), 
   .ftrim_pads    (ftrim_pads), 
   .ftrim_osc     (ftrim_osc), 
   .ready_osc     (ready_osc)
); 

// HDL Embedded Text Block 1 assigning
// eb1 1 
/******** This "ftrim_pads_reg"value must be assigned correctly in order to run the testbench smoothly for both cases
i.e Automated trimming enabled / disabled. The value is dependent on "mops_osc" module because this is from where the MOPS 
chip gets the OSC / CLK signal. e.g if Automated trimming is enabled and Canakari generates trimming code of "111100" then this is 
the value which should be used for "ftrim_pads_reg" to correctly trim the dummy oscillator and get the correct frequecny in the case
automated trimming is disabled.
*/
assign ftrim_pads = ftrim_pads_reg;                                       

endmodule // mops_top_level

