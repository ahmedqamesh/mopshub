#*****************************************************************************************
# Vivado (TM) v2020.1 (64-bit)
#
# mopshub_build.tcl: Tcl script for re-creating project 'mopshub_board'
#
# Generated by Vivado on Wed Feb 01 11:31:12 CET 2023
# IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (mopshub_build.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/run/media/dcs/data2/workspaces/mopshub_board/mopshub_board.srcs/sources_1/bd/mopshub_design_32bus/mopshub_design_32bus.bd"
#    "/run/media/dcs/data2/workspaces/mopshub_board/mopshub_board.srcs/sources_1/bd/mopshub_design_32bus/hdl/mopshub_design_32bus_wrapper.v"
#    "/run/media/dcs/data2/workspaces/mopshub_board/mopshub_board.srcs/sources_1/bd/mopshub_design_16bus/mopshub_design_16bus.bd"
#    "/run/media/dcs/data2/workspaces/mopshub_board/mopshub_board.srcs/sources_1/bd/mopshub_design_16bus/hdl/mopshub_design_16bus_wrapper.v"
#    "/run/media/dcs/data2/workspaces/mopshub_board/mopshub_board.srcs/constrs_1/new/mopshub_top_16bus.xdc"
#    "/run/media/dcs/data2/workspaces/mopshub_board/mopshub_board.srcs/constrs_1/new/mopshub_top_32bus.xdc"
#
# 3. The following remote source files that were added to the original project:-
#
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Accumulator.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Add_PID.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/CLK_Counter.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Control_FSM.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Control_Sys.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Diff.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Ftrim_En.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Multi.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Multi_i.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Output_Scaling.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/PID_Regler.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Phasenfehler_Reg.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/accmaskreg2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/bit_counter.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/biterrordetect2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/bitstream_shift_register.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/bittime2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/bittiming2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/bridge_controller_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/buffer_rec_elink_spi.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/buffer_rec_spi_data.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/buffer_tra_elink_spi.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/buffer_tristate_busid.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/buffer_tristate_elink.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/bus_control_sm_fsm.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/bus_rec_sm_fsm.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/can2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/can_elink_bridge_sm_fsm.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/can_interface_sm_fsm.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/can_spi_debuger_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/can_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/canakari_0_7_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/canakari_interface_mopshub_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/canakari_top_32bus_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/caninterface.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/control_bus_struct.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/counter2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/dec1_1_32bit.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/dec32_1_16bit.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/dec_8b10b_mopshub.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/decapsulation2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/demux1_32_16bit.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/demux1_32_1bit.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/destuffing2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/edgepuffer2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/elink_core_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/elink_data_gen_sm_fsm.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/elink_interface_rec_sm_fsm.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/elink_interface_tra_sm_fsm.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/elink_proc_in_dec8b10b_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/elink_proc_out_enc8b10b_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/elink_to_fifo_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/enc_8b10b_mopshub.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/encapsulation2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/equal_id2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/erbcount2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/fastshift2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/faultfsm2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/fce2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/fifo_core_wrapper_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/fifo_to_elink_struct.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/fsm_register2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/generalregister2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/interruptregister2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/interruptunit2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/iocpuavalon2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/llc2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/llc_fsm2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/mac2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/macfsm2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/meslencompare2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/monitor_bus_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/mopshub_top_32bus_struct.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/multiplexeravalon2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/mux32_1_16bit.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/mux32_1_1bit.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/mux4_Nbit.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/mux8_Nbit.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/node_rec_mux_32_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/node_tra_demux_32_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/osc_trim_sm_fsm.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/output_diff_buff_clk.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/prescale2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/prescalereg2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/rcrc_cell2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/rcrc_top2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/read_mux2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/ready_counter.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/rec2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/rec_elink_buf.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/rec_mes_buf.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/recarbitreg2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/recmescontrolreg2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/recmeslen2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/recregister2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/reset_mac2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/resetgen2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/rshift_cell2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/rshift_top2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/smpldbit_reg2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/spi_master.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/stuffing2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/sum2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/sync_detector_struct.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/tcrc_cell2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/tcrc_top2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/tec2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/timecount2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/timeout_rst_watchdog.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/timeoutrst_module.v"
#    "/home/dcs/git/mopshub/mopshub_testbench/hdl/top_led_enable_sm_fsm.v"
#    "/home/dcs/git/mopshub/mopshub_testbench/hdl/top_led_for_synth_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/tra_elink_buf.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/tra_mes_buf.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/transmesconreg2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/transmitreg2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/triger_counter.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/tseg_reg2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/tshift_cell2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/tshift_top2.v"
#    "/home/dcs/git/CANAkari/MOPSv2/canakari/hdl/write_demux2.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/mopsbub_top_board_32bus_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/canakari_top_16bus_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/dec16_1_16bit.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/demux1_16_16bit.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/demux1_16_1bit.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/mopshub_top_16bus_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/mux16_1_16bit.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/mux16_1_1bit.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/node_rec_mux_16_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/node_tra_demux_16_struct.v"
#    "/home/dcs/git/mopshub/mopshub_lib/hdl/mopshub_top_board_16bus_struct.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Accumulator.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Add_PID.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/CLK_Counter.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Control_FSM.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Control_Sys.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Diff.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Ftrim_En.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Multi.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Multi_i.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Output_Scaling.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/PID_Regler.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/Phasenfehler_Reg.v"
#    "/home/dcs/git/CANAkari/MOPSv2/ftrim/hdl/ready_counter.v"
#    "/home/dcs/git/mopshub/mopshub_testbench/hdl/can_pattern_gen_pkg.vhd"
#    "/home/dcs/git/CANAkari/MOPSv2/top_lib/hdl/CANFRAME.sv"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
#set origin_dir "."
#added by Qamesh
set origin_dir [file dirname [info script]]
# Create block design
 source $origin_dir/src/bd/mopshub_design_32bus.tcl
 # Generate the wrapper
 set design_name [get_bd_designs]
 make_wrapper -files [get_files $design_name.bd] -top -import
 
# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "mopshub_board"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "mopshub_build.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../../../../../run/media/dcs/data2/workspaces/mopshub_board"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a200tfbg484-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7a200tfbg484-2" -objects $obj
set_property -name "platform.board_id" -value "zed_fmc_lpc_connector_xm105_hpc_connector" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "target_simulator" -value "Questa" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "82" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "82" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "82" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "82" -objects $obj
set_property -name "webtalk.questa_launch_sim" -value "2" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "82" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "82" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "82" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Accumulator.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Add_PID.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/CLK_Counter.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Control_FSM.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Control_Sys.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Diff.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Ftrim_En.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Multi.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Multi_i.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Output_Scaling.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/PID_Regler.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Phasenfehler_Reg.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/accmaskreg2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/bit_counter.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/biterrordetect2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/bitstream_shift_register.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/bittime2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/bittiming2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/bridge_controller_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/buffer_rec_elink_spi.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/buffer_rec_spi_data.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/buffer_tra_elink_spi.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/buffer_tristate_busid.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/buffer_tristate_elink.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/bus_control_sm_fsm.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/bus_rec_sm_fsm.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/can2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/can_elink_bridge_sm_fsm.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/can_interface_sm_fsm.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/can_spi_debuger_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/can_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/canakari_0_7_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/canakari_interface_mopshub_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/canakari_top_32bus_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/caninterface.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/control_bus_struct.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/counter2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/dec1_1_32bit.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/dec32_1_16bit.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/dec_8b10b_mopshub.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/decapsulation2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/demux1_32_16bit.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/demux1_32_1bit.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/destuffing2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/edgepuffer2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/elink_core_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/elink_data_gen_sm_fsm.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/elink_interface_rec_sm_fsm.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/elink_interface_tra_sm_fsm.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/elink_proc_in_dec8b10b_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/elink_proc_out_enc8b10b_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/elink_to_fifo_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/enc_8b10b_mopshub.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/encapsulation2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/equal_id2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/erbcount2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/fastshift2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/faultfsm2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/fce2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/fifo_core_wrapper_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/fifo_to_elink_struct.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/fsm_register2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/generalregister2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/interruptregister2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/interruptunit2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/iocpuavalon2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/llc2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/llc_fsm2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/mac2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/macfsm2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/meslencompare2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/monitor_bus_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/mopshub_top_32bus_struct.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/multiplexeravalon2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/mux32_1_16bit.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/mux32_1_1bit.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/mux4_Nbit.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/mux8_Nbit.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/node_rec_mux_32_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/node_tra_demux_32_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/osc_trim_sm_fsm.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/output_diff_buff_clk.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/prescale2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/prescalereg2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/rcrc_cell2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/rcrc_top2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/read_mux2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/ready_counter.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/rec2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/rec_elink_buf.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/rec_mes_buf.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/recarbitreg2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/recmescontrolreg2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/recmeslen2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/recregister2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/reset_mac2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/resetgen2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/rshift_cell2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/rshift_top2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/smpldbit_reg2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/spi_master.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/stuffing2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/sum2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/sync_detector_struct.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/tcrc_cell2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/tcrc_top2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/tec2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/timecount2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/timeout_rst_watchdog.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/timeoutrst_module.v"] \
 [file normalize "${origin_dir}/../mopshub_testbench/hdl/top_led_enable_sm_fsm.v"] \
 [file normalize "${origin_dir}/../mopshub_testbench/hdl/top_led_for_synth_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/tra_elink_buf.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/tra_mes_buf.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/transmesconreg2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/transmitreg2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/triger_counter.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/tseg_reg2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/tshift_cell2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/tshift_top2.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/canakari/hdl/write_demux2.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/mopsbub_top_board_32bus_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/canakari_top_16bus_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/dec16_1_16bit.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/demux1_16_16bit.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/demux1_16_1bit.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/mopshub_top_16bus_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/mux16_1_16bit.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/mux16_1_1bit.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/node_rec_mux_16_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/node_tra_demux_16_struct.v"] \
 [file normalize "${origin_dir}/../mopshub_lib/hdl/mopshub_top_board_16bus_struct.v"] \
]
add_files -norecurse -fileset $obj $files

# Add local files from the original project (-no_copy_sources specified)
set files [list \
 [file normalize "${origin_dir}/../../../../../run/media/dcs/data2/workspaces/mopshub_board/mopshub_board.srcs/sources_1/bd/mopshub_design_32bus/mopshub_design_32bus.bd" ]\
 [file normalize "${origin_dir}/../../../../../run/media/dcs/data2/workspaces/mopshub_board/mopshub_board.srcs/sources_1/bd/mopshub_design_32bus/hdl/mopshub_design_32bus_wrapper.v" ]\
 [file normalize "${origin_dir}/../../../../../run/media/dcs/data2/workspaces/mopshub_board/mopshub_board.srcs/sources_1/bd/mopshub_design_16bus/mopshub_design_16bus.bd" ]\
 [file normalize "${origin_dir}/../../../../../run/media/dcs/data2/workspaces/mopshub_board/mopshub_board.srcs/sources_1/bd/mopshub_design_16bus/hdl/mopshub_design_16bus_wrapper.v" ]\
]
set added_files [add_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "mopshub_design_32bus/mopshub_design_32bus.bd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "mopshub_design_16bus/mopshub_design_16bus.bd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "registered_with_manager" -value "1" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "mopshub_design_32bus_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../../../../run/media/dcs/data2/workspaces/mopshub_board/mopshub_board.srcs/constrs_1/new/mopshub_top_16bus.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "new/mopshub_top_16bus.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../../../../run/media/dcs/data2/workspaces/mopshub_board/mopshub_board.srcs/constrs_1/new/mopshub_top_32bus.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "new/mopshub_top_32bus.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[get_files *new/mopshub_top_32bus.xdc]" -objects $obj
set_property -name "target_part" -value "xc7a200tfbg484-2" -objects $obj
set_property -name "target_ucf" -value "[get_files *new/mopshub_top_32bus.xdc]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Accumulator.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Add_PID.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/CLK_Counter.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Control_FSM.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Control_Sys.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Diff.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Ftrim_En.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Multi.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Multi_i.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Output_Scaling.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/PID_Regler.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/Phasenfehler_Reg.v"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/ftrim/hdl/ready_counter.v"] \
 [file normalize "${origin_dir}/../mopshub_testbench/hdl/can_pattern_gen_pkg.vhd"] \
 [file normalize "${origin_dir}/../../CANAkari/MOPSv2/top_lib/hdl/CANFRAME.sv"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for remote files
set file "$origin_dir/../mopshub_testbench/hdl/can_pattern_gen_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../CANAkari/MOPSv2/top_lib/hdl/CANFRAME.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "mopsbub_top_board_32bus" -objects $obj
set_property -name "top_file" -value "../mopshub_lib/hdl/mopsbub_top_board_32bus_struct.v" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7a200tfbg484-2 -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property -name "part" -value "xc7a200tfbg484-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'synth_1_copy_1' run (if not found)
if {[string equal [get_runs -quiet synth_1_copy_1] ""]} {
    create_run -name synth_1_copy_1 -part xc7a200tfbg676-2 -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1_copy_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1_copy_1]
}
set obj [get_runs synth_1_copy_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_copy_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1_copy_1] synth_1_copy_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_copy_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs synth_1_copy_1] synth_1_copy_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1_copy_1]
set_property -name "part" -value "xc7a200tfbg676-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7a200tfbg484-2 -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xc7a200tfbg484-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_1' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_1] ""]} {
    create_run -name impl_1_copy_1 -part xc7z020clg484-1 -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1_copy_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1_copy_1]
}
set obj [get_runs impl_1_copy_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_1]
set_property -name "part" -value "xc7z020clg484-1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_2' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_2] ""]} {
    create_run -name impl_1_copy_2 -part xc7z020clg484-1 -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1_copy_2]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1_copy_2]
}
set obj [get_runs impl_1_copy_2]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_2_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_2_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_2_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_2_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_2_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_2_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_2_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_2_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_2_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_2_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_2]
set_property -name "part" -value "xc7z020clg484-1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_3' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_3] ""]} {
    create_run -name impl_1_copy_3 -part xc7z020clg484-1 -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1_copy_3]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1_copy_3]
}
set obj [get_runs impl_1_copy_3]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_3_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_3_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_3_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_3_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_3_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_3_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_3_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_3_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_3_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_3_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_3]
set_property -name "part" -value "xc7z020clg484-1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_4' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_4] ""]} {
    create_run -name impl_1_copy_4 -part xc7a200tfbg484-2 -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1_copy_4]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1_copy_4]
}
set obj [get_runs impl_1_copy_4]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_4_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_4_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_4_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_4_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_4_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_4_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_4_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_4_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_4_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_4_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_4]
set_property -name "part" -value "xc7a200tfbg484-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
